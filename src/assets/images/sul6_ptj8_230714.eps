%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: ii_nu_ai_july07-34.eps
%%Creator: Adobe Illustrator(R) 24.1
%%For: interact_natcha
%%CreationDate: 13/7/2566 BE
%%BoundingBox: 0 0 188 336
%%HiResBoundingBox: 0 0 187.6244 335.9838
%%CropBox: 0 0 187.6244 335.9838
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.1.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.1.2 x408 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 34 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164360, 2020/02/13-01:07:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:32a8284e-cbbc-41da-b751-5b7df8a99338</stRef:instanceID>
            <stRef:documentID>xmp.did:32a8284e-cbbc-41da-b751-5b7df8a99338</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:32a8284e-cbbc-41da-b751-5b7df8a99338</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:9d5d014d-9696-4405-9f46-ac1eb01b429f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9d5d014d-9696-4405-9f46-ac1eb01b429f</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:32a8284e-cbbc-41da-b751-5b7df8a99338</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:32a8284e-cbbc-41da-b751-5b7df8a99338</stEvt:instanceID>
                  <stEvt:when>2023-07-13T11:33:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9d5d014d-9696-4405-9f46-ac1eb01b429f</stEvt:instanceID>
                  <stEvt:when>2023-07-13T17:57:42+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator 24.1 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2023-07-13T17:57:41+07:00</xmp:CreateDate>
         <xmp:MetadataDate>2023-07-13T17:57:42+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2023-07-13T17:57:42+07:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>80</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAUAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqsnmSGGSZ/sRqXanWiipxV5/f+YPOM2pypYXlvHbGRYol4o4VyQxBfizMCgehUGpp44q&#xA;9AgkEkEcityDqrBqg1BFa1UlfuxV5h+Y1t5uuvNmnXmj69c2Gm2apG2n2rqomui0rBpVCylo29Pg&#xA;eSU+Fh4kKp7+Wdx54+r6jaeb7+DUbqK5f9H3USRxO9sPhDOkNIwD1XvQ4qynWL/9H6bPeUBMSgiv&#xA;SpIWp6bCtTirBJfzQ1mK90+EaLLNa3VxHbvfBUjjIIPqyIvrSOqx05HkNkPI9MVej4qwn8xNIsdR&#xA;4JeXLwRGB0YLcNbF6sCoWlOe4q2+3w12NQqy+wVlsbdWLMyxICzrwYkKN2U1ofbFWFfnTp/mjUPJ&#xA;htvLWqXWj6k1wpW9tHEZoschWORvt8JJeCfAQakV+Hliqdfl4PMCeTNKg8x3SXuuwW6JqN1GQySS&#xA;cQwYOvwvVGX4h1xVkWKvDfy90YL+bF/fwyXkcaXl8rrLDI3r8g55TSNThx5qfiA+Ki5REerfnvvf&#xA;TupvkfRty93Xvt7ll7Qh9SiSXTrqJ+XCSGRW9MVehUg8R4+GKsG0DREt/NGjXFm0qW9rZ3EDqspu&#xA;kdJZXcq0gCIAsse30DY4q9BxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVplV1KsAysKMp3BB6&#xA;gjFWNQ+ULqCeGSHUAqw+uCvpNV/rD835t6oJPKpHgTXFWRW8Xo28UNeXpoqcqUrxFK0HTFWNeZvI&#xA;set3KTrcraOsqyu4h9RpFEZT0nLOPg+NmCgABiT1JOKpjpGgz2F4873SzKy8BGsXp0AWNF6OV2EV&#xA;K8anudhiqY39lBfWU1pOKxTKUYfPvt4Yqkt55TN4EWeaDgZ1nuSkBV5Qs63AXl6ppR414t2pirIc&#xA;VSbXfLp1W4ilN0YUiUgRcA6lidmoxpUDptiqc4qk3mzy7Jr+lrYpevYFZkm9eNQzfu6kDcim+9e1&#xA;MVRWj6TDpkEsMIRUkk9QRxJ6cafCqcUQs3Ffg6V+W2Ko/FWK+WfKWvaTq815fa6NUtpI5FEDWkcM&#xA;vqSNGQ7TI55UER24jdifbKo4hGVhtllMhRZVlrUp3MPr28sPLj6ileXWlRTFUBZaNJbSWbNdNItn&#xA;HInDiFDtIalmNSfoxVM8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVU7q4S2tpriQEpCjSOF3N&#xA;EFTT7shkmIxMj0FpjGyA8l17zt5tnW6vdKvxp0CAGOMxJNUb/wC/EbfY9AK0+nNRpNRmykyHI36f&#xA;IfinZ58GLFjuZ8r8z8fi9N8tXdzeeXdKu7pud1cWdvLO9AtZHiVmPEUA3PTNvjJMRfOnXZQBI8PK&#xA;9nhP5u6treqfmdZroeu3WmWmixxxXCrObe2+siVmLtV0QqSyI3LrxpTjvkZmX8PNhizYzLhLLfyG&#xA;8xeaLqLVtF8zaq+rX1pIJ7WZ1UukDniUklWlW578SKjx7LknTzjASltbHxYSkRHo9E826zLovly/&#xA;1SFY2mto6xCUkR82IVeVKEirdB1zHzZOCBl3ORgx8cxHveVP+dnmi1j0+5vrfTRaXMwinaL1SyEM&#xA;vqf7s/YVq8hyHT5ZjR1E5eoD025E9NCO1+qvxT2vM1wXj/m/zP8AmFo2u61qX6ZiXQfq0q6Rp6QQ&#xA;N6cr2zLBNJIVeRqXHpsVLfZetOINAWMpiIsp/wDkhrPnDWPJ0l75rvhqGoNeSCGdYooQIBHGVXjC&#xA;ka7MW3pXBEk3bMmJAMeRRuo6z56h/MKxs7aOxbyrJWO858xcoTEGSQNUbvI3BVCkUU1YHpJCS/lT&#xA;5784a35h13SvNAtEaLjc6Slujo4h5FJkcGvwxlowC/FjU9f2THHPg4yKCZyhxcINvTsCHj3k611K&#xA;f817q9uZr1Fga5ijEts6pPGF48nc04KDxO4+1QZhaXCIWDRnZPFf2EOVmycURQIjttX229hzNcVg&#xA;/wCcWmSaj5MeCOaWKk8blIY2l9UAMBG3EjiCSPi/mp45CdVuLHvr7WzHd7c/mwjyV5Vtp9I0i8ae&#xA;5hZYPTFo0rwkhrueX91E5KybMWooJrRRTegxXwi+aMhBkaFB7fljB2KuxV2KsbfzVKnmA6cYwY3k&#xA;WGBFQ8yeXGV3kZ1RVXYqKVboK4qn93cC2tJrgqXEMbScBQE8QTQV+WKsd8nedR5iudRgNjPZGxk4&#xA;I1wnp+ruwfhRnDcKLyIP7Q7EEqsnxV2KuxV2KuxV2KuxV2KuIBBBFQdiDirAb38qFu3pLqzm2Uv6&#xA;cHoj4RI3JqMHBJ3pU5TpcEcP0t+uzDUYxCuGjd/CmdW0Jht4oSxcxoqcz1biKVNPHLi44FBhfmn8&#xA;o/L3mHVZtWnuLmC/mZXJjMRjJjjWNVZWQsU/drUBgfAjKo4QMniWb+xtnk4sYhQ53fVU8p/llZ+X&#xA;PMVxrcN9JPLcwvA8LIqpxd0etQSfhMe1fHM/LqjOAjXJxMeARkTbK9T0+31HT7ixuFDQ3MbRuCAf&#xA;tClaHuOozElEEUXIjIg2HmcH/OP+i/WYJr3UZLqOKRZJYfSCLKQwJ5fE3UCmDFEwxHH0Jv7v1M8u&#xA;TjycfUCvx83quSa2F+YPyys9Zmmka8aBZ0WOWJI6o/Gb1uTgtux2U7gcQopRQMry4+OJjdWyhIRI&#xA;JAPv5Jl5F8nR+U9Il06O7e8WWcz+o6KhFY0jCALtQCMb9T3wwjwimPUql/5W+s3893HdtA07iQhU&#xA;BYOtu1uCGqOiuT+BqNsmqReXPypttD8w2mtxanNJLawm3aEIqLLH6Xp8XIJJFQr0/mGZUtVcOCvx&#xA;dtEcNS4rZ3mK3pBoPlL9EXz3f6Xvr/mjoYrv6sy1kZGL84oIpS37v9pyNztlccQBsNksspCin+WN&#xA;aW+ZNLvdU0aexsb79G3UpjMV76SXHAxyK5/dSfC3ILx38chOPEKZwlwm0h038vpLZIvresXF9Imz&#xA;SSIkdU58+C+lw4r8vE4YQERQROZkbPNmGSYuxV2KuxViV5Zx2urTTQwyFvrcUzzcJDV5WhUKrJG1&#xA;QFVwa9A+2Ksrif1Ikk4snNQ3BhRhUVoR44qw7yvpfHzZf6ktw/pXFrAwtJCS4Zmdwxbm/OiShSfl&#xA;X2VZnirsVdirsVdirsVdirsVWyyxxRPLKwSONSzuxoAoFSSfbFUti80+W5bOW9j1K3a0gZVmmEi8&#xA;UL/ZDmvw198hPJGAuRplGJkaCMsNQsdQtI7yxuI7m1lFY5omDqabHceB2OTBYkJJb/mL5IuNdk0G&#xA;PV4P0tFObRrV+SEzqCTEjOFV2HHcKTiqn5V/M3yL5runtNA1eO9ukjaYwcJYnMaPwZ1WVULKGNKj&#xA;bACCkxIZHcXNvbx+rcSpDGCAXkYKtSaAVNOuFCDl8xeX4gpl1O0jDhihaeMVC7NSrb0rvkTIDmWQ&#xA;iTyCPR0dFdGDIwBVgagg9CDkmLynUPz6Wy80eYdIfy3dy2OgRSMb+KRWeaWN0TgsJUBVLOfiMnQd&#xA;PCuWQDm2Rx8Q2Z/5P8z2nmjy1Y69aQTW1vfIXSC4ULKhVyjBgCw+0poQdxljAhi35q/mfqHkufRb&#xA;XTdJTV7rVZmR0af0REilFBNEkPxl9jT9k9chOYiLKYR4jXVOfIXnlPNlpeynT5tMubC4NvNbTkMx&#xA;2qrggDY7jp1BwYsnGLpOSHCa6qn5i+cYPKHlC/1tzGbiFOFlDKdpLiQ8Y04ghm3+Jgu/EH55Mmgi&#xA;IsvJIPz0/MoXWjzTaXpkmk3U4GoXCLPGRal1VpUZp34cRzJLrTpkMUpZJcIFlsy44wFk7PfwQwBB&#xA;qDuCOhGWNLD/AM2/Mup+XfImoX+kTJBrLenDpzyIJB6ruOXwsCpIjDkV8MEjsgzjHeXJ5b5E/O3z&#xA;7Dqvl3y95jto9ZudXuRbzX8SLDOvqsu5ihATjbq1XPAVHhSpqhlskVyb54wACDYL6Cy5pdirsVdi&#xA;qTkyy34sYWQ2qyfWJa0Mg4ymTY8uhmXj9nahr2xVOMVSTQraOK7uYz6nq29I6Mw4hFZ0hGwU/wB0&#xA;itv4jviqd4q7FXYq7FXYq7FXYq7FUFrdhNf6TdWcEohnmjKxTEBuL9VahDDY+2KsKu/y81h7AQwG&#xA;yjeOUyRQLySEllZechWIlmHGMdN+O+5NcTU6UZZRP81y9LqBju+o6Mp8n6HNofl6102dkeaEyM7R&#xA;V4VklaSi8gDQBqdMy+GI+nYOHEzIHGbkxK8/LfW57y7ujcW008gf6nO9FkiZ4uBcN6DkPyJPMHlT&#xA;vUVwFSL2SvyR+UnmTy35i0/Uxc2aw2rSxXKxNJzltpIwoRiIo6kP8ZB25AHtluGUY4yJD1nqwlGX&#xA;EKPpHeXonmfQk1rSzaMdw4kQFiikgFdyoJ6MTlbY8s1H8h9So7aPPZWhnd/VjYEoiEKA0ZEX2ieV&#xA;elNqZUcMTMSluK5fc3xzmOMxGxvn971vQNMbStC07THl9drC1htmnpx5mGNUL0qacuNcsiKFNMjZ&#xA;t5fpv5QeZ7K+1aX61ZyW2o27RpGZJgVla5im5Een9nhDSlSffc5DTiUZXM2L6MJ44gegVtv72Y/l&#xA;p5S1TyvolzYalcRXM0129yjwlyAskcYIJcKxPNWOZuqzDJKx3NeDGYRopL+Yv5ca/wCYvMNrq+lX&#xA;VvbvbQRwD1nlQjjJI7EemjdnFN+2+2YMoz4wQfT1DbKEDEmvX0PcnHk/ynrOiaxfXU88LWV5GoME&#xA;bO7B4yPToXVaKAz7DxGXdA42HDKMiTyKz80/I955x0C10+0lhiltryO7pcV4OFjkjK1VXof3vIfC&#xA;emUajHKcKjzdpo80MeQSmLDDdS/JzzVfaXDYveWgEUccas89xIAFBrwrEOPxMW8PbrmZ2Zk/LxqW&#xA;7i9pf4RkMxs9X0O1vLTRdPtL6RZr23toYrqZK8XlSMK7LUDYsCemQyEGRI5WxiKAtIPzI8mz+atH&#xA;trK3aJJYLkT8pmZPhEboQHRXYfEyn6MxdRCco1A0W3H4fFeSPEO55na/kV58jEMzavape2zL9Wmg&#xA;nuU9NVLtVKR1VmaQsePep75lYJ8P1C9nGOM8NA9XuOnpepYWyXzrLerEgupIxRGlCjmyig2LVptk&#xA;TzbQr4EuxV2KpLZ6PfWmpPcxNGYnCq/J3YsC3KRyCv22O/2qdqd8VTrFUs0uwvoLy7urp0L3XAus&#xA;ZJWqDiOIKgqOI6FmqfDFUzxV2KuxV2KuxV2KuxV2KtSSJHG0kjBUQFnY7AAbknFQHjdx+bPnBrS6&#xA;1Wwjs2076yY7ZLlHJMcZ4u6srRfDWtBu1R4ZrYauZJNWOfwdrk0eOPDEmpGh8XsFpM09pDM4CtLG&#xA;rsqmoBYAkA982INh1chReYefvze1rQvPMXlnRNPg1GRbeGe6SUvG/OV2rGshKoD6fFhs3X2yGTII&#xA;tmPCZMl/L7z/AP4sXUo5LL6ldabKkc8XqCQD1AxAqAN14kE9D28BHDl472pObFwHmn3mPWBouh3m&#xA;qGE3H1SMuIQwTma0A5EHjuetMnknwRMu5jhx8chHveeH87rmM2L3Wg/Vba7mSFpXulbiXIXifgXi&#xA;y1qeXYeBBzGGrs7DZyJaOhud6eqZmOG8ZvPzH/MaTzh5gt9NjtF0bSLh7VBcqDyaNFrxKOH5VYN8&#xA;Xw9vljZcxBEY/UXLxacGJnI+kPR/IuvX2veWLTU79YUu5jKsqWxYxgxysm3Isei+OW4snHG+TTmx&#xA;8Equ9h9yYTa/oUOpJpc2pWsepyBWSxeaNZ2VjRSIi3MgnptljU7TvMGg6lPPb6dqVre3FqxS5ht5&#xA;45XjZaBldUZipFRUHBYTRRN7dJaWc1y4qsKM/HuaCoUe56DIZcghAyPQJhHiIHe80vvzqvLXzHo+&#xA;nny836K1KQRXWqNcqotg0gQyshj/ALtK/EWZe/hvVpNQcw2G/dzb9Rp/C5nZ6jmS4zDvzd8w6joX&#xA;kLUbzSroWmruEh06VlD/AL1mBIAIZa+mr05bVwSKDOMd5cnjvlb8zPze0q98vtr1/Df6FcSA6rc3&#xA;NuEdbeSTgzq8axs3p0bjQGpB69AMEcmSRAidmzIccYiVjd9J5Jg7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq4iux6Yq8ttvyTuIYktzroNpGJONutmFDNLIJGaQmZixoOHb4dsq0mLwb6239qZI6nh&#xA;oGPDfW+7yFftepZa0MF86/lbD5l1mLVYtRbT7hI0jkZY2kZvSZilG9ROIHM7D55VLFc4y/m9G6Ga&#xA;oSj3q35cflnbeShfOl899cah6fquU9JAIg1AsYZ+7k7nL8h4pmXK2mO0RHuZNrmkWusaRdaZdAGG&#xA;6Qoa1ND1VqAj7LAHrlc4CQos8czGQIeXP/zj3FO8C3WvSS2sUnqPbrblASxXmFPrNwDKtNh4eGDF&#xA;DgxHHzs82WXLx5RPlQev5NqYd5i8g3WsX0txHqa2ccrq5RLYNJQKqsvqeotQ3pgn4crjjAycbfly&#xA;xlgOKtz1vzvl9nNkHl3Rxo2i2umCQTC2Ur6oT0+VWLcitW3Nd99zvlsjZtxccOGIDGPMX5f3mqeZ&#xA;/wBNRS2qtGYHtmkiDSRyW7AhuXFix68dxx6jAzS3yB+Vmp+WNVt72S6tnMZuVuHhQiSaKf4wjHip&#xA;2l+M1Jr88hjjQ3riayJcQ3PCOhZn5q0W91nR5LCzvv0dNIyn6z6ZloB1HAPFX6T9GDLhhkHDMWG6&#xA;E5RNx5vPrr8iZbjTVs38wuzDdp3t3clutaNPtv2zP0+pGL6Y7dw2H3OLlwGe5O71aFZViRZWDyhQ&#xA;JHUcQzU3IWrUqe1cxS5AY/548nx+a9Lg0+S5NskNwLgsEL8qRyR8dmjI/vK1B7UyjPjlONRPCe9n&#xA;jMBK5x4h3MBH/OPrHR49Ok18MY3dknFnQgMqgAD1zSjJy6716ZsNJqjiFVf4P63DyaYSqtnrdnHc&#xA;RWkEdzMLi5SNVnuAojEjhQGfgCQvI70rtmNIi9nICrgS7FXYqtkkSNGdzxRRUnIzmIgk8gkC0ig8&#xA;/wDk2fU00yPVoDfSELHASVLMWCBVLAAksdhXftlWLU45/Sb/ABTbLTziLI/HNP8AL2l2KuxV2Kux&#xA;V2KuxV2KuxVSu7qO1tZrmWvpwI0jgdaKK7VpvkMuQQiZHkBbKETIgDqwfzj+cvlvyppUd/e21zdm&#xA;SURm2sfRmkVf2nNZEWi9DQ9SB4kYml10c17EV3t2TTSizPSNTtdV0qy1S05fVb+CK5t+Y4t6cyB0&#xA;5DsaN0zODQQlnmDzfp2iTRxXCPIWBZzHvxABanu1B0zCz66OOYhRJ8ujkYdNLICQgPIv5kaP5ym1&#xA;OCwtbq1m0p0S4S6RF5CQuqMhjeQEfumzIx5RPk1TxmPNlmWtbE/L35g2mr602kS2xsbrgzRxyv8A&#xA;G5ShIVeIr8PxVB+VRvmJh1XHLhIpzM2jMIcV2yzMtw3nX5i/m1c+T9UFiNFN1E0AmW+knEMfI1HE&#xA;AJJXjTcEg+1KE05c3Dy3Lk6fT+IdzQ72d6TqVvqml2ep2wYW99BHcwhqcuEyB1rxLCtG7HLnGY5+&#xA;YvnyXydpkV7HpUuqmQsZFjcRJFGlOTu5D0+0KDjvlWXLwN2HCZ2nHlnzPpHmTSIdT0ucSwyqC8df&#xA;jicipjkXqrD+0bZKExIWGE4GJoprk2Dzb8rvzkfzvrWqaRc6BPotzpyCZGeZZ0kj58NyEj4tuCAO&#xA;QO++28YzBZygQ9JyTBx6YqkGh+Zm1LUXtQqlRGXPFZFaM/CQr89jyV6gjNXo9dkyZDGUa2v+1zM+&#xA;mEI2n+bRw0rvPMVna6glk4rIzojfEgI9SgUhSQzCrb06ZgZe0Iwy+GQem/Tfk5ENNKUeL8bJpme4&#xA;7EL38zdCsvPNt5Ont7oXt3xEV4qI1t6jIXCFg/MGg/l/DfKjmHFwtnhHhtU/MQ3g0qExzejZGVUv&#xA;TuAFdlAZiP2VFfppmv7VxzlGIB9Jlv8Aocvs/h49xZ6PMtNWw1TzbpVva8C9jqMCzT/E0VYwtw0a&#xA;P0PwcVXb27nMjT6IGAlyoj5BhrddLFn8KtjGj8eR/He94zNcN2KuxV2KuxV2KuxV2KuxVjf5hDUZ&#xA;PLM1rp9vNcXF1JHFS3BLIvIOzNT9micT88jLir01fm1Zj6eRPueZeZPL+u3GmLaR6RPcQCETAtay&#xA;PKJ2YFoytPT40q1OFOXfsXszHEm8sYgiR8hQ5Gvx7mWfLk4ajKRFDnz357+T0D8pl1qHyXb2WsWs&#xA;9reWUs0P+khg0kfMyI6hqkKFk4Af5PhmZrOE5CYnYsNPfBRefef9P88WnnO4vNIsr++0+O4jeKCO&#xA;F5kf1Ig8lGAA4eo7KwrXrmjGCIzH0c/4ve5k5z8PiE9xXpZL5NsddsfOfrSWE4tL2J4rq4aFok5B&#xA;RIsrEheRJj4fFuK/QNjGIEQAKdZCeWWW52XpuFzXj/kvTPMl1+YC69qml3FqZLi4+KeF19ON4ZCK&#xA;SEU48m4gdf1ZhwiTOyPsd5mljjpjESBO3XzD2DMx0byH81dL1/XfMZsIdNuptLjtUBmWF3iaQMX+&#xA;BlB+L4+Jr0p3zFzcXFsHc9njFwHjI36X+O7m9V0vTbTTNMtNNs14WljDHbW6E14xwoEQVPWirmU6&#xA;csW/Mmzvr+30+wt7BryCaVjdsIzIqxhQnBwBur+pUg9eOaztQ5PDqAJPkL/Hvc7QCHETI0PfVor8&#xA;v/KmkaBpUjWWnJp9zeSM14qKU5mN3WM8D9kcOgAy3s6Mhhjx3xdb582rWTByGuX7GUZnOK8I/LHQ&#xA;vNUX5gRavc6Pc6TaTvMlxbm3eCJY/QYrufhKerxCgmuwOYsZyGTh4fTXNAwgjxDL1X9Pk93zKS7F&#xA;Xhv5WaZ5zPn4avqumXthFcRyJc+rC8CH93+1UceJf7KjwGVwFdHEjxHLxG3uWWOW82/MDS9aur+4&#xA;ms7W4eRDGtq1tG524BmcvRgG5LSq0Ow+nEyxn4o4RHkfURe/TqGGSRMCCZEAj0x2v7C9Ds55Lizg&#xA;nkiaCSWNHeB/tIWUEo3uvQ5lhkDbzLz5pmvPr73mnWM8720ySWzwwuTQRI7cZAKjk9d1PscYxAJN&#xA;buHqp5SQBfCH/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>423.459774</stDim:w>
            <stDim:h>315.153142</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -335.984 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 335.984 li
187.624 335.984 li
187.624 0 li
cp
clp
3.04103 116.114 mo
3.7324 118.352 5.69235 119.938 7.85154 120.676 cv
8.70016 120.966 9.5791 121.17 10.4609 121.35 cv
10.4678 121.36 li
10.7754 121.391 11.0723 121.488 11.3252 121.68 cv
11.7032 121.969 11.9131 122.414 12.0098 122.871 cv
12.2578 124.043 11.9873 125.353 11.4844 126.421 cv
11.4317 126.532 11.373 126.639 11.3144 126.747 cv
11.2275 126.94 11.1367 127.132 11.0391 127.325 cv
10.6055 128.004 10.0742 128.651 9.85548 129.439 cv
9.59865 130.362 9.95018 131.203 10.3779 132.01 cv
10.8965 132.989 11.5801 133.791 12.3193 134.605 cv
12.6738 134.995 12.9765 135.413 12.9746 135.964 cv
12.9717 136.459 12.7949 136.964 12.624 137.421 cv
11.9453 139.232 10.6211 141.168 11.6573 143.118 cv
12.081 143.916 12.8525 144.588 13.627 145.038 cv
14.2431 145.395 15.1738 145.688 15.5039 146.378 cv
15.624 146.52 li
16.457 148.135 16.4531 150.1 16.6123 151.87 cv
16.8466 154.49 17.4131 157.141 18.1953 159.65 cv
18.5674 160.839 19.0156 162.035 19.8652 162.972 cv
20.5918 163.776 21.5654 164.335 22.586 164.675 cv
24.6904 165.376 26.9942 165.298 29.165 165.002 cv
31.9717 164.621 34.7461 163.909 37.457 163.099 cv
40.2334 162.268 43.0322 160.952 45.9619 160.81 cv
47.1866 160.75 48.3916 160.963 49.456 161.595 cv
50.4209 162.169 51.2158 162.981 51.9434 163.827 cv
53.8554 166.048 55.4824 168.509 56.9873 171.02 cv
58.5342 173.599 59.9893 176.248 61.3926 178.908 cv
61.4961 179.102 61.5967 179.298 61.6983 179.494 cv
61.5645 179.508 61.4648 179.603 61.5772 179.761 cv
62.252 180.699 62.7998 181.746 63.1748 182.839 cv
63.5557 183.95 63.7647 185.123 63.8203 186.294 cv
63.8653 187.229 63.9814 188.151 64.3164 189.031 cv
64.9805 190.778 66.3496 192.073 68.0342 192.838 cv
70.0869 193.771 72.4053 194.249 74.625 194.578 cv
77.0039 194.929 79.4131 195.061 81.8164 195.061 cv
86.6767 195.06 91.5732 194.59 96.3818 193.897 cv
99.1318 193.5 101.866 192.991 104.576 192.376 cv
107.269 191.768 109.915 191.015 112.573 190.28 cv
115.126 189.574 117.708 188.967 120.228 188.144 cv
122.595 187.37 124.88 186.369 127.032 185.115 cv
129.033 183.949 130.898 182.555 132.527 180.905 cv
134.142 179.27 135.781 177.358 135.427 174.9 cv
135.097 172.609 133.545 170.675 132.219 168.865 cv
130.79 166.915 129.358 164.968 127.961 162.997 cv
125.085 158.936 122.336 154.757 120.127 150.291 cv
119.039 148.09 118.088 145.818 117.354 143.474 cv
116.926 142.106 116.571 140.727 116.359 139.322 cv
116.215 138.867 116.084 138.408 115.977 137.941 cv
115.481 135.775 115.496 133.528 116.136 131.393 cv
116.422 130.438 116.844 129.414 117.654 128.787 cv
117.994 128.326 118.348 127.877 118.706 127.448 cv
119.989 125.91 121.348 124.442 122.601 122.878 cv
123.932 121.217 125.201 119.506 126.395 117.744 cv
128.726 114.299 130.745 110.655 132.474 106.872 cv
135.882 99.4096 138.158 91.4214 139.022 83.2563 cv
139.861 75.3003 139.356 67.2153 137.355 59.4615 cv
135.326 51.5991 131.728 44.2856 126.994 37.7036 cv
122.473 31.4155 116.98 25.7612 110.544 21.4224 cv
103.543 16.7036 95.4219 13.7798 87.1279 12.3471 cv
78.8223 10.9116 70.2813 11.0376 61.9658 12.3384 cv
54.4365 13.5161 47.0576 15.7427 40.2217 19.1294 cv
33.4258 22.4966 27.2207 27.0308 22.0713 32.6079 cv
19.2255 35.6889 16.665 39.0913 14.5899 42.7378 cv
13.5215 44.6157 12.5889 46.5717 11.832 48.5962 cv
11.0117 50.7905 10.4365 53.0493 9.86426 55.3169 cv
9.96583 55.4946 li
9.49318 57.6264 9.13867 59.7885 8.84373 61.9458 cv
8.42088 65.0434 8.02047 68.1587 7.83986 71.2818 cv
7.66994 74.2231 7.68949 77.1704 8.30273 80.0649 cv
8.61035 81.521 9.05856 82.9487 9.66112 84.3101 cv
10.251 85.644 10.9903 86.8999 11.7158 88.1626 cv
12.4492 89.438 13.1719 90.73 13.6611 92.1225 cv
14.1709 93.5718 14.2705 95.0454 13.9912 96.5562 cv
13.4463 99.5083 11.9023 102.314 10.376 104.866 cv
9.60544 106.154 8.76561 107.403 7.85453 108.595 cv
7.07815 109.612 6.27734 110.532 5.25491 111.304 cv
4.51855 111.859 3.68949 112.409 3.20996 113.219 cv
2.68064 114.115 2.7441 115.15 3.04103 116.114 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.345098 .172549 .113725 rgb
f
3.65527 114.053 mo
3.97266 113.165 4.80082 112.582 5.52441 112.039 cv
6.42282 111.365 7.1924 110.641 7.92089 109.785 cv
9.85548 107.509 11.4131 104.935 12.749 102.271 cv
14.0127 99.7524 15.2324 96.9389 14.8897 94.0542 cv
14.5576 91.2563 12.8301 88.7905 11.4912 86.3902 cv
10.0254 83.7593 9.10255 80.9712 8.79005 77.9712 cv
8.48832 75.0698 8.64747 72.1626 8.82228 69.2593 cv
9.14356 63.9213 9.83104 58.6323 10.8418 53.3902 cv
11.3096 51.9409 11.7803 50.4927 12.3242 49.0728 cv
15.2608 41.4097 20.6123 34.6001 26.6982 29.1684 cv
32.3018 24.1685 38.83 20.2651 45.7978 17.4897 cv
52.793 14.7036 60.2139 13.0268 67.707 12.3491 cv
76.375 11.565 85.1523 12.1274 93.5595 14.4488 cv
97.665 15.5825 101.698 17.0874 105.466 19.0806 cv
108.865 20.8794 112.052 23.0757 114.997 25.5444 cv
120.939 30.5259 125.953 36.6597 129.906 43.3179 cv
134.041 50.2827 136.769 58.0434 137.944 66.0552 cv
139.097 73.9018 138.791 81.9253 137.222 89.6928 cv
135.601 97.7124 132.668 105.499 128.609 112.602 cv
126.557 116.196 124.186 119.599 121.579 122.812 cv
120.934 123.607 120.227 124.387 119.52 125.177 cv
118.315 126.916 116.85 128.469 115.76 130.288 cv
115.704 130.412 115.644 130.534 115.592 130.66 cv
115.386 131.128 115.209 131.612 115.076 132.116 cv
115.075 132.236 li
115.001 132.545 114.938 132.857 114.896 133.171 cv
114.699 134.657 114.834 136.161 115.088 137.63 cv
115.228 138.437 115.41 139.246 115.648 140.029 cv
115.701 140.202 115.754 140.376 115.807 140.55 cv
116.154 142.218 116.684 143.861 117.265 145.448 cv
118.086 147.69 119.09 149.863 120.204 151.973 cv
122.506 156.332 125.281 160.422 128.152 164.421 cv
129.525 166.332 130.937 168.215 132.31 170.126 cv
133.607 171.933 135.14 174.157 134.529 176.501 cv
134.219 177.694 133.391 178.657 132.59 179.559 cv
131.815 180.429 130.97 181.233 130.07 181.972 cv
128.264 183.458 126.251 184.678 124.149 185.699 cv
121.812 186.833 119.341 187.627 116.841 188.316 cv
114.31 189.012 111.774 189.698 109.243 190.392 cv
103.946 191.846 98.5498 192.935 93.0908 193.552 cv
88.4219 194.081 83.7148 194.458 79.0147 194.234 cv
76.668 194.123 74.3223 193.855 72.0312 193.325 cv
70.0839 192.874 67.8233 192.336 66.3721 190.864 cv
65.7734 190.255 65.3457 189.516 65.0859 188.705 cv
64.8116 187.85 64.7881 186.989 64.707 186.111 cv
64.8565 186.423 65.0117 186.732 65.1787 187.036 cv
65.29 187.239 65.6621 187.2 65.5303 186.933 cv
65.1914 186.246 64.8906 185.541 64.6064 184.829 cv
64.543 184.669 64.4795 184.51 64.417 184.351 cv
64.1279 183.148 63.6543 181.987 62.9912 180.945 cv
62.8799 180.697 li
62.2344 179.337 61.5254 178.008 60.8106 176.684 cv
59.3702 174.017 57.9287 171.345 56.332 168.767 cv
54.9082 166.466 53.3564 164.064 51.3759 162.195 cv
50.5761 161.44 49.6621 160.791 48.6201 160.417 cv
47.4033 159.98 46.1133 159.922 44.8369 160.085 cv
41.8857 160.463 39.0899 161.726 36.2461 162.546 cv
33.581 163.315 30.8389 164.021 28.0733 164.306 cv
25.9385 164.527 23.4864 164.566 21.5683 163.457 cv
20.4843 162.831 19.8242 161.834 19.3867 160.683 cv
18.8867 159.364 18.5185 157.98 18.2266 156.6 cv
17.9453 155.267 17.6924 153.909 17.5371 152.554 cv
17.4345 151.663 17.3896 150.765 17.2764 149.874 cv
17.1338 148.748 16.8925 147.327 16.166 146.353 cv
16.1025 145.49 14.9043 144.992 14.2529 144.654 cv
13.3349 144.178 12.3829 143.458 12.1259 142.403 cv
11.6035 140.267 13.5654 138.412 13.7383 136.35 cv
13.8213 135.359 13.2139 134.638 12.5732 133.96 cv
11.7764 133.118 11.0088 132.117 10.6113 131.012 cv
10.4893 130.674 10.4726 130.352 10.5234 130.041 cv
10.7402 129.629 10.9473 129.212 11.1816 128.808 cv
11.4658 128.319 11.7636 127.834 12.0117 127.324 cv
12.1533 127.035 12.2666 126.748 12.3594 126.458 cv
12.3662 126.437 li
12.5557 125.843 12.6543 125.241 12.6924 124.584 cv
12.7275 123.967 12.7744 122.939 12.5381 122.128 cv
12.2656 121.659 11.9385 121.217 11.5762 120.809 cv
9.94529 120.476 8.26761 120.276 6.76954 119.507 cv
5.76467 118.992 4.8516 118.255 4.25095 117.289 cv
3.68261 116.375 3.27831 115.109 3.65527 114.053 cv
.72549 .509804 .345098 rgb
f
3.65527 114.053 mo
3.97266 113.165 4.80082 112.582 5.52441 112.039 cv
6.42282 111.365 7.1924 110.641 7.92089 109.785 cv
9.85548 107.509 11.4131 104.935 12.749 102.271 cv
14.0127 99.7524 15.2324 96.9389 14.8897 94.0542 cv
14.5576 91.2563 12.8301 88.7905 11.4912 86.3902 cv
10.0254 83.7593 9.10255 80.9712 8.79005 77.9712 cv
8.48832 75.0698 8.64747 72.1626 8.82228 69.2593 cv
9.14356 63.9213 9.83104 58.6323 10.8418 53.3902 cv
11.3096 51.9409 11.7803 50.4927 12.3242 49.0728 cv
15.2608 41.4097 20.6123 34.6001 26.6982 29.1684 cv
32.3018 24.1685 38.83 20.2651 45.7978 17.4897 cv
52.793 14.7036 60.2139 13.0268 67.707 12.3491 cv
76.375 11.565 85.1523 12.1274 93.5595 14.4488 cv
97.665 15.5825 101.698 17.0874 105.466 19.0806 cv
108.865 20.8794 112.052 23.0757 114.997 25.5444 cv
120.939 30.5259 125.953 36.6597 129.906 43.3179 cv
134.041 50.2827 136.769 58.0434 137.944 66.0552 cv
139.097 73.9018 138.791 81.9253 137.222 89.6928 cv
135.601 97.7124 132.668 105.499 128.609 112.602 cv
126.557 116.196 124.186 119.599 121.579 122.812 cv
120.934 123.607 120.227 124.387 119.52 125.177 cv
118.315 126.916 116.85 128.469 115.76 130.288 cv
115.704 130.412 115.644 130.534 115.592 130.66 cv
115.386 131.128 115.209 131.612 115.076 132.116 cv
115.075 132.236 li
115.001 132.545 114.938 132.857 114.896 133.171 cv
114.699 134.657 114.834 136.161 115.088 137.63 cv
115.228 138.437 115.41 139.246 115.648 140.029 cv
115.701 140.202 115.754 140.376 115.807 140.55 cv
116.154 142.218 116.684 143.861 117.265 145.448 cv
118.086 147.69 119.09 149.863 120.204 151.973 cv
122.506 156.332 125.281 160.422 128.152 164.421 cv
129.525 166.332 130.937 168.215 132.31 170.126 cv
133.607 171.933 135.14 174.157 134.529 176.501 cv
134.219 177.694 133.391 178.657 132.59 179.559 cv
131.815 180.429 130.97 181.233 130.07 181.972 cv
128.264 183.458 126.251 184.678 124.149 185.699 cv
121.812 186.833 119.341 187.627 116.841 188.316 cv
114.31 189.012 111.774 189.698 109.243 190.392 cv
103.946 191.846 98.5498 192.935 93.0908 193.552 cv
88.4219 194.081 83.7148 194.458 79.0147 194.234 cv
76.668 194.123 74.3223 193.855 72.0312 193.325 cv
70.0839 192.874 67.8233 192.336 66.3721 190.864 cv
65.7734 190.255 65.3457 189.516 65.0859 188.705 cv
64.8116 187.85 64.7881 186.989 64.707 186.111 cv
64.8565 186.423 65.0117 186.732 65.1787 187.036 cv
65.29 187.239 65.6621 187.2 65.5303 186.933 cv
65.1914 186.246 64.8906 185.541 64.6064 184.829 cv
64.543 184.669 64.4795 184.51 64.417 184.351 cv
64.1279 183.148 63.6543 181.987 62.9912 180.945 cv
62.8799 180.697 li
62.2344 179.337 61.5254 178.008 60.8106 176.684 cv
59.3702 174.017 57.9287 171.345 56.332 168.767 cv
54.9082 166.466 53.3564 164.064 51.3759 162.195 cv
50.5761 161.44 49.6621 160.791 48.6201 160.417 cv
47.4033 159.98 46.1133 159.922 44.8369 160.085 cv
41.8857 160.463 39.0899 161.726 36.2461 162.546 cv
33.581 163.315 30.8389 164.021 28.0733 164.306 cv
25.9385 164.527 23.4864 164.566 21.5683 163.457 cv
20.4843 162.831 19.8242 161.834 19.3867 160.683 cv
18.8867 159.364 18.5185 157.98 18.2266 156.6 cv
17.9453 155.267 17.6924 153.909 17.5371 152.554 cv
17.4345 151.663 17.3896 150.765 17.2764 149.874 cv
17.1338 148.748 16.8925 147.327 16.166 146.353 cv
16.1025 145.49 14.9043 144.992 14.2529 144.654 cv
13.3349 144.178 12.3829 143.458 12.1259 142.403 cv
11.6035 140.267 13.5654 138.412 13.7383 136.35 cv
13.8213 135.359 13.2139 134.638 12.5732 133.96 cv
11.7764 133.118 11.0088 132.117 10.6113 131.012 cv
10.4893 130.674 10.4726 130.352 10.5234 130.041 cv
10.7402 129.629 10.9473 129.212 11.1816 128.808 cv
11.4658 128.319 11.7636 127.834 12.0117 127.324 cv
12.1533 127.035 12.2666 126.748 12.3594 126.458 cv
12.3662 126.437 li
12.5557 125.843 12.6543 125.241 12.6924 124.584 cv
12.7275 123.967 12.7744 122.939 12.5381 122.128 cv
12.2656 121.659 11.9385 121.217 11.5762 120.809 cv
9.94529 120.476 8.26761 120.276 6.76954 119.507 cv
5.76467 118.992 4.8516 118.255 4.25095 117.289 cv
3.68261 116.375 3.27831 115.109 3.65527 114.053 cv
f
10.9268 129.275 mo
11.2832 129.259 11.6416 129.233 12.0029 129.19 cv
12.7803 129.097 13.5762 128.988 14.3437 129.203 cv
15.5127 129.528 24.4004 133.142 26.4267 134.893 cv
25.5322 135.796 21.8779 141.362 21.5127 142.438 cv
21.1504 143.507 20.4229 144.335 19.3584 144.736 cv
18.2529 145.152 17.043 145.267 15.8721 145.328 cv
15.7393 145.334 15.6065 145.337 15.4746 145.341 cv
15.0762 145.05 14.5918 144.83 14.2529 144.654 cv
13.3349 144.178 12.3829 143.458 12.1259 142.403 cv
11.6035 140.267 13.5654 138.412 13.7383 136.35 cv
13.8213 135.359 13.2139 134.638 12.5732 133.96 cv
11.7764 133.118 11.0088 132.117 10.6113 131.012 cv
10.4893 130.674 10.4726 130.352 10.5234 130.041 cv
10.6582 129.787 10.791 129.53 10.9268 129.275 cv
.823529 .635294 .482353 rgb
f
58.4129 172.306 mo
57.7415 171.113 57.0525 169.93 56.332 168.767 cv
56.165 168.499 li
56.1653 168.499 56.1656 168.499 56.166 168.499 cv
56.2215 168.589 56.2768 168.678 56.332 168.767 cv
57.0525 169.93 57.7415 171.113 58.4129 172.306 cv
58.4129 172.306 li
25.9171 164.431 mo
24.3987 164.431 22.862 164.205 21.5683 163.457 cv
20.4843 162.831 19.8242 161.834 19.3867 160.683 cv
18.8867 159.364 18.5185 157.98 18.2266 156.6 cv
17.9453 155.267 17.6924 153.909 17.5371 152.554 cv
17.4345 151.663 17.3896 150.765 17.2764 149.874 cv
17.1338 148.748 16.8925 147.327 16.166 146.353 cv
16.1356 145.939 15.8447 145.61 15.4783 145.341 cv
15.4783 145.341 li
15.8447 145.61 16.1356 145.939 16.166 146.353 cv
16.8925 147.327 17.1338 148.748 17.2764 149.874 cv
17.3896 150.765 17.4345 151.663 17.5371 152.554 cv
17.6924 153.909 17.9453 155.267 18.2266 156.6 cv
18.5185 157.98 18.8867 159.364 19.3867 160.683 cv
19.8242 161.834 20.4843 162.831 21.5683 163.457 cv
22.862 164.205 24.3987 164.431 25.9171 164.431 cv
26.6498 164.431 27.3784 164.378 28.0733 164.306 cv
30.8389 164.021 33.581 163.315 36.2461 162.546 cv
39.0899 161.726 41.8857 160.463 44.8369 160.085 cv
45.2586 160.032 45.6816 160.002 46.1032 160.002 cv
46.3891 160.002 46.6742 160.016 46.9576 160.045 cv
46.9545 160.046 46.9514 160.046 46.9483 160.047 cv
46.6605 160.018 46.3712 160.004 46.0813 160.004 cv
45.6669 160.004 45.2512 160.033 44.8369 160.085 cv
41.8857 160.463 39.0899 161.726 36.2461 162.546 cv
33.581 163.315 30.8389 164.021 28.0733 164.306 cv
27.3784 164.378 26.6498 164.431 25.9171 164.431 cv
.305882 .137255 .0823529 rgb
f
58.4129 172.306 mo
57.7415 171.113 57.0525 169.93 56.332 168.767 cv
56.2768 168.678 56.2215 168.589 56.166 168.499 cv
56.5699 168.411 56.9739 168.335 57.3701 168.277 cv
59.5654 167.954 61.7949 167.969 63.9961 167.695 cv
66.8017 167.344 69.6016 166.761 72.1465 165.488 cv
74.7061 164.207 76.7549 162.222 78.6504 160.113 cv
80.4951 158.06 82.2012 155.879 84.1924 153.961 cv
85.2441 152.948 86.373 152.013 87.5967 151.213 cv
88.9853 150.306 90.3281 149.329 91.6885 148.38 cv
93.0175 147.454 94.3623 146.546 95.7676 145.739 cv
96.3476 145.406 96.9658 145.184 97.583 144.933 cv
98.0293 144.751 98.4951 144.548 98.8262 144.185 cv
99.5429 143.4 99.3584 142.302 99.039 141.389 cv
98.6621 140.31 98.0966 139.32 97.6348 138.279 cv
96.9209 136.672 96.207 135.067 95.4931 133.461 cv
94.9931 132.336 94.5967 131.203 94.2246 130.03 cv
93.8555 128.869 93.4814 127.707 93 126.588 cv
92.5869 125.63 92.083 124.639 91.293 123.934 cv
91.2397 123.887 91.1724 123.859 91.1043 123.859 cv
91.0613 123.859 91.018 123.87 90.9776 123.894 cv
90.6074 124.112 90.2598 124.364 89.9316 124.641 cv
88.5 125.853 87.4795 127.479 86.4111 129 cv
85.1319 130.819 83.7852 132.586 82.5264 134.421 cv
80.0039 138.102 77.6602 141.915 75.0196 145.514 cv
72.8681 148.448 70.4268 151.216 67.4482 153.335 cv
65.9023 154.436 64.2285 155.361 62.4707 156.076 cv
60.4267 156.906 58.2783 157.467 56.1309 157.954 cv
53.0764 158.645 49.9703 159.186 46.9576 160.045 cv
46.6742 160.016 46.3891 160.002 46.1032 160.002 cv
45.6816 160.002 45.2586 160.032 44.8369 160.085 cv
41.8857 160.463 39.0899 161.726 36.2461 162.546 cv
33.581 163.315 30.8389 164.021 28.0733 164.306 cv
27.3784 164.378 26.6498 164.431 25.9171 164.431 cv
24.3987 164.431 22.862 164.205 21.5683 163.457 cv
20.4843 162.831 19.8242 161.834 19.3867 160.683 cv
18.8867 159.364 18.5185 157.98 18.2266 156.6 cv
17.9453 155.267 17.6924 153.909 17.5371 152.554 cv
17.4345 151.663 17.3896 150.765 17.2764 149.874 cv
17.1338 148.748 16.8925 147.327 16.166 146.353 cv
16.1356 145.939 15.8447 145.61 15.4783 145.341 cv
15.609 145.337 15.7405 145.334 15.8721 145.328 cv
16.973 145.271 18.1084 145.165 19.1591 144.807 cv
19.4277 144.835 19.6971 144.889 19.9668 144.989 cv
20.5908 145.22 18.4189 146.127 19.0439 146.373 cv
18.8467 146.355 18.6884 146.338 18.5615 146.323 cv
17.902 146.244 18.0525 146.2 17.7115 146.2 cv
17.5601 146.2 17.3121 146.209 16.8535 146.227 cv
16.6993 146.233 16.5371 146.391 16.6016 146.557 cv
16.9863 147.548 17.2119 148.593 17.4023 149.637 cv
18.1328 153.64 18.2861 159.993 22.9629 161.562 cv
23.7166 161.815 24.4993 161.912 25.287 161.912 cv
26.2435 161.912 27.2076 161.769 28.1367 161.593 cv
29.9883 161.243 31.8281 160.809 33.6534 160.337 cv
37.3906 159.372 41.0635 158.164 44.5976 156.608 cv
47.9932 155.114 51.1982 153.307 54.4209 151.482 cv
56.9864 150.029 59.8213 148.412 61.3545 145.788 cv
62.958 143.04 62.7148 139.76 62.5889 136.703 cv
62.4326 132.903 62.5616 129.091 62.4472 125.289 cv
62.2587 118.977 61.5928 112.732 59.9336 106.624 cv
58.3935 100.955 56.1103 95.4526 52.9707 90.478 cv
49.8877 85.5913 45.9551 81.2271 41.2168 77.897 cv
40.0137 77.0522 38.7617 76.2759 37.4688 75.5757 cv
36.9062 75.271 36.3203 75.0083 35.7676 74.6851 cv
35.4942 74.5259 35.1474 74.3374 35.0566 74.0093 cv
34.9658 73.685 35.1045 73.2876 35.1826 72.9741 cv
35.3477 72.3071 35.5225 71.646 35.6582 70.9722 cv
36.0468 69.0454 36.456 67.1225 36.9229 65.2134 cv
37.3838 63.3296 39.3067 60.1079 36.6328 59.0766 cv
35.9629 58.8189 35.2451 58.7134 34.5634 58.4897 cv
33.6328 58.1851 32.7138 57.8345 31.7959 57.4917 cv
29.9473 56.8003 28.1133 56.0708 26.2813 55.3383 cv
24.6973 54.7045 23.2002 53.9185 21.6729 53.1626 cv
20.3252 52.4966 18.9258 51.8764 17.4336 51.6255 cv
17.0164 51.5549 16.6077 51.5267 16.2037 51.5267 cv
14.9304 51.5267 13.7035 51.8067 12.3994 51.9223 cv
12.0341 51.9546 11.668 51.9722 11.3018 51.9888 cv
11.3962 51.7029 11.4913 51.4174 11.5878 51.1323 cv
12.0249 51.1261 12.4563 51.0811 12.8721 50.9927 cv
13.6338 50.8306 14.291 50.4204 14.9951 50.1118 cv
15.5439 49.8714 16.058 49.7575 16.5926 49.7575 cv
16.9331 49.7575 17.282 49.8037 17.6533 49.893 cv
18.5517 50.1079 19.4052 50.4683 20.292 50.7212 cv
21.3359 51.018 22.3887 51.2749 23.4277 51.5904 cv
25.6992 52.2817 27.918 53.1206 30.1142 54.0191 cv
32.2842 54.9077 34.46 55.7817 36.6484 56.6236 cv
38.3086 57.2612 39.9014 58.2085 41.6416 58.6225 cv
41.4414 60.9145 40.4599 63.0415 40.0733 65.2993 cv
39.7275 67.3218 39.8301 69.4712 39.125 71.4165 cv
39.0525 71.455 39.008 71.5266 39.0081 71.6078 cv
39.0081 71.6338 39.0127 71.6608 39.0224 71.688 cv
38.9765 71.7983 38.9306 71.9097 38.8789 72.019 cv
38.8552 72.0699 38.8446 72.1193 38.8447 72.1664 cv
38.8453 72.3657 39.0369 72.5247 39.2343 72.5816 cv
39.7871 72.7407 40.4346 72.9126 41.0459 73.1577 cv
41.6679 73.6001 42.2832 74.0503 42.8877 74.5142 cv
42.9571 74.6274 li
43.0918 74.6753 li
44.9648 76.1255 46.7529 77.6821 48.4346 79.3589 cv
53.4287 84.3383 57.3672 90.2476 60.4034 96.5962 cv
62.1563 100.261 63.9141 104.084 64.4199 108.156 cv
64.5111 108.89 64.5454 109.626 64.5454 110.363 cv
64.5456 112.596 64.2309 114.837 64.232 117.067 cv
64.2324 118.024 64.2911 118.98 64.458 119.931 cv
64.458 119.931 li
64.494 120.136 64.6786 120.303 64.8919 120.303 cv
64.8931 120.303 64.8943 120.303 64.8955 120.303 cv
64.8955 120.303 li
64.9034 120.303 64.9113 120.303 64.9192 120.303 cv
65.4113 120.303 65.9043 120.451 66.3925 120.506 cv
66.5442 120.523 66.7011 120.54 66.8559 120.54 cv
67.1249 120.54 67.3875 120.49 67.6045 120.31 cv
67.9336 120.036 68.1162 119.617 68.251 119.22 cv
68.5732 118.274 68.6523 117.261 68.7812 116.277 cv
69.2031 113.058 69.0274 109.795 69.2207 106.561 cv
69.2207 106.561 li
69.4935 102.003 70.1601 97.2238 72.3585 93.1534 cv
72.3714 93.1294 72.3844 93.1054 72.3975 93.0815 cv
72.4041 93.0694 72.4109 93.057 72.4175 93.0449 cv
73.4571 91.1512 74.8781 89.4894 76.573 88.2288 cv
76.5744 88.2277 76.5755 88.227 76.5769 88.2259 cv
76.5827 88.2216 76.5892 88.2168 76.5951 88.2124 cv
76.6002 88.2086 76.6059 88.2044 76.6111 88.2006 cv
76.6132 88.199 76.6151 88.1976 76.6172 88.1961 cv
78.7159 86.6482 81.23 85.7148 83.9571 85.7148 cv
83.9972 85.7148 84.038 85.715 84.0781 85.7154 cv
88.082 85.7544 92.001 87.5395 94.8516 90.3531 cv
94.9375 90.4243 li
94.9541 90.4506 li
95.3642 90.8637 95.7529 91.2974 96.1152 91.7514 cv
96.6846 92.3755 97.1689 93.0825 97.5791 93.8169 cv
98.3642 95.2202 98.9268 96.7446 99.3828 98.2837 cv
99.6191 99.0806 99.8242 99.8863 100.013 100.696 cv
100.013 100.696 100.013 100.697 100.013 100.698 cv
100.016 100.712 100.018 100.726 100.018 100.739 cv
100.018 100.809 99.9767 100.86 99.9229 100.889 cv
99.9229 100.889 li
99.9229 100.889 li
99.9229 100.889 li
100.12 101.942 100.245 103.011 100.304 104.08 cv
100.332 104.606 100.346 105.132 100.346 105.659 cv
100.348 109.703 99.5356 113.746 98.2939 117.579 cv
97.6425 119.59 96.9004 121.563 95.8369 123.393 cv
95.2901 124.334 94.6592 125.324 94.4043 126.395 cv
94.3605 126.579 94.3406 126.758 94.3405 126.934 cv
94.3404 127.639 94.6609 128.282 95.041 128.906 cv
95.5957 129.818 96.2793 130.641 96.8945 131.511 cv
97.6992 132.65 98.333 133.93 98.9366 135.182 cv
99.623 136.606 100.249 138.062 100.851 139.523 cv
101.224 140.431 101.408 141.466 101.951 142.295 cv
102.488 143.116 103.337 143.424 104.273 143.424 cv
104.328 143.424 104.383 143.422 104.438 143.42 cv
105.88 143.367 107.318 143.224 108.754 143.08 cv
108.754 143.08 li
108.785 143.076 108.817 143.073 108.848 143.07 cv
111.291 142.823 113.749 142.516 116.209 142.516 cv
116.238 142.516 116.267 142.516 116.296 142.516 cv
116.569 143.466 116.885 144.404 117.219 145.323 cv
114.176 145.659 111.126 145.929 108.101 146.409 cv
101.311 147.487 94.6172 149.516 88.7412 153.157 cv
85.669 155.06 82.9551 157.407 80.5234 160.077 cv
79.3037 161.416 78.2344 162.886 77.0127 164.221 cv
75.8437 165.5 74.4882 166.591 73.4668 168.001 cv
73.4638 168.009 li
72.0537 168.632 70.6396 169.203 69.0791 169.332 cv
68.815 169.353 68.5526 169.363 68.291 169.363 cv
66.906 169.363 65.5499 169.096 64.165 168.979 cv
63.9294 168.959 63.6948 168.949 63.4621 168.949 cv
62.1558 168.949 60.9141 169.287 59.9434 170.256 cv
59.3361 170.863 58.8607 171.574 58.4129 172.306 cv
70.5677 120.736 mo
70.1399 121.422 69.7267 122.116 69.3711 122.843 cv
69.293 123.014 li
69.1523 123.801 69.084 124.601 69.2012 125.365 cv
69.1709 125.413 69.1543 125.477 69.1758 125.569 cv
69.3164 126.199 69.4736 126.818 69.7129 127.417 cv
70.6726 129.828 73.1732 131.437 75.7597 131.437 cv
75.8734 131.437 75.9876 131.434 76.1016 131.427 cv
77.6933 131.339 78.9521 130.596 80.1191 129.558 cv
81.3575 128.457 82.4258 127.182 83.4707 125.899 cv
84.5722 124.545 85.6855 123.248 86.9834 122.074 cv
88.25 120.926 89.5879 119.863 90.8681 118.732 cv
93.1387 116.724 94.8994 114.379 96.0996 111.586 cv
98.2969 106.475 98.5733 100.341 96.1953 95.2378 cv
95.1748 93.0474 93.6464 91.0903 91.625 89.7407 cv
89.577 88.3738 87.0901 87.6585 84.6285 87.6585 cv
84.4785 87.6585 84.3284 87.6612 84.1787 87.6665 cv
81.1778 87.7729 78.3252 89.1001 76.3428 91.3598 cv
75.2646 92.5894 74.4268 94.0239 73.834 95.5464 cv
73.7188 95.8413 73.6289 96.1382 73.5498 96.436 cv
73.3613 96.9829 73.2198 97.5503 73.0947 98.0894 cv
72.8486 99.1597 72.7012 100.241 72.6113 101.334 cv
72.4424 103.388 72.3457 105.441 72.1348 107.491 cv
72.1162 107.69 li
72.2325 107.322 72.3701 106.962 72.5254 106.602 cv
72.6109 106.403 72.6992 106.205 72.7924 106.009 cv
72.7713 106.262 72.7476 106.515 72.7207 106.767 cv
72.4765 109.061 72.5342 111.394 72.167 113.673 cv
72.167 113.673 li
71.81 115.892 71.2224 118.087 70.685 120.268 cv
70.6829 120.276 70.6808 120.285 70.6787 120.293 cv
70.6425 120.441 70.6053 120.589 70.5677 120.736 cv
.643137 .403922 .25098 rgb
f
14.2581 144.656 mo
14.2564 144.656 14.2547 144.655 14.2529 144.654 cv
14.2546 144.655 14.2564 144.656 14.2581 144.656 cv
f
12.749 102.271 mo
13.8646 100.047 14.946 97.5941 14.9482 95.065 cv
14.9482 95.0651 li
14.946 97.5943 13.8646 100.048 12.749 102.271 cv
8.78646 77.9365 mo
8.78562 77.9283 8.78481 77.9203 8.78397 77.9121 cv
8.7848 77.9203 8.78562 77.9283 8.78646 77.9365 cv
8.78288 77.9014 mo
8.78204 77.8931 8.78119 77.8847 8.78036 77.8764 cv
8.78119 77.8847 8.78203 77.8931 8.78288 77.9014 cv
8.77931 77.866 mo
8.7785 77.8579 8.77767 77.8495 8.77686 77.8414 cv
8.77767 77.8495 8.7785 77.8579 8.77931 77.866 cv
8.77573 77.83 mo
8.77498 77.8224 8.77424 77.8149 8.7735 77.8073 cv
8.77423 77.8148 8.775 77.8226 8.77573 77.83 cv
8.772 77.792 mo
8.77139 77.7858 8.77078 77.7795 8.77018 77.7732 cv
8.77079 77.7796 8.77138 77.7857 8.772 77.792 cv
8.7679 77.7496 mo
8.76757 77.7462 8.76723 77.7427 8.7669 77.7392 cv
8.76724 77.7427 8.76756 77.7461 8.7679 77.7496 cv
.305882 .137255 .0823529 rgb
f
10.5234 130.041 mo
10.7402 129.629 10.9473 129.212 11.1816 128.808 cv
11.4658 128.319 11.7636 127.834 12.0117 127.324 cv
12.1533 127.035 12.2666 126.748 12.3594 126.458 cv
12.3662 126.437 li
12.5557 125.843 12.6543 125.241 12.6924 124.584 cv
12.706 124.346 12.7213 124.046 12.7213 123.72 cv
12.7214 123.205 12.683 122.626 12.5381 122.128 cv
12.2656 121.659 11.9385 121.217 11.5762 120.809 cv
9.94529 120.476 8.26761 120.276 6.76954 119.507 cv
6.76169 119.503 6.75385 119.499 6.74601 119.495 cv
5.75043 118.98 4.84691 118.247 4.25095 117.289 cv
4.25095 117.289 li
3.8358 116.622 3.50817 115.766 3.50865 114.942 cv
3.50882 114.638 3.55367 114.338 3.65527 114.053 cv
3.97266 113.165 4.80082 112.582 5.52441 112.039 cv
6.42282 111.365 7.1924 110.641 7.92089 109.785 cv
9.85548 107.509 11.4131 104.935 12.749 102.271 cv
12.749 102.271 li
13.8646 100.048 14.946 97.5943 14.9482 95.0651 cv
14.9482 95.065 li
14.9485 94.7517 14.9323 94.4372 14.8974 94.1218 cv
14.8949 94.0993 14.8924 94.0768 14.8897 94.0542 cv
14.5576 91.2563 12.8301 88.7905 11.4912 86.3902 cv
10.0254 83.7593 9.10255 80.9712 8.79005 77.9712 cv
8.79005 77.9712 li
8.78885 77.9596 8.78765 77.948 8.78646 77.9365 cv
8.78562 77.9283 8.7848 77.9203 8.78397 77.9121 cv
8.78361 77.9085 8.78324 77.905 8.78288 77.9014 cv
8.78203 77.8931 8.78119 77.8847 8.78036 77.8764 cv
8.78001 77.8729 8.77966 77.8695 8.77931 77.866 cv
8.7785 77.8579 8.77767 77.8495 8.77686 77.8414 cv
8.77648 77.8376 8.77611 77.8338 8.77573 77.83 cv
8.775 77.8226 8.77423 77.8148 8.7735 77.8073 cv
8.773 77.8022 8.7725 77.7971 8.772 77.792 cv
8.77138 77.7857 8.77079 77.7796 8.77018 77.7732 cv
8.76941 77.7654 8.76866 77.7575 8.7679 77.7496 cv
8.76756 77.7461 8.76724 77.7427 8.7669 77.7392 cv
8.61824 76.1835 8.6007 74.6261 8.64158 73.0688 cv
8.8154 73.9458 9.00198 74.8218 9.19725 75.6958 cv
9.52931 77.187 9.82425 78.6968 10.376 80.1274 cv
10.8818 81.4409 11.6114 82.6958 12.7646 83.5415 cv
14.1348 84.5464 15.917 84.8169 17.5752 84.8716 cv
17.8083 84.8792 18.0415 84.8824 18.2746 84.8824 cv
18.9288 84.8824 19.5829 84.8569 20.237 84.8315 cv
20.8909 84.8061 21.5449 84.7806 22.1988 84.7806 cv
22.541 84.7806 22.8832 84.7876 23.2256 84.8052 cv
24.9384 84.894 26.6474 85.2895 28.2715 85.8266 cv
31.2373 86.8061 34.2246 88.3628 36.3818 90.6801 cv
35.8672 90.5298 35.3623 90.3482 34.8643 90.145 cv
33.3017 89.5092 31.7724 88.8511 30.1338 88.4292 cv
28.5078 88.0113 26.8349 87.7808 25.1601 87.6939 cv
23.4192 87.6028 21.6481 87.5236 19.9003 87.5236 cv
19.6981 87.5236 19.4964 87.5246 19.2949 87.5268 cv
18.3516 87.5386 17.3828 87.5756 16.4619 87.7983 cv
15.8994 87.934 15.2041 88.1714 14.9483 88.7436 cv
14.5693 89.5894 15.333 90.7017 15.6767 91.4389 cv
15.9931 92.1186 16.1728 92.7407 16.1602 93.4976 cv
16.1465 94.3403 15.9844 95.1753 15.7588 95.9858 cv
15.3242 97.5435 15.0791 99.1597 14.6651 100.726 cv
14.251 102.294 13.7647 103.848 13.1426 105.347 cv
12.5508 106.774 11.8379 108.123 10.7734 109.255 cv
9.78514 110.306 8.60646 111.164 7.43655 112 cv
6.77244 112.474 5.63087 112.957 5.42483 113.842 cv
5.20023 114.812 6.00195 116.089 6.58694 116.789 cv
8.01856 118.499 10.2549 118.294 12.2363 118.72 cv
12.8096 118.844 13.3702 119.025 13.8857 119.309 cv
14.4277 119.609 14.8838 120.029 15.373 120.405 cv
15.9925 120.88 16.6984 121.329 17.4647 121.329 cv
17.6865 121.329 17.9133 121.291 18.1445 121.206 cv
19.1416 120.835 20.2803 119.738 20.335 118.623 cv
20.3779 117.745 19.8603 116.921 19.4824 116.098 cv
20.2471 116.66 21.0263 117.201 21.7197 117.853 cv
22.1592 118.265 22.6182 118.737 22.8398 119.308 cv
23.1006 119.982 22.7588 120.674 22.3808 121.232 cv
21.6113 122.369 20.3594 123.595 19.0478 124.047 cv
18.4382 124.257 17.8046 124.344 17.1673 124.344 cv
16.1874 124.344 15.1983 124.14 14.2705 123.868 cv
14.2482 123.861 14.2255 123.858 14.2029 123.858 cv
14.0894 123.858 13.9787 123.937 13.9502 124.049 cv
13.5957 125.415 13.0069 126.705 12.5996 128.054 cv
12.4936 128.406 12.3892 128.776 12.3135 129.153 cv
12.2097 129.165 12.1062 129.178 12.0029 129.19 cv
11.6416 129.233 11.2832 129.259 10.9268 129.275 cv
10.791 129.53 10.6582 129.787 10.5234 130.041 cv
.643137 .403922 .25098 rgb
f
15.4783 145.341 mo
15.0819 145.051 14.5972 144.832 14.2581 144.656 cv
14.2581 144.656 li
14.2564 144.656 14.2546 144.655 14.2529 144.654 cv
14.2529 144.654 li
13.3349 144.178 12.3829 143.458 12.1259 142.403 cv
12.0647 142.153 12.0376 141.906 12.0377 141.663 cv
12.0388 139.831 13.5833 138.172 13.7379 136.354 cv
14.045 136.547 14.3673 136.728 14.6997 136.873 cv
14.1815 137.565 13.7793 138.361 13.4912 139.106 cv
13.082 140.165 12.8613 141.373 13.5244 142.374 cv
14.1474 143.313 15.1845 143.944 16.1631 144.456 cv
16.717 144.745 17.284 144.783 17.8586 144.783 cv
17.9631 144.783 18.0678 144.782 18.1728 144.781 cv
18.2778 144.779 18.383 144.778 18.4885 144.778 cv
18.7113 144.778 18.9349 144.784 19.1591 144.807 cv
18.1084 145.165 16.973 145.271 15.8721 145.328 cv
15.7405 145.334 15.609 145.337 15.4783 145.341 cv
15.4783 145.341 li
15.2864 136.191 mo
14.7587 136.09 14.2345 135.943 13.7071 135.768 cv
13.5689 135.063 13.0815 134.498 12.5732 133.96 cv
11.7764 133.118 11.0088 132.117 10.6113 131.012 cv
10.5312 130.79 10.4965 130.575 10.4965 130.366 cv
10.4965 130.256 10.5059 130.148 10.5234 130.041 cv
10.5234 130.041 li
10.6582 129.787 10.791 129.53 10.9268 129.275 cv
11.2832 129.259 11.6416 129.233 12.0029 129.19 cv
12.1062 129.178 12.2097 129.165 12.3135 129.153 cv
12.1709 129.863 12.13 130.597 12.3711 131.273 cv
13.0234 133.097 15.0342 133.969 16.039 135.571 cv
15.7704 135.748 15.5196 135.957 15.2864 136.191 cv
.729412 .505882 .34902 rgb
f
9.13281 120.477 mo
9.74805 120.451 10.3506 120.566 10.9531 120.683 cv
11.5928 120.808 12.2275 120.96 12.8242 121.227 cv
13.9375 121.723 14.9922 122.41 16.1953 122.679 cv
17.501 122.971 18.709 122.511 19.7334 121.698 cv
20.6025 121.007 21.2412 119.98 20.9678 118.836 cv
20.748 117.918 20.1338 116.44 19.0449 116.333 cv
18.9639 116.325 18.7891 116.15 18.9424 116.12 cv
19.9463 115.921 20.7754 116.974 21.2041 117.738 cv
21.7852 118.771 22.043 119.944 21.4561 121.04 cv
20.8223 122.22 19.3906 123.18 18.0908 123.427 cv
16.7139 123.688 15.4326 123.096 14.2217 122.51 cv
13.4502 122.137 12.6836 121.833 11.8496 121.628 cv
10.9941 121.418 10.1025 121.372 9.2627 121.107 cv
9.00293 121.026 8.64844 120.499 9.13281 120.477 cv
cp
.345098 .172549 .113725 rgb
f
69.293 123.014 mo
69.3711 122.843 li
70.0771 121.4 71.0108 120.085 71.833 118.708 cv
72.7851 117.117 73.4414 115.407 73.876 113.605 cv
74.294 111.874 74.499 110.104 74.8896 108.368 cv
75.0713 107.559 75.248 106.747 75.336 105.921 cv
75.4141 105.191 75.4268 104.423 75.1924 103.719 cv
75.1591 103.621 75.0742 103.581 74.9766 103.596 cv
74.3047 103.706 73.8134 104.297 73.4541 104.828 cv
73.0791 105.381 72.789 105.99 72.5254 106.602 cv
72.3701 106.962 72.2325 107.322 72.1162 107.69 cv
72.1348 107.491 li
72.3457 105.441 72.4424 103.388 72.6113 101.334 cv
72.7012 100.241 72.8486 99.1597 73.0947 98.0894 cv
73.2198 97.5503 73.3613 96.9829 73.5498 96.436 cv
73.6289 96.1382 73.7188 95.8413 73.834 95.5464 cv
74.4268 94.0239 75.2646 92.5894 76.3428 91.3598 cv
78.3252 89.1001 81.1778 87.7729 84.1787 87.6665 cv
86.7852 87.5737 89.4522 88.2905 91.625 89.7407 cv
93.6464 91.0903 95.1748 93.0474 96.1953 95.2378 cv
98.5733 100.341 98.2969 106.475 96.0996 111.586 cv
94.8994 114.379 93.1387 116.724 90.8681 118.732 cv
89.5879 119.863 88.25 120.926 86.9834 122.074 cv
85.6855 123.248 84.5722 124.545 83.4707 125.899 cv
82.4258 127.182 81.3575 128.457 80.1191 129.558 cv
78.9521 130.596 77.6933 131.339 76.1016 131.427 cv
73.3965 131.577 70.7148 129.934 69.7129 127.417 cv
69.4736 126.818 69.3164 126.199 69.1758 125.569 cv
69.1543 125.477 69.1709 125.413 69.2012 125.365 cv
69.084 124.601 69.1523 123.801 69.293 123.014 cv
f
69.8262 125.557 mo
69.7304 125.412 li
69.6816 124.658 69.8115 123.891 69.9678 123.159 cv
70.1718 122.195 70.4443 121.25 70.6787 120.293 cv
71.2178 118.104 71.8086 115.902 72.167 113.673 cv
72.5342 111.394 72.4765 109.061 72.7207 106.767 cv
72.9258 104.845 72.9395 102.91 73.0928 100.984 cv
73.1015 100.874 73.1103 100.765 73.1201 100.656 cv
73.3281 99.9399 73.4277 99.2017 73.5166 98.4624 cv
73.8887 95.3618 75.706 92.2798 78.1934 90.3833 cv
80.5175 88.6108 83.4892 87.9517 86.3662 88.3364 cv
88.7393 88.6528 90.9854 89.6324 92.7393 91.2768 cv
94.4385 92.8706 95.6094 94.9419 96.3193 97.1469 cv
98.0039 102.373 97.2383 108.278 94.6035 113.059 cv
93.9414 114.26 93.1552 115.395 92.2432 116.42 cv
91.2285 117.561 90.041 118.54 88.8759 119.522 cv
87.6709 120.54 86.459 121.552 85.3418 122.667 cv
84.2031 123.803 83.2363 125.086 82.208 126.318 cv
81.1826 127.545 80.1006 128.771 78.8125 129.73 cv
77.6113 130.624 76.1113 130.965 74.6387 130.694 cv
73.3477 130.456 72.0498 129.793 71.205 128.77 cv
70.4521 127.858 70.1563 126.667 69.8262 125.557 cv
.72549 .509804 .345098 rgb
f
78.8125 129.73 mo
78.8125 129.73 li
80.1006 128.771 81.1826 127.545 82.208 126.318 cv
82.5601 125.896 82.9052 125.468 83.2523 125.042 cv
82.9052 125.469 82.5603 125.897 82.208 126.319 cv
81.1826 127.545 80.1006 128.771 78.8125 129.73 cv
85.3418 122.667 mo
85.3418 122.667 li
86.459 121.552 87.6709 120.54 88.8759 119.522 cv
90.041 118.54 91.2285 117.561 92.2432 116.42 cv
93.1552 115.395 93.9414 114.26 94.6035 113.059 cv
96.2914 109.996 97.2122 106.472 97.2131 102.96 cv
97.2122 106.472 96.2914 109.996 94.6035 113.059 cv
93.9414 114.26 93.1552 115.395 92.2432 116.42 cv
91.2285 117.561 90.041 118.541 88.8759 119.522 cv
87.6709 120.54 86.459 121.552 85.3418 122.667 cv
85.3418 122.667 li
.819608 .596078 .419608 rgb
f
78.8125 129.73 mo
80.0332 128.821 81.0674 127.671 82.0449 126.508 cv
81.8477 126.392 81.6611 126.255 81.4903 126.099 cv
81.4876 126.097 81.4851 126.094 81.4824 126.092 cv
81.5045 126.065 81.5267 126.038 81.5488 126.011 cv
82.4736 124.887 83.3721 123.739 84.3672 122.675 cv
85.2617 121.72 86.293 120.884 87.3017 120.055 cv
89.2959 118.414 91.3594 116.803 92.9053 114.708 cv
95.9863 110.536 97.0771 105.112 96.0938 100.039 cv
95.6191 97.5913 94.6582 95.2085 93.2158 93.1704 cv
91.7636 91.1197 89.8467 89.3892 87.3955 88.6743 cv
86.4785 88.4077 85.5146 88.271 84.541 88.2437 cv
84.6407 88.2416 84.7406 88.2405 84.8404 88.2405 cv
85.3495 88.2405 85.8592 88.2686 86.3662 88.3364 cv
88.7393 88.6528 90.9854 89.6324 92.7393 91.2768 cv
94.4385 92.8706 95.6094 94.9419 96.3193 97.1469 cv
96.9247 99.0249 97.2137 100.991 97.2131 102.96 cv
97.2122 106.472 96.2914 109.996 94.6035 113.059 cv
93.9414 114.26 93.1552 115.395 92.2432 116.42 cv
91.2285 117.561 90.041 118.54 88.8759 119.522 cv
87.6709 120.54 86.459 121.552 85.3418 122.667 cv
85.3418 122.667 li
84.5926 123.414 83.9184 124.225 83.2523 125.042 cv
82.9052 125.468 82.5601 125.896 82.208 126.318 cv
81.1826 127.545 80.1006 128.771 78.8125 129.73 cv
.92549 .760784 .572549 rgb
f
72.8008 120.152 mo
72.9726 118.458 73.4912 116.772 74.373 115.312 cv
74.7754 114.646 75.2646 114.045 75.8535 113.537 cv
76.5634 112.924 77.4307 112.399 77.9199 111.575 cv
78.4521 110.679 78.2012 109.554 78.0156 108.593 cv
77.7969 107.464 77.5966 106.33 77.4766 105.185 cv
77.0605 101.243 77.7871 96.8716 80.8184 94.062 cv
82.0156 92.9536 83.5488 92.2388 85.1894 92.1694 cv
86.8213 92.1011 88.3877 92.6665 89.6748 93.6518 cv
91.1377 94.7719 92.2441 96.3042 93.0166 97.9663 cv
93.7686 99.5835 94.125 101.258 93.9707 103.035 cv
93.8565 102.998 li
93.9297 101.489 93.4404 99.8843 92.8359 98.5181 cv
92.1738 97.021 91.2129 95.6255 89.998 94.523 cv
88.833 93.4663 87.4062 92.7808 85.8164 92.7485 cv
84.1953 92.7163 82.6846 93.3501 81.4756 94.4116 cv
79.8184 95.8647 78.8545 97.8305 78.3858 99.9351 cv
79.2627 98.9614 81.0479 98.7299 82.2705 98.8335 cv
84.6006 99.0308 86.5918 100.65 87.9394 102.472 cv
88.0537 102.873 88.1465 103.283 88.207 103.698 cv
88.0508 103.448 li
87.4092 102.512 86.6641 101.635 85.7705 100.93 cv
84.2236 99.7114 82.3144 99.1109 80.3779 99.647 cv
79.9296 99.77 79.4892 99.9644 79.1259 100.246 cv
79.0059 100.273 78.8887 100.314 78.7783 100.378 cv
78.1709 100.729 77.999 101.507 77.9609 102.153 cv
77.9375 102.558 77.9629 102.981 78.0322 103.393 cv
78.0342 103.936 78.0586 104.477 78.1074 105.007 cv
78.208 106.085 78.3809 107.156 78.5791 108.22 cv
78.7461 109.112 78.9785 110.022 78.8672 110.935 cv
78.6475 112.729 76.7422 113.463 75.6885 114.705 cv
75.2813 115.185 74.9375 115.718 74.6455 116.281 cv
74.7373 116.277 74.8418 116.308 74.9111 116.373 cv
75.6416 117.069 76.3115 117.748 77.3867 117.785 cv
78.2793 117.816 79.1162 117.43 79.8467 116.952 cv
81.4082 115.931 82.7285 114.403 83.706 112.826 cv
83.7646 112.73 83.9482 112.86 83.8945 112.957 cv
82.8984 114.778 81.5996 116.658 79.7529 117.702 cv
78.9492 118.156 78.0371 118.429 77.1094 118.289 cv
76.0859 118.135 75.0547 117.436 74.5098 116.56 cv
74.5098 116.559 li
74.0606 117.498 73.75 118.509 73.5566 119.514 cv
73.2168 121.27 73.2686 123.069 73.9229 124.745 cv
74.0371 125.037 73.5801 125.001 73.4766 124.81 cv
72.7178 123.41 72.6416 121.706 72.8008 120.152 cv
.345098 .172549 .113725 rgb
f
70.685 120.268 mo
71.2224 118.087 71.81 115.892 72.167 113.673 cv
71.81 115.893 71.2224 118.087 70.685 120.268 cv
.568627 .321569 .180392 rgb
f
75.6292 130.785 mo
75.6287 130.785 75.6283 130.785 75.6279 130.785 cv
75.6283 130.785 75.6287 130.785 75.6292 130.785 cv
75.6292 130.785 li
75.6325 130.785 mo
76.7218 130.784 77.7858 130.454 78.6914 129.818 cv
77.7857 130.454 76.7219 130.784 75.6325 130.785 cv
78.6918 129.817 mo
78.7221 129.796 78.7523 129.774 78.7822 129.752 cv
78.7523 129.774 78.7221 129.796 78.6918 129.817 cv
73.095 100.956 mo
73.103 100.856 73.1111 100.756 73.1192 100.656 cv
73.32 99.9679 73.4198 99.2593 73.5061 98.549 cv
73.4198 99.2593 73.32 99.9679 73.1201 100.656 cv
73.1111 100.756 73.103 100.856 73.095 100.956 cv
.305882 .137255 .0823529 rgb
f
75.6292 130.785 mo
75.6287 130.785 75.6283 130.785 75.6279 130.785 cv
75.2993 130.785 74.9682 130.755 74.6387 130.694 cv
74.6387 130.694 li
73.3477 130.456 72.0498 129.793 71.205 128.77 cv
71.1992 128.763 71.1933 128.756 71.1875 128.749 cv
70.4475 127.839 70.1547 126.659 69.8262 125.557 cv
69.8262 125.557 li
69.7304 125.412 li
69.7232 125.3 69.7199 125.187 69.72 125.075 cv
69.7208 124.431 69.8347 123.782 69.9678 123.159 cv
70.1718 122.195 70.4443 121.25 70.6787 120.293 cv
70.6808 120.285 70.6829 120.276 70.685 120.268 cv
71.2224 118.087 71.81 115.893 72.167 113.673 cv
72.167 113.673 li
72.5342 111.394 72.4765 109.061 72.7207 106.767 cv
72.9258 104.845 72.9395 102.91 73.0928 100.984 cv
73.0935 100.975 73.0942 100.965 73.095 100.956 cv
73.103 100.856 73.1111 100.756 73.1201 100.656 cv
73.32 99.9679 73.4198 99.2593 73.5061 98.549 cv
73.5096 98.5202 73.5131 98.4913 73.5166 98.4624 cv
73.8887 95.3618 75.706 92.2798 78.1934 90.3833 cv
78.3164 90.2993 li
76.544 92.6284 75.4287 95.4702 74.9443 98.3315 cv
74.3447 101.872 74.624 105.69 76.2978 108.915 cv
76.3434 109.002 76.4265 109.041 76.5111 109.041 cv
76.6478 109.041 76.7887 108.94 76.7832 108.784 cv
76.7686 108.321 76.751 107.859 76.7373 107.396 cv
76.669 105.22 76.6513 103.03 76.9395 100.868 cv
77.2217 98.7476 77.8037 96.5249 79.167 94.8276 cv
80.5527 93.101 82.746 92.1168 84.9513 92.1168 cv
85.0834 92.1168 85.2157 92.1203 85.3477 92.1274 cv
85.5266 92.1371 85.7039 92.1541 85.8793 92.178 cv
85.7387 92.1686 85.5972 92.1639 85.4553 92.1639 cv
85.3669 92.1639 85.2782 92.1657 85.1894 92.1694 cv
83.5488 92.2388 82.0156 92.9536 80.8184 94.062 cv
77.7871 96.8716 77.0605 101.243 77.4766 105.185 cv
77.5966 106.33 77.7969 107.464 78.0156 108.593 cv
78.2012 109.554 78.4521 110.679 77.9199 111.575 cv
77.4307 112.399 76.5634 112.924 75.8535 113.537 cv
75.2646 114.045 74.7754 114.646 74.373 115.312 cv
73.4912 116.772 72.9726 118.458 72.8008 120.152 cv
72.6416 121.706 72.7178 123.41 73.4766 124.81 cv
73.5267 124.903 73.6597 124.959 73.7707 124.959 cv
73.8888 124.959 73.9818 124.895 73.9229 124.745 cv
73.2686 123.069 73.2168 121.27 73.5566 119.514 cv
73.75 118.509 74.0606 117.498 74.5098 116.559 cv
74.5098 116.56 li
75.0547 117.436 76.0859 118.135 77.1094 118.289 cv
77.2754 118.314 77.4407 118.326 77.6052 118.326 cv
78.3599 118.326 79.093 118.075 79.7529 117.702 cv
81.5996 116.658 82.8984 114.778 83.8945 112.957 cv
83.935 112.884 83.8408 112.792 83.7668 112.792 cv
83.7426 112.792 83.7205 112.802 83.706 112.826 cv
82.7285 114.403 81.4082 115.931 79.8467 116.952 cv
79.144 117.412 78.3428 117.786 77.4883 117.786 cv
77.4545 117.786 77.4206 117.786 77.3867 117.785 cv
76.3115 117.748 75.6416 117.069 74.9111 116.373 cv
74.8457 116.312 74.749 116.28 74.6611 116.28 cv
74.6559 116.28 74.6507 116.281 74.6455 116.281 cv
74.9375 115.718 75.2813 115.185 75.6885 114.705 cv
76.7422 113.463 78.6475 112.729 78.8672 110.935 cv
78.9785 110.022 78.7461 109.112 78.5791 108.22 cv
78.3809 107.156 78.208 106.085 78.1074 105.007 cv
78.0586 104.477 78.0342 103.936 78.0322 103.393 cv
77.9629 102.981 77.9375 102.558 77.9609 102.153 cv
77.999 101.507 78.1709 100.729 78.7783 100.378 cv
78.8887 100.314 79.0059 100.273 79.1259 100.246 cv
79.4892 99.9644 79.9296 99.77 80.3779 99.647 cv
80.8623 99.5129 81.3448 99.4499 81.8205 99.4499 cv
83.2466 99.4499 84.6105 100.016 85.7705 100.93 cv
86.6641 101.635 87.4092 102.512 88.0508 103.448 cv
88.207 103.698 li
88.1465 103.283 88.0537 102.873 87.9394 102.472 cv
86.5918 100.65 84.6006 99.0308 82.2705 98.8335 cv
82.0966 98.8188 81.9113 98.8108 81.7188 98.8108 cv
80.5584 98.8108 79.1379 99.0999 78.3858 99.9351 cv
78.8545 97.8305 79.8184 95.8647 81.4756 94.4116 cv
82.6552 93.3759 84.1221 92.7474 85.6985 92.7474 cv
85.7377 92.7474 85.7771 92.7477 85.8164 92.7485 cv
87.4062 92.7808 88.833 93.4663 89.998 94.523 cv
91.1378 95.5574 92.0541 96.8497 92.7098 98.2419 cv
93.2402 99.5694 93.5367 100.992 93.5605 102.413 cv
93.6064 105.092 92.705 107.848 91.2442 110.077 cv
89.8681 112.175 87.9863 113.875 86.0752 115.475 cv
85.0625 116.323 84.0312 117.148 83.0186 117.997 cv
82.0684 118.793 81.0821 119.564 80.5605 120.724 cv
79.7758 122.468 80.0314 124.758 81.4824 126.092 cv
80.6366 127.119 79.7751 128.169 78.7217 128.99 cv
77.8203 129.693 76.7969 130.235 75.6944 130.544 cv
75.4248 130.62 75.1534 130.679 74.8799 130.726 cv
75.1322 130.761 75.3849 130.778 75.6362 130.778 cv
76.7729 130.778 77.8824 130.423 78.8125 129.73 cv
78.8125 129.73 li
78.8024 129.738 78.7923 129.745 78.7822 129.752 cv
78.7523 129.774 78.7221 129.796 78.6918 129.817 cv
78.6917 129.817 78.6915 129.817 78.6914 129.818 cv
77.7858 130.454 76.7218 130.784 75.6325 130.785 cv
75.6314 130.785 75.6302 130.785 75.6292 130.785 cv
83.0903 100.394 mo
82.9842 100.394 82.8639 100.478 82.8438 100.585 cv
82.7061 101.313 82.8242 102.066 83.0098 102.776 cv
83.4404 104.422 84.2549 105.991 85.1894 107.404 cv
85.959 108.571 86.8994 109.876 88.1524 110.565 cv
88.1968 110.589 88.2411 110.6 88.2831 110.6 cv
88.4175 110.6 88.5285 110.488 88.5449 110.34 cv
88.6279 109.556 88.6152 108.765 88.5342 107.982 cv
88.2529 105.26 87.1484 101.857 84.375 100.749 cv
84.2666 100.73 li
83.9141 100.53 83.5234 100.405 83.0957 100.394 cv
83.0939 100.394 83.0921 100.394 83.0903 100.394 cv
.643137 .403922 .25098 rgb
f
75.6362 130.778 mo
75.3849 130.778 75.1322 130.761 74.8799 130.726 cv
75.1534 130.679 75.4248 130.62 75.6944 130.544 cv
76.7969 130.235 77.8203 129.693 78.7217 128.99 cv
79.7751 128.169 80.6366 127.119 81.4824 126.092 cv
81.4851 126.094 81.4876 126.097 81.4903 126.099 cv
81.6611 126.255 81.8477 126.392 82.0449 126.508 cv
81.0674 127.671 80.0332 128.821 78.8125 129.73 cv
78.8125 129.73 li
78.8125 129.73 li
77.8824 130.423 76.7729 130.778 75.6362 130.778 cv
.819608 .603922 .415686 rgb
f
73.7707 124.959 mo
73.6597 124.959 73.5267 124.903 73.4766 124.81 cv
72.7178 123.41 72.6416 121.706 72.8008 120.152 cv
72.9726 118.458 73.4912 116.772 74.373 115.312 cv
74.7754 114.646 75.2646 114.045 75.8535 113.537 cv
76.5634 112.924 77.4307 112.399 77.9199 111.575 cv
78.4521 110.679 78.2012 109.554 78.0156 108.593 cv
77.7969 107.464 77.5966 106.33 77.4766 105.185 cv
77.0605 101.243 77.7871 96.8716 80.8184 94.062 cv
82.0156 92.9536 83.5488 92.2388 85.1894 92.1694 cv
85.2782 92.1657 85.3669 92.1639 85.4553 92.1639 cv
85.5972 92.1639 85.7387 92.1686 85.8793 92.178 cv
88.0386 92.4723 89.9173 93.817 91.208 95.5493 cv
91.8209 96.3724 92.3265 97.2823 92.7098 98.2419 cv
92.0541 96.8497 91.1378 95.5574 89.998 94.523 cv
88.833 93.4663 87.4062 92.7808 85.8164 92.7485 cv
85.7771 92.7477 85.7377 92.7474 85.6985 92.7474 cv
84.1221 92.7474 82.6552 93.3759 81.4756 94.4116 cv
79.8184 95.8647 78.8545 97.8305 78.3858 99.9351 cv
79.1379 99.0999 80.5584 98.8108 81.7188 98.8108 cv
81.9113 98.8108 82.0966 98.8188 82.2705 98.8335 cv
84.6006 99.0308 86.5918 100.65 87.9394 102.472 cv
88.0537 102.873 88.1465 103.283 88.207 103.698 cv
88.0508 103.448 li
87.4092 102.512 86.6641 101.635 85.7705 100.93 cv
84.6105 100.016 83.2466 99.4499 81.8205 99.4499 cv
81.3448 99.4499 80.8623 99.5129 80.3779 99.647 cv
79.9296 99.77 79.4892 99.9644 79.1259 100.246 cv
79.0059 100.273 78.8887 100.314 78.7783 100.378 cv
78.1709 100.729 77.999 101.507 77.9609 102.153 cv
77.9375 102.558 77.9629 102.981 78.0322 103.393 cv
78.0342 103.936 78.0586 104.477 78.1074 105.007 cv
78.208 106.085 78.3809 107.156 78.5791 108.22 cv
78.7461 109.112 78.9785 110.022 78.8672 110.935 cv
78.6475 112.729 76.7422 113.463 75.6885 114.705 cv
75.2813 115.185 74.9375 115.718 74.6455 116.281 cv
74.6507 116.281 74.6559 116.28 74.6611 116.28 cv
74.749 116.28 74.8457 116.312 74.9111 116.373 cv
75.6416 117.069 76.3115 117.748 77.3867 117.785 cv
77.4206 117.786 77.4545 117.786 77.4883 117.786 cv
78.3428 117.786 79.144 117.412 79.8467 116.952 cv
81.4082 115.931 82.7285 114.403 83.706 112.826 cv
83.7205 112.802 83.7426 112.792 83.7668 112.792 cv
83.8408 112.792 83.935 112.884 83.8945 112.957 cv
82.8984 114.778 81.5996 116.658 79.7529 117.702 cv
79.093 118.075 78.3599 118.326 77.6052 118.326 cv
77.4407 118.326 77.2754 118.314 77.1094 118.289 cv
76.0859 118.135 75.0547 117.436 74.5098 116.56 cv
74.5098 116.559 li
74.0606 117.498 73.75 118.509 73.5566 119.514 cv
73.2168 121.27 73.2686 123.069 73.9229 124.745 cv
73.9818 124.895 73.8888 124.959 73.7707 124.959 cv
.305882 .137255 .0823529 rgb
f
45.8115 160.166 mo
47.0244 159.48 48.3965 159.035 49.6875 158.518 cv
51.0586 157.97 52.4258 157.411 53.7734 156.809 cv
56.2266 155.715 58.6543 154.485 60.9648 153.116 cv
62.0225 152.49 63.0566 151.819 63.998 151.027 cv
64.9102 150.258 65.7266 149.396 66.502 148.492 cv
68.0752 146.656 69.3867 144.623 70.6074 142.541 cv
71.9434 140.262 73.2314 137.948 74.4961 135.63 cv
74.6133 135.712 li
73.5566 137.853 72.6377 140.056 71.5303 142.173 cv
70.3975 144.337 69.1494 146.457 67.6563 148.394 cv
66.1982 150.285 64.4502 151.913 62.4277 153.183 cv
60.2119 154.575 57.7949 155.681 55.4229 156.779 cv
53.9014 157.482 52.3516 158.122 50.793 158.738 cv
49.2441 159.35 47.6748 160.065 46.0615 160.488 cv
45.917 160.526 45.6182 160.275 45.8115 160.166 cv
cp
.345098 .172549 .113725 rgb
f
34.2275 87.7485 mo
33.5225 87.1509 32.7861 86.5903 32.0137 86.0767 cv
32.2529 86.23 32.4902 86.3882 32.7227 86.5532 cv
33.2461 86.9233 33.7549 87.3159 34.2275 87.7485 cv
cp
9.93262 84.2397 mo
10.377 85.0806 11.0156 85.8003 11.7803 86.3638 cv
12.1709 86.6519 12.6162 86.9038 13.0732 87.0698 cv
13.209 87.1187 13.3467 87.1616 13.4863 87.1997 cv
13.7295 87.2583 li
13.7861 87.272 li
13.9844 87.3091 14.292 87.3911 14.4463 87.2241 cv
14.7324 87.1733 15.0166 87.0981 15.2734 87.0581 cv
16.3018 86.897 17.3438 86.7788 18.3799 86.6685 cv
20.4463 86.4478 22.5566 85.9351 24.6426 86.022 cv
26.623 86.105 28.5391 87.0054 30.3936 87.6313 cv
31.5596 88.3413 32.8818 88.7651 34.1377 89.2886 cv
34.6357 89.4956 35.1045 89.7378 35.5801 89.9907 cv
35.873 90.1479 36.2432 90.3892 36.5908 90.2925 cv
36.6484 90.2183 li
36.8145 90.0835 36.8994 89.8335 36.9199 89.6362 cv
36.9492 89.3472 36.8975 89.0581 36.8164 88.7798 cv
36.6602 88.2417 36.3711 87.7515 36.0527 87.2944 cv
36.001 87.2202 35.8506 87.2261 35.9092 87.3364 cv
36.1299 87.7573 36.29 88.2222 36.4004 88.6841 cv
36.4453 88.8735 36.4756 89.0776 36.4658 89.2759 cv
36.4346 89.1499 36.3975 89.0288 36.3613 88.9185 cv
36.2168 88.4722 36.0059 88.0415 35.7412 87.6538 cv
35.2617 86.9507 34.5869 86.2515 33.7266 86.0562 cv
33.5869 86.0239 33.6094 86.2036 33.7109 86.2407 cv
34.4346 86.4995 34.9668 87.1772 35.3271 87.8286 cv
35.4141 87.9858 35.4922 88.147 35.5645 88.312 cv
34.8857 87.4761 33.9473 86.7837 33.1484 86.2202 cv
32.3389 85.6509 31.4531 85.106 30.5195 84.7642 cv
30.002 84.5747 29.4629 84.4683 28.9248 84.3579 cv
28.4561 84.1489 27.9785 83.9565 27.4922 83.7905 cv
25.7637 83.1987 23.9883 82.936 22.1709 82.7993 cv
20.1143 82.644 18.0469 82.647 15.9883 82.7661 cv
14.9629 82.8257 13.9404 82.9194 12.9141 82.9556 cv
12.4043 82.9741 11.9111 82.9663 11.4033 82.9175 cv
11.0615 82.8843 10.7217 82.8628 10.3916 82.9731 cv
10.1592 83.0503 10.2266 83.2896 10.3447 83.4341 cv
10.6309 83.7837 10.9238 84.1265 11.2285 84.4565 cv
11.4551 84.9028 11.6973 85.3423 11.9766 85.7554 cv
12.1426 85.9946 li
12.0391 85.936 li
11.3057 85.478 10.625 84.8804 10.1016 84.1909 cv
10.0391 84.1079 9.8623 84.1079 9.93262 84.2397 cv
cp
.192157 .160784 .14902 rgb
f
108.754 143.08 mo
108.785 143.076 108.817 143.073 108.848 143.07 cv
108.817 143.073 108.785 143.076 108.754 143.08 cv
111.158 133.539 mo
109.547 133.539 107.834 132.863 106.546 132.159 cv
104.692 131.145 103.195 129.717 102.518 127.684 cv
101.787 125.496 101.798 123.092 101.847 120.812 cv
101.871 119.673 101.923 118.535 101.94 117.395 cv
101.959 116.173 101.858 114.955 101.982 113.736 cv
102.255 111.044 103.226 108.509 104.005 105.938 cv
104.813 103.273 105.376 100.475 104.558 97.7378 cv
103.916 95.5923 102.9 93.5308 101.879 91.5444 cv
100.694 89.2407 99.3877 86.9936 97.9297 84.8511 cv
96.7568 83.1294 95.4492 81.1753 93.7657 79.9028 cv
92.5342 78.9712 90.9082 78.562 89.4169 78.2876 cv
87.9505 78.0175 86.453 77.9018 84.9589 77.9018 cv
84.4542 77.9018 83.9498 77.915 83.4472 77.94 cv
81.4356 78.0395 79.416 78.3335 77.4903 78.938 cv
75.919 79.4311 74.2852 80.1528 73.1611 81.399 cv
72.5361 82.0932 72.1875 82.9361 72.044 83.8569 cv
71.9121 84.6967 72.0166 85.6294 71.7129 86.4351 cv
71.4126 87.2295 70.6915 87.5107 69.9143 87.5107 cv
69.2432 87.5107 68.5302 87.3009 68.0107 87.0307 cv
66.2901 86.1381 64.7822 84.7612 63.3564 83.4683 cv
62.1045 82.3325 60.7998 81.1694 59.6895 79.8921 cv
57.9873 77.9321 56.9521 75.5142 55.9961 73.1294 cv
55.4853 71.855 54.9971 70.5708 54.4355 69.3188 cv
53.8311 67.9712 53.0752 66.7085 52.4082 65.3941 cv
51.2725 63.1548 50.4102 60.8013 50.6601 58.2515 cv
50.792 56.9057 51.1963 55.6479 51.585 54.3608 cv
51.8369 53.5288 52.1211 52.562 51.9218 51.6889 cv
51.5732 50.1567 49.416 49.8198 48.1543 49.4936 cv
45.8399 48.8941 43.5136 48.4419 41.1777 47.939 cv
39.0381 47.478 36.8213 46.8452 35.126 45.3911 cv
33.04 43.603 32.7607 41.0795 32.1748 38.5542 cv
31.8301 37.0679 31.2334 35.77 30.1494 34.6753 cv
29.1865 33.7026 28.0205 32.9683 27.0264 32.0328 cv
25.5713 30.6636 24.0976 29.0874 24.4356 26.939 cv
24.6074 25.8452 25.0898 24.8091 25.5137 23.7945 cv
25.999 22.6324 26.5224 21.4848 27.0136 20.3247 cv
27.9268 18.1694 28.9531 16.1274 30.7559 14.5728 cv
31.9209 13.5698 33.3007 12.8785 34.6289 12.1206 cv
36.041 11.3139 37.4502 10.5034 38.831 9.64504 cv
39.71 9.09916 40.5517 8.51218 41.3848 7.9126 cv
41.2418 7.9153 41.0989 7.91549 40.9568 7.92738 cv
41.1535 7.91018 41.3505 7.90252 41.5475 7.90252 cv
42.2694 7.90252 42.9915 8.0052 43.7031 8.11674 cv
44.1912 8.19352 44.6416 8.27144 45.0807 8.27144 cv
45.5517 8.27144 46.0097 8.18178 46.4873 7.90481 cv
47.334 7.41361 48.1084 6.84717 49.0645 6.57767 cv
49.7365 6.38875 50.4297 6.32685 51.1237 6.32685 cv
51.3626 6.32685 51.6015 6.33418 51.8398 6.34619 cv
52.555 6.38244 53.2741 6.45804 53.9917 6.45804 cv
54.2597 6.45804 54.5275 6.4475 54.7949 6.42042 cv
55.8457 6.31296 56.7373 5.84819 57.7051 5.47123 cv
58.3692 5.21179 59.0508 5.03963 59.7524 5.03963 cv
59.9566 5.03963 60.1625 5.05421 60.3701 5.08548 cv
61.2363 5.2163 61.9844 5.65183 62.7578 6.03178 cv
63.3758 6.33559 63.9549 6.50251 64.5707 6.50251 cv
64.8911 6.50251 65.2213 6.45734 65.5723 6.36276 cv
66.5049 6.11181 67.3877 5.68796 68.3526 5.56393 cv
68.5265 5.54143 68.6971 5.53103 68.8644 5.53103 cv
70.4765 5.53103 71.8085 6.49451 73.3594 6.8794 cv
73.6622 6.95465 73.9604 6.98611 74.2553 6.98611 cv
75.0069 6.98611 75.7374 6.78185 76.4707 6.57758 cv
77.204 6.37333 77.9402 6.16907 78.703 6.16907 cv
78.766 6.16907 78.8292 6.17046 78.8925 6.17337 cv
80.8486 6.26317 82.4541 7.49173 84.2568 8.0952 cv
84.8444 8.29195 85.4344 8.35902 86.0257 8.35902 cv
86.6585 8.35902 87.293 8.2823 87.9288 8.20555 cv
88.5645 8.12878 89.2016 8.05203 89.8391 8.05203 cv
90.1716 8.05203 90.5042 8.0729 90.8369 8.12552 cv
91.7911 8.27689 92.5693 8.77787 93.4102 9.2134 cv
94.4014 9.72607 95.4776 9.99168 96.5606 10.23 cv
98.3301 10.6187 100.257 10.9497 101.831 11.895 cv
102.594 12.352 103.146 13.0219 103.809 13.5982 cv
104.598 14.2846 105.632 14.5444 106.625 14.7944 cv
108.454 15.2534 110.158 15.7046 111.599 16.9936 cv
112.402 17.7134 113.104 18.3619 114.108 18.8042 cv
114.966 19.1821 115.856 19.4946 116.638 20.0249 cv
117.412 20.5513 117.989 21.269 118.564 21.9966 cv
119.233 22.8403 119.956 23.5171 120.876 24.0844 cv
122.531 25.106 124.164 25.9311 125.384 27.4975 cv
126.469 28.8921 127.189 30.522 128.241 31.938 cv
128.251 31.9513 128.261 31.9645 128.271 31.9777 cv
128.261 31.9642 128.25 31.9506 128.24 31.937 cv
127.189 30.522 126.469 28.8921 125.384 27.4975 cv
124.164 25.9311 122.531 25.106 120.876 24.0844 cv
119.956 23.5171 119.233 22.8403 118.564 21.9966 cv
117.989 21.269 117.412 20.5513 116.638 20.0249 cv
115.856 19.4946 114.966 19.1821 114.108 18.8042 cv
113.104 18.3619 112.402 17.7134 111.599 16.9936 cv
110.158 15.7046 108.454 15.2534 106.625 14.7944 cv
105.632 14.5444 104.598 14.2846 103.809 13.5982 cv
103.146 13.0219 102.594 12.352 101.831 11.895 cv
100.257 10.9497 98.3301 10.6187 96.5606 10.23 cv
95.4776 9.99168 94.4014 9.72607 93.4102 9.2134 cv
92.5693 8.77787 91.7911 8.27689 90.8369 8.12552 cv
90.5042 8.0729 90.1716 8.05203 89.8391 8.05203 cv
89.2016 8.05203 88.5645 8.12878 87.9288 8.20555 cv
87.293 8.2823 86.6585 8.35902 86.0257 8.35902 cv
85.4344 8.35902 84.8444 8.29195 84.2568 8.0952 cv
82.4541 7.49173 80.8486 6.26317 78.8925 6.17337 cv
78.831 6.17058 78.7696 6.16925 78.7084 6.16925 cv
78.4034 6.16925 78.1023 6.20237 77.8047 6.25439 cv
78.6396 6.46822 79.457 6.73483 80.2813 7.02099 cv
82.7685 7.88427 85.2754 8.69088 87.7998 9.439 cv
90.4414 10.2222 93.1211 10.8364 95.7715 11.5825 cv
98.4463 12.3355 101.138 13.0855 103.789 13.9165 cv
105.76 14.5337 107.462 15.73 109.009 17.0688 cv
110.592 18.438 112.042 19.9624 113.714 21.228 cv
115.639 22.686 117.683 24.0034 119.663 25.3852 cv
121.674 26.7886 123.668 28.2182 125.579 29.7544 cv
126.573 30.5532 127.545 31.3823 128.479 32.2505 cv
128.546 32.3136 li
128.821 32.6273 129.123 32.91 129.436 33.1806 cv
129.918 33.6774 130.362 34.2034 130.703 34.8208 cv
131.822 36.853 132.09 39.2329 133.034 41.3413 cv
134.025 43.5551 135.28 45.6421 136.171 47.9029 cv
137.089 50.2349 137.449 52.6236 137.568 55.1137 cv
137.63 56.4009 137.669 57.6929 137.828 58.9722 cv
137.994 60.3052 138.382 61.5844 138.668 62.893 cv
139.738 67.7876 140.048 72.9204 139.26 77.8813 cv
139.044 79.2349 138.676 80.5581 138.52 81.9214 cv
138.365 83.268 138.353 84.6255 138.356 85.979 cv
138.361 87.3051 138.384 88.6323 138.295 89.9555 cv
138.213 91.188 137.954 92.3921 137.769 93.6118 cv
137.641 94.4488 137.526 95.2876 137.419 96.1274 cv
136.841 97.2157 136.171 98.2507 135.404 99.2163 cv
134.515 100.336 133.524 101.375 132.667 102.52 cv
130.741 105.09 129.901 108.147 128.906 111.148 cv
128.06 113.698 127.01 116.008 124.952 117.798 cv
121.57 120.739 115.992 122.524 115.426 127.612 cv
115.197 129.663 115.305 132.038 113.148 133.107 cv
112.533 133.412 111.855 133.539 111.158 133.539 cv
116.118 133.044 mo
116.185 132.861 116.265 132.679 116.36 132.498 cv
116.998 131.285 117.993 130.301 119.002 129.388 cv
117.993 130.301 116.998 131.285 116.36 132.499 cv
116.265 132.68 116.185 132.861 116.118 133.044 cv
64.8919 120.303 mo
64.6786 120.303 64.494 120.136 64.458 119.931 cv
64.495 120.137 64.6796 120.303 64.8937 120.303 cv
64.8943 120.303 64.8949 120.303 64.8955 120.303 cv
64.8943 120.303 64.8931 120.303 64.8919 120.303 cv
69.2207 106.561 mo
69.4925 102.003 70.1601 97.2238 72.3585 93.1534 cv
70.1601 97.2238 69.4935 102.003 69.2207 106.561 cv
100.018 100.739 mo
100.018 100.726 100.016 100.712 100.013 100.698 cv
100.016 100.712 100.018 100.726 100.018 100.739 cv
72.4175 93.0449 mo
73.4571 91.1512 74.8781 89.4894 76.573 88.2288 cv
74.8781 89.4894 73.4571 91.1512 72.4175 93.0449 cv
76.5769 88.2259 mo
76.583 88.2214 76.5889 88.217 76.5951 88.2124 cv
76.5892 88.2168 76.5827 88.2216 76.5769 88.2259 cv
76.6111 88.2006 mo
76.6132 88.199 76.6151 88.1976 76.6172 88.1961 cv
76.6151 88.1976 76.6132 88.199 76.6111 88.2006 cv
38.8447 72.1664 mo
38.8446 72.1193 38.8552 72.0699 38.8789 72.019 cv
38.9306 71.9097 38.9765 71.7983 39.0224 71.688 cv
39.0224 71.688 li
38.9765 71.7993 38.9306 71.9097 38.8789 72.019 cv
38.8552 72.0699 38.8446 72.1193 38.8447 72.1664 cv
7.26183 50.0166 mo
6.158 49.3996 5.07179 48.4704 5.074 47.1286 cv
5.07179 48.4696 6.158 49.3996 7.26183 50.0166 cv
135.824 44.4219 mo
135.824 44.3344 135.819 44.2466 135.814 44.1597 cv
135.809 44.0472 135.806 43.9367 135.806 43.8272 cv
135.806 43.9368 135.809 44.0472 135.814 44.1597 cv
135.819 44.2466 135.824 44.3344 135.824 44.4219 cv
135.853 42.8438 mo
135.851 41.414 134.514 40.3825 133.663 39.3686 cv
132.607 38.1118 132.656 36.3628 131.575 35.1069 cv
131.571 35.1019 131.567 35.0969 131.562 35.0919 cv
131.567 35.0969 131.571 35.1019 131.575 35.1069 cv
132.656 36.3628 132.607 38.1118 133.663 39.3686 cv
134.514 40.3827 135.851 41.4144 135.853 42.8438 cv
131.555 35.0838 mo
131.553 35.0816 131.551 35.0795 131.55 35.0773 cv
131.551 35.0795 131.553 35.0816 131.555 35.0838 cv
131.541 35.0672 mo
131.54 35.0661 131.539 35.065 131.538 35.0639 cv
131.539 35.0649 131.54 35.0662 131.541 35.0672 cv
33.3155 12.1904 mo
33.1356 12.1904 32.9547 12.1843 32.7738 12.1781 cv
32.593 12.172 32.4121 12.1659 32.2318 12.1659 cv
32.2319 12.1659 32.232 12.1659 32.232 12.1659 cv
32.4123 12.1659 32.5932 12.172 32.774 12.1781 cv
32.9549 12.1843 33.1357 12.1904 33.3155 12.1904 cv
33.3155 12.1904 33.3155 12.1904 33.3155 12.1904 cv
level3{
gsave
clp
[11.1605 -111.605 -111.605 -11.1605 64.7036 145.858 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.360784 .34902 .34902 ]
/C1 [.278431 .219608 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.278431 .219608 .211765 ]
/C1 [.117647 .0666667 .0588235 ]
/N 1 
>>
]
/Bounds [.582249 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.1605 -111.605 -111.605 -11.1605 64.7036 145.858 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>[(E:>?b<9>$>*5>$>*4=]nm1=]nj/=BJ[-=BAR*='&I)<`W7%<`W7$<E3%!<E3!t<)cgr<)Z^o;c?Un
;GpCj;GpCi;,L1f;,L1e:f'tb:f'q`:JXb^:JOY[:/4PZ9he>V9he>U9MA,R9MA)P91qoN91hfK8kM]J
8P)KF8P)KE84Z9B84Z6@7n6'>7n6$<77BX56pj=/6:+")5sR\#5<h=q5!;%l4?P\e4$#D_3B9&Y3&`cS
2E!EM2)I-G1G^dA0ekC:0JG.5/hSb./M&G(.k<,".Oceq-n$Gj-RL/e,paf^,U4NX+sJ0R+WqmL+!2OF
~>
<~=]ed.=BAR*='&F'<`W4#<E3$u<)cgq;c?Un;GpCj;,L1f;,C(c:esk_:JX_\:/4MX9he>U9MA,Q91qoN
8kM]J8P)KF8OuBC84Q0?7n6$<7Rfg877BX56psF16UO4.6:+"*5s[e&5sR\#5X.It5<h=q5!D+m4Ztqj
4?P_f4$,Mc3]];_3]T2\3B/uX3&iiU2E!HN2)R3I1c$pC1,:R=0eb:70/"q1/hJY,/1`;%.k3"u.4H\o
-mpAi-71&c,paf^,9nEW+sJ0R+WqmL+!2OF*ZZ7A*#on:)]BV5)&X;/(`*u)()@Z#'bqDs',)#l&eYcg
~>
<~=]ed.=BAR*=&r@&<`N."<E3!t<)cdp;c?Rl;Gp@h;,L1e:f'ta:JXb]:/4PY9he>V9MA,R91qoN8kM]J
8P)KF8OuBC84Q0?7n,s;7R]a777BU46psC06UO1,6:*t(5s[e%5X7S!5<h@r5!D.n4Ztqk4?P_g4$,Mc
3]];_3]T2\3B/uX3&`cT2`<QP2E!EM1c.$F1G^dA1,1L;0JG.50.nk//M/M)/1W5$.Olkr.4?Sm-RU8g
-7'ra,U=W[,9nBV+X&!O+<VaJ+!)ID*??+>*#fh9)B'J2)&O2-(Ddl'()7Q!'GM5p',(uk&J5Td&.f?_
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
128.566 32.3335 mo
128.546 32.3136 li
128.451 32.2055 128.359 32.0939 128.271 31.9777 cv
128.366 32.1012 128.465 32.2182 128.566 32.3335 cv
level3{
gsave
clp
[11.1605 -111.605 -111.605 -11.1605 90.2734 148.415 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>Zk37=BJd0=Bej.>?=m0<`WC)<a&L'=]JI)<)d"";clss=Ar+";GpRo;--Ul=&Ddp:f(1h:KC7d<DQ@i
:/+__9iOh\<(otb9M8;W92eJU;bBVZ8kDoP85`#M;+O2S84QNI7SlTE:e!lM7RU$@6r-6=:IIQF6paX9
6;Bj59gV-?5sS.15>4=,9L(d85<__)4\It%90PI14Zl>"4%_Ur8N]%*4#oko3Cl1j83/_$3B'Gg2b,hc
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~7lWCs3&X8d2Ff_b7lWCs3&X8d2Ff_b7lWCs3&X8d2Ff_b7lWCs3&X8d2Ff_b7lWCs3&X8d2Ff_b7lWCs
3&X8d2Ff_b7lWCs3&X8d2Ff_b7lWCs3&X8d2Ff_b7lN=r2`=/b2Ff\a7lN=r2`=/b2Ff\a7lN=r2`=/b
2Ff\a7lN=r2`=/b2Ff\a7lN=r2`=/b2Ff\a7lN=r2`=/b2Ff\a7lN=r2`=/b2Ff\a7lN=r2`=/b2Ff\a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.582249 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.1605 -111.605 -111.605 -11.1605 90.2734 148.415 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?Y36>$>*5=]nm1=]nm0=BJ[-=BJ[,='&I)='&F'<`W7%<`N."<E3%!<)cgr<)cgq;c?Un;c?Rl
;GpCj;Gg:g;,L1f:f'tb:f'ta:JXb^:JX_\:/4PZ:/4MX9he>V9h\5S9MA,R91qoN91qoM8kM]J8kMZH
8P)KF8OuBC84Z9B7n6'>7n6'=7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:
7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:
~>
<~=BJ[,='&I)<`W7%<E3%!<E)ps<)cdp;c?Um;GpCi;,L1f:f'tb:esk_:JOY[:/4MX9h\5S9M8#O91qlL
8kM]I8P)KE84Z9B7n6'>7n,s;7Rfg877BU46psF16UO4.6:*t(5s[e%5X7S"5<h@s5!D.o5!;%l4Ztni
4?P_f4$,Mb3]];_3B9)[3B/uX3&iiU2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS
2`EZS2`EZS2`EZS2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
~>
<~=BJ[,='&I)<`W7%<E3%!<E)ps<)cdp;GpCj;Gg:g;,L.d:f'q`:JXb]:/+GW9he;T9MA,Q91qoN8kM]J
8P)KE84Z9A7n6'>7Rfj:7R]a777BU46UO4.6UF++6:*t(5s[b$5X7S!5<_7p5!D+m4Ztqj4?P_g4$,Mc
3]];^3B9)Z3&ilW2`EZS2`<QP2E!EM2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K
2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
128.546 32.3136 mo
128.479 32.2505 li
127.545 31.3823 126.573 30.5532 125.579 29.7544 cv
123.668 28.2182 121.674 26.7886 119.663 25.3852 cv
117.683 24.0034 115.639 22.686 113.714 21.228 cv
112.042 19.9624 110.592 18.438 109.009 17.0688 cv
107.462 15.73 105.76 14.5337 103.789 13.9165 cv
101.138 13.0855 98.4463 12.3355 95.7715 11.5825 cv
93.1211 10.8364 90.4414 10.2222 87.7998 9.439 cv
85.2754 8.69088 82.7685 7.88427 80.2813 7.02099 cv
79.457 6.73483 78.6396 6.46822 77.8047 6.25439 cv
78.1023 6.20237 78.4034 6.16925 78.7084 6.16925 cv
78.7696 6.16925 78.831 6.17058 78.8925 6.17337 cv
80.8486 6.26317 82.4541 7.49173 84.2568 8.0952 cv
84.8444 8.29195 85.4344 8.35902 86.0257 8.35902 cv
86.6585 8.35902 87.293 8.2823 87.9288 8.20555 cv
88.5645 8.12878 89.2016 8.05203 89.8391 8.05203 cv
90.1716 8.05203 90.5042 8.0729 90.8369 8.12552 cv
91.7911 8.27689 92.5693 8.77787 93.4102 9.2134 cv
94.4014 9.72607 95.4776 9.99168 96.5606 10.23 cv
98.3301 10.6187 100.257 10.9497 101.831 11.895 cv
102.594 12.352 103.146 13.0219 103.809 13.5982 cv
104.598 14.2846 105.632 14.5444 106.625 14.7944 cv
108.454 15.2534 110.158 15.7046 111.599 16.9936 cv
112.402 17.7134 113.104 18.3619 114.108 18.8042 cv
114.966 19.1821 115.856 19.4946 116.638 20.0249 cv
117.412 20.5513 117.989 21.269 118.564 21.9966 cv
119.233 22.8403 119.956 23.5171 120.876 24.0844 cv
122.531 25.106 124.164 25.9311 125.384 27.4975 cv
126.469 28.8921 127.189 30.522 128.24 31.937 cv
128.25 31.9506 128.261 31.9642 128.271 31.9777 cv
128.359 32.0939 128.451 32.2055 128.546 32.3136 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 335.984 ]ct
[51.84 0 0 27.84 77.28 302.864 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 108 
/H 58 
/M[108 0 0 -58 0 58 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 108 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
Q!NfGW'oB,]0aSEc<[hGiC'D,oKngKqa?oAkX)F=eQp!s_F2mAY<qD=S6btsPsk:3TgIaEZsD!Ga$dR,
g-VcEm9Q#G!(<)=mp2hsgdJ_Aa[46=[U%fsUI=]APsYCSRU,/GX[L`,^d>qEdp91Gk!Yb,q*L?Pp-bQA
j$L(=cs=XsPsk%,W']6E]3WKGc:#',iBj8EoNd_Mqa-c=kZt>seO75A_Eua=Y?g<sS4*3APsY.LTj?YG
Zp`5,a$RFEg0L[Gm6m7,!()rVmmO'Agd8S=a^*.s[RB%AUI+Q=Q!O;URRHC,X[:TE^g4iGdmUE,k!GVE
q-B7Rp-PE=j'AuscpYlAPsXnEW*S.G]0s_,c9epEiE`0GoL+s2qd#[skX;RAeO%)=_HkYsY=.PAS3m'=
Q!O&NTg[m,ZpN)Ea'H>Gg-ho,m6[+E!*tjXmm<p=gg.Ksa[FBA[R/n=UL!IsPskO:RR67EX^0LG^dQ(,
dmC9Ek$=NGq*^K7p0F=sj$^4AcpG`=Q!NfGW'oB,]0aSEc<[hGiC'D,oKngKqa?oAkX)F=eQp!s_F2mA
Y<qD=S6btsPsk:3TgIaEZsD!Ga$dR,g-VcEm9Q#G!(<)=mp2hsgdJ_Aa[46=[U%fsUI=]APsYCSRU,/G
X[L`,^d>qEdp91Gk!Yb,q*L?Pp-bQAj$L(=cs=XsPsk%,W']6E]3WKGc:#',iBj8EoNd_Mqa-c=kZt>s
eO75A_Eua=Y?g<sS4*3APsY.LTj?YGZp`5,a$RFEg0L[Gm6m7,!()rVmmO'Agd8S=a^*.s[RB%AUI+Q=
J,~>

%%EndBinary
grestore
np
138.076 48.6128 mo
138.076 48.6128 li
138.153 48.324 138.182 48.0247 138.131 47.7186 cv
138.182 48.0247 138.154 48.324 138.076 48.6128 cv
135.806 43.8272 mo
135.806 43.5677 135.82 43.3131 135.844 43.0474 cv
135.85 42.9786 135.853 42.9107 135.853 42.8438 cv
135.853 42.911 135.85 42.9793 135.844 43.0484 cv
135.82 43.3134 135.806 43.5678 135.806 43.8272 cv
131.562 35.0919 mo
131.56 35.0892 131.557 35.0865 131.555 35.0838 cv
131.557 35.0864 131.56 35.0892 131.562 35.0919 cv
131.55 35.0773 mo
131.547 35.0739 131.544 35.0706 131.541 35.0672 cv
131.544 35.0706 131.547 35.0739 131.55 35.0773 cv
131.538 35.0639 mo
130.912 34.3498 130.147 33.7965 129.436 33.1806 cv
129.434 33.1792 129.433 33.1777 129.432 33.1763 cv
130.144 33.7938 130.911 34.3484 131.538 35.0639 cv
level3{
gsave
clp
[11.1605 -111.605 -111.605 -11.1605 125.583 151.946 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.1605 -111.605 -111.605 -11.1605 125.583 151.946 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
137.419 96.1274 mo
137.526 95.2876 137.641 94.4488 137.769 93.6118 cv
137.954 92.3921 138.213 91.188 138.295 89.9555 cv
138.384 88.6323 138.361 87.3051 138.356 85.979 cv
138.353 84.6255 138.365 83.268 138.52 81.9214 cv
138.676 80.5581 139.044 79.2349 139.26 77.8813 cv
140.048 72.9204 139.738 67.7876 138.668 62.893 cv
138.382 61.5844 137.994 60.3052 137.828 58.9722 cv
137.669 57.6929 137.63 56.4009 137.568 55.1137 cv
137.449 52.6236 137.089 50.2349 136.171 47.9029 cv
135.28 45.6421 134.025 43.5551 133.034 41.3413 cv
132.09 39.2329 131.822 36.853 130.703 34.8208 cv
130.362 34.2034 129.918 33.6774 129.436 33.1806 cv
130.147 33.7965 130.912 34.3498 131.538 35.0639 cv
131.539 35.065 131.54 35.0661 131.541 35.0672 cv
131.544 35.0706 131.547 35.0739 131.55 35.0773 cv
131.551 35.0795 131.553 35.0816 131.555 35.0838 cv
131.557 35.0865 131.56 35.0892 131.562 35.0919 cv
131.567 35.0969 131.571 35.1019 131.575 35.1069 cv
132.656 36.3628 132.607 38.1118 133.663 39.3686 cv
134.514 40.3825 135.851 41.414 135.853 42.8438 cv
135.853 42.9107 135.85 42.9786 135.844 43.0474 cv
135.82 43.3131 135.806 43.5677 135.806 43.8272 cv
135.806 43.9367 135.809 44.0472 135.814 44.1597 cv
135.819 44.2466 135.824 44.3344 135.824 44.4219 cv
135.824 44.471 135.822 44.5201 135.818 44.5689 cv
135.811 44.6118 li
135.811 44.6118 li
136.25 45.2036 136.838 45.6968 137.323 46.2505 cv
137.693 46.6733 138.033 47.145 138.13 47.7114 cv
138.13 47.7138 138.131 47.7162 138.131 47.7186 cv
138.182 48.0247 138.153 48.324 138.076 48.6128 cv
138.076 48.6128 li
138.076 48.6128 li
138.385 49.5112 138.568 50.4507 138.664 51.2856 cv
138.714 51.7147 138.732 52.1375 138.732 52.5577 cv
138.732 53.5529 138.628 54.5335 138.585 55.5484 cv
138.579 55.6981 138.575 55.8471 138.575 55.9954 cv
138.575 56.8733 138.69 57.7267 138.998 58.563 cv
139.301 59.3833 139.708 60.1597 140.037 60.9692 cv
140.561 62.2585 140.705 63.5843 140.706 64.9343 cv
140.706 65.4833 140.682 66.0362 140.65 66.5923 cv
140.62 67.1345 140.594 67.6713 140.595 68.2084 cv
140.595 68.6396 140.612 69.0709 140.657 69.5053 cv
140.764 70.521 140.959 71.5239 141.101 72.5347 cv
141.202 73.2579 141.249 73.9772 141.249 74.6947 cv
141.249 75.8326 141.132 76.9661 140.929 78.104 cv
140.597 79.9721 140.097 81.8081 139.826 83.688 cv
139.535 85.7124 139.701 87.7417 139.594 89.7749 cv
139.492 91.697 138.949 93.4972 138.389 95.3238 cv
138.84 93.8513 139.277 92.3957 139.483 90.8794 cv
139.013 92.5113 138.434 94.1089 137.674 95.6313 cv
137.591 95.7979 137.506 95.9632 137.419 96.1274 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 335.984 ]ct
[13.44 0 0 64.32 128.64 239.024 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 134 
/M[28 0 0 -134 0 134 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
j^$t9j[/'7njN+<j[/'7j[A2ss'=enj[A2sj^%@Dp-e"/j^$t9j[/oOl!<C=j[/'7mR6h<j[/'7j[A2s
qd&Mnj[A2sj^%4@qF'F3j^$t9j[/cKm9SgAj[/'7l9tP<j[/'7j[A2spKd5nj[A2sj^%jSlU:_?r^5m9
j^%LInjN+;nj<"TnQkEKr']g;r'L-amp5ZWn3m=Gj[8EAq-EAWq*jC4qHs)*o3VAckskV>ksOrIp0R>\
o0r^JoL/:<rF"nt!++n[rC6$>rBp0as'PG+j[]&6mmQDJrEnYVr^H<Fq*a=PrCH0CrC6$?mpPlto18IC
o1&=?rF+qukt(bCr'p*DrC-<do3h;amn!1Cmm[:dmU?'&rF#"aq+0mCq*t'en6u8fkt1_AlppDOqI/tf
o1A%6lXKa#kt:nGj[\EAqFg0IqFLWVmRR1bl=06Up.FgFp.+[`pgX22k">\HrCQ9F!(Z6_raOt^p.>6T
o18[fm:56Nkt1hEmpu6(s'tn!lq@1Ilq.+dl=BBXp.P$MrCZcTnn%H(rCuQN!))HH!(lBcrabUpo1\7<
j^m[NrClcSoLe4VqG-BOqFg0Iph&r*s%`,[p.b$Lp.FabpgsD"l:q=RrCliVpIbQ[B4pC>o2"sQo1\aK
ok3f,rD2fVrD)TNrCcHhqe"qcqG$<Mnn7T-j\PA?p.XR\rD;`Ss%`Shl:h7Pqe5;.o2,$So1nmOnRqo8
p1NVdrD2ZQrD!9*l=g31qGHTUrD)TPoP*l0n58mUj\G5XrFu1CrDMoX!)WVikt^tfmqMAko25B\q+pTW
m:uH2ku.IWkth7QltZB3j\kqOlqc_Xj\knNpe^Z[j_EmTk"l%RpM9D9r+bt)mo&mWmniCeq.f:qq,6ra
pJL`_qJ>M6qGll\qGQZWn8.o9rbM"'p/CHYp/1d*l>-H9k#DC[oht?Y!)`?)o5+/%moAIIl#$E9!,V%'
q,QNSj_a*[qG[5go2=[ej]:kLp/:j,l"pE$k#UVC!)iE+o545'moK0^qc!/d!,q.?rGCq'q,Zl^q,@!*
n8A5-rE/DfqGll]lu2`<n6#Bcn5THfpJg6mk#_Ubk#DC\j_t'"r)rJjpK$`_r,Cq>m906em8j$_no45>
qHE5gj]:SarbqX:pKI8nj];1sm;V2k!*SVgqc<0*pMf4tpK-far,V(Bpfd)hm8s*anoFABqHN;iqH35g
rE&3'rc.F3p0-rfp/g?rp07&k!*\Me!*A9&pK[/kpK@#gs&f&;mW.]"q-35hq,m'+pi?@>pK[8oj]VV*
kB$9$nm(9ZolT_Fl<X<mj]UnkqfD=6oNh2pmoeaoj^%7Wq-!`>kB-]0k["0lkZ[k+lZDc*rE],&oNUli
nTFMHl<aBol<F0ircS9alZN5LpL!AqpK[/koQKeJm9fZqnm))tq-3--r,r!Hk[4<pkZn"/lZW;9p0dGu
oNh#mnTXYLl<sNsn6Posr*8E/s*"-FmpP6_j`gZ3nR;6$j^$tlj^J-pnQkoqpiu4Nj^Idfnm1[.pilUD
lXB'br*B2FlZi/5mpYrtp0RT%nTjePm:,m"m9fZqrd*jTs*4NQr*o&&ra=qsoQp(RoOIH$oO.E#r*S`8
r-@R;r*nr!r*SQ3pLN`&pL3Muja-<)q.&f#r*]M3ja-$!j^I7sqdoY8nRVN+lXBa>l$Dl2ojmT%p0dr0
o6g.Uk@O[(k@4I"l$WGUo4@N)j^R>!rb(G+qIJr%!.<pVoOm`+n7;6%ja?T2qIf_;k%"I$ja?0&j^e@=
qgIm[!,1M-pgrl(mX=kXp1X;8pLio*pgiK7ltH6.j^n@<l@%c-j^mP%rbCq9q.TM8mq(U/oP3r1m:Z6+
rI=fpm!\/6r+P2)o7-@[lY?<3s(LS.l$rY[j_FI%nRqWHmXOtHmqV0%qe,#?m;)Z8rG(G-J,~>

%%EndBinary
grestore
np
116.245 137.207 mo
115.861 135.794 115.618 134.402 116.118 133.044 cv
115.619 134.402 115.861 135.794 116.245 137.207 cv
119.002 129.388 mo
119.074 129.323 119.146 129.258 119.218 129.194 cv
120.362 128.168 121.504 127.169 122.498 125.992 cv
123.706 124.56 124.746 122.998 125.778 121.437 cv
126.829 119.848 127.916 118.282 128.971 116.695 cv
130.08 115.022 131.154 113.324 132.112 111.559 cv
133.05 109.833 133.761 108.002 134.714 106.284 cv
135.634 104.625 136.502 103.016 136.973 101.164 cv
136.973 101.164 li
137.451 99.2827 137.759 97.3803 138.329 95.521 cv
138.349 95.4552 138.369 95.3895 138.389 95.3238 cv
138.369 95.3895 138.349 95.4552 138.329 95.521 cv
137.759 97.3803 137.451 99.2827 136.973 101.164 cv
136.502 103.016 135.634 104.625 134.714 106.284 cv
133.761 108.002 133.05 109.833 132.112 111.559 cv
131.154 113.324 130.08 115.023 128.971 116.695 cv
127.916 118.282 126.829 119.848 125.778 121.437 cv
124.746 122.998 123.706 124.56 122.498 125.992 cv
121.504 127.169 120.362 128.168 119.218 129.194 cv
119.146 129.258 119.074 129.323 119.002 129.388 cv
5.074 47.1286 mo
5.0741 47.0679 5.07643 47.0062 5.08109 46.9438 cv
5.07643 47.0062 5.0741 47.0678 5.074 47.1286 cv
10.1449 27.9305 mo
10.8678 26.6659 12.145 25.9452 13.4375 25.3745 cv
12.1459 25.9452 10.8678 26.6659 10.1449 27.9305 cv
27.4564 14.5417 mo
28.64 13.5988 29.8481 12.5474 31.3711 12.2388 cv
31.6541 12.1817 31.9421 12.1659 32.2317 12.1659 cv
32.2318 12.1659 32.2318 12.1659 32.2318 12.1659 cv
31.9424 12.1659 31.6547 12.1817 31.372 12.2388 cv
29.8481 12.5474 28.6401 13.5988 27.4564 14.5417 cv
33.3156 12.1904 mo
33.3155 12.1904 li
33.6654 12.1904 34.0117 12.1672 34.3488 12.0757 cv
34.0117 12.1672 33.6654 12.1904 33.3156 12.1904 cv
40.9258 7.93017 mo
40.9361 7.92917 40.9465 7.92825 40.9568 7.92738 cv
40.9464 7.92829 40.9361 7.92921 40.9258 7.93017 cv
level3{
gsave
clp
[11.1605 -111.605 -111.605 -11.1605 64.5879 145.847 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\[T&Y\$rlV\%&oV\@8rW[^N]S[^`cS\$i`S[C*KO[C<QO\$`TP['[<L[(!EL\$WNN['[9KZaR3H[^3<K
Za.$FZF.!D[Bd*GZE^gBZ*gjA[BZsCZ*:U>YdCX=['6dAYctL=YI(O;['-[?YHG48Y-Y=7Z`^I;Y-#%5
Xg>.3ZE:77Xf\n2XKnt0ZE:46XK8\.X0Jb,Z)k"2X/iM+Wj/V)YcFe.WiE;'Wj&M&Yc=\,Wi<5&WN`A#
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Yc4S)WMm#"W3<.tY,J8$W2HerVlckpXf&%uVl$SoVQH_lXJVhqVPUAjUoU>fX/2VmUnk#dUoL5cWhcDi
UnarbU8ao^WM?2eUS=]]Tr=]ZW1ou`TqSBXTVnKVVkKc]TqJ9UT;J9RVP'QXT:VmOSu&'NUn40RSt;aL
SYVjJURn$OSXcIGS>)REU7@^IS=?4BS"Z=?TpqLES!p%?R\6+<TUM:AR[Ke:R@fn7T:)(<R@'S6R%B\3
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.582249 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.1605 -111.605 -111.605 -11.1605 64.5879 145.847 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@B&Y\@8rV\$riU\$riU\$riT[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^ENN[C*EM[C*EM[C*EL['[3I['[3I
['[3I['R*FZa7!EZa7!EZa7!EZa7!EZa6sCZEgdAZEgdAZEgdAZE^[>Z*CR=Z*CR=Z*CR<Yct@9Yct@9
Yct@9Yck76YHP.5YHP.5YHP.5YHP.4Y-+q1Xf\_-XfSV*XK8M)XK8J'X/i;$WiE)!WMukrWMukrWMlbo
W2QVlVl-GiVP^5fVP^5eV5:#bUnjf^Una][USFTZU8"BVU7n9STqS-PTV.sNTV.sMT:_aJSt;OFSt2FC
~>
<~[^NWQ[^NWQ[^NWQ[C*EM[C*EM[C*BK['[3I['[3HZa7!EZa7!EZa7!EZa-mBZEgdAZE^[>Z*CR=Z*CO;
Yct@9Yct@8YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q0Xf\_-Xf\\+XK8M)XK8M)XK8M)X/i;%X/i;%X/i8#
WiE)!WiE(uWMukrWMukrWMukrWMuhpW2QYmVl-GjVP^5fVP^5fV5:#bV50o_Unjc\USFTZUSFTYU8"BV
U8"?TTqS0QTV.sNTV.sMT:_aJSt;OFSt2FCSXl=BSXl:@S=H+=S"#n:R[T\6R[T\5R@0J2R@0G0R$a8.
~>
<~[^NWQ[^NWQ[^NWQ[C*EM[C*EM[C*BK['[3I['R*FZa7!EZa7!EZa7!DZEgdAZEga?Z*CR=Z*CR=Yct@9
Yct@8YHP.5YHP.5YHP.5YHG%2Y-+q1Xf\_-Xf\_-Xf\\+XK8M)XK8M)XK/D&X/i;%X/i;$WiE)!WiE)!
WMukrWMukrWMukrW2QYnW2QYnW2QVlVl-GiVP^5fVP^5eV5:#bUnjf^Una][USFTZUSFQXU8"BUTqS0R
TqS-PTV.sNT:_aJT:_aISt;OFSXl=BSXl=BSXc4?S=H(<S"#n9R[T\6R@0J2R@0J2R@'A/R$a5,Q^=&*
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
117.173 142.88 mo
117.064 142.794 116.972 142.67 116.893 142.524 cv
116.694 142.519 116.495 142.516 116.296 142.516 cv
116.296 142.516 116.296 142.516 116.296 142.516 cv
116.495 142.516 116.694 142.519 116.893 142.524 cv
116.972 142.67 117.064 142.794 117.173 142.88 cv
117.173 142.88 li
level3{
gsave
clp
[11.1605 -111.605 -111.605 -11.1605 64.5879 145.847 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~5T^_+*u.!^'gEcT59CV)*u.!^'gEcT59CV)*u.!^'L*ZR59CS(*u$p]'L*ZR59CS(*u$p]'L*ZR59CS(
*u$p]'L*ZR59CS(*u$p]'L*ZR59CS'*u$m\'L!TQ4rtD%*Y^dZ'L!QP4rtD%*Y^dZ'L!QP4rtD%*Y^dZ
'L!QP4rtD%*Y^dZ'KmKO4WY;#*Y^aY'KmKO4WY;#*Y^aY'KmHN4WP5"*>:RV'0R?L4WP2!*>:RV'0R?L
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4WP1u*>:OU'0I9K4<5(t*>:OU'0I9K4<5(t*>:OU'0I6J4<,"s*"tCR'0@0I3uenq*"tCR'0@0I3uenq
*"tCR'07*H3ZJbn*"k:P&iq!F3ZJbn*"k:P&iq!F3?/Yl*"k7O&igpE3?/Yl*"k7O&igpE3?&Sk)\P.M
&igmD3#`Ji)\P+L&i^gC3#`Ji)\P+L&i^gC3#`Ji)\G"J&N:X@2]E>f)\G"I&N:U?2]<8e)A+nH&N1O>
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.582249 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.1605 -111.605 -111.605 -11.1605 64.5879 145.847 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~5<h@s5<_7p5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o
5!D.o5!;%l4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4?P_g4?P_g4?P_g4?P_g
4?P_g4?P_g4?P_g4?P_g4?P_g4?P_f4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$#D`3]];_3]];_3]];_3]T2\
3B9)[3B9)[3B9)[3&ilW3&ilW3&ilW3&ilW3&ilW2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@
*??.?*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8
)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)&X;0)&X;0
~>
<~'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYcg
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
104.273 143.424 mo
103.337 143.424 102.488 143.116 101.951 142.295 cv
101.408 141.466 101.224 140.431 100.851 139.523 cv
100.249 138.062 99.623 136.606 98.9366 135.182 cv
98.333 133.93 97.6992 132.65 96.8945 131.511 cv
96.2793 130.641 95.5957 129.818 95.041 128.906 cv
94.6609 128.282 94.3404 127.639 94.3405 126.934 cv
94.3404 127.639 94.6609 128.282 95.041 128.906 cv
95.5957 129.818 96.2793 130.64 96.8945 131.511 cv
97.6992 132.65 98.333 133.93 98.9366 135.182 cv
99.623 136.606 100.249 138.062 100.851 139.523 cv
101.224 140.431 101.408 141.466 101.951 142.295 cv
102.488 143.116 103.337 143.424 104.273 143.424 cv
104.328 143.424 104.383 143.422 104.438 143.42 cv
105.88 143.367 107.318 143.224 108.754 143.08 cv
108.754 143.08 li
108.754 143.08 li
107.318 143.224 105.88 143.367 104.438 143.42 cv
104.383 143.422 104.328 143.424 104.273 143.424 cv
108.848 143.07 mo
111.289 142.823 113.744 142.516 116.202 142.516 cv
116.233 142.516 116.265 142.516 116.296 142.516 cv
116.296 142.516 116.296 142.516 116.296 142.516 cv
116.267 142.516 116.238 142.516 116.209 142.516 cv
113.749 142.516 111.291 142.823 108.848 143.07 cv
99.9229 100.889 mo
99.9767 100.86 100.018 100.809 100.018 100.739 cv
100.018 100.809 99.9768 100.861 99.9229 100.889 cv
100.013 100.698 mo
100.013 100.697 100.013 100.696 100.013 100.696 cv
99.8242 99.8863 99.6191 99.0806 99.3828 98.2837 cv
98.9268 96.7446 98.3642 95.2202 97.5791 93.8169 cv
97.1689 93.0825 96.6846 92.3755 96.1152 91.7514 cv
95.7529 91.2974 95.3642 90.8637 94.9541 90.4506 cv
94.9375 90.4243 li
94.8516 90.3531 li
92.001 87.5395 88.082 85.7544 84.0781 85.7154 cv
84.038 85.715 83.9972 85.7148 83.9571 85.7148 cv
81.23 85.7148 78.7159 86.6482 76.6172 88.1961 cv
78.7164 86.6477 81.2316 85.7138 83.9595 85.7138 cv
83.9989 85.7138 84.0386 85.714 84.0781 85.7144 cv
88.082 85.7544 92.001 87.5395 94.8516 90.3531 cv
94.9375 90.4243 li
94.9541 90.4506 li
95.3642 90.8628 95.7529 91.2974 96.1152 91.7514 cv
96.6846 92.3755 97.1689 93.0825 97.5791 93.8169 cv
98.3642 95.2202 98.9268 96.7446 99.3828 98.2837 cv
99.6191 99.0806 99.8242 99.8863 100.013 100.696 cv
100.013 100.696 100.013 100.697 100.013 100.698 cv
72.3585 93.1534 mo
72.3714 93.1294 72.3844 93.1054 72.3975 93.0815 cv
72.4041 93.0694 72.4109 93.057 72.4175 93.0449 cv
72.4109 93.057 72.4041 93.0694 72.3975 93.0815 cv
72.3844 93.1054 72.3714 93.1294 72.3585 93.1534 cv
76.573 88.2288 mo
76.5744 88.2277 76.5755 88.227 76.5769 88.2259 cv
76.5755 88.227 76.5744 88.2277 76.573 88.2288 cv
76.5951 88.2124 mo
76.6005 88.2084 76.6057 88.2046 76.6111 88.2006 cv
76.6059 88.2044 76.6002 88.2086 76.5951 88.2124 cv
41.6416 58.6225 mo
39.9014 58.2085 38.3086 57.2612 36.6484 56.6236 cv
34.46 55.7817 32.2842 54.9077 30.1142 54.0191 cv
27.918 53.1206 25.6992 52.2817 23.4277 51.5904 cv
22.3887 51.2749 21.3359 51.018 20.292 50.7212 cv
19.4052 50.4683 18.5517 50.1079 17.6533 49.893 cv
17.282 49.8037 16.9331 49.7575 16.5926 49.7575 cv
16.058 49.7575 15.5439 49.8714 14.9951 50.1118 cv
14.291 50.4204 13.6338 50.8306 12.8721 50.9927 cv
12.4563 51.0811 12.0249 51.1261 11.5878 51.1323 cv
11.5878 51.1323 li
12.0249 51.1261 12.4563 51.0811 12.8721 50.9927 cv
13.6338 50.8306 14.291 50.4204 14.9951 50.1118 cv
15.5439 49.8714 16.058 49.7575 16.5926 49.7575 cv
16.9331 49.7575 17.282 49.8037 17.6533 49.893 cv
18.5517 50.1079 19.4052 50.4683 20.292 50.7212 cv
21.3359 51.018 22.3887 51.2749 23.4277 51.5904 cv
25.6992 52.2817 27.918 53.1206 30.1142 54.0191 cv
32.2842 54.9077 34.46 55.7817 36.6484 56.6236 cv
38.3086 57.2612 39.9014 58.2085 41.6416 58.6225 cv
41.6416 58.6225 li
level3{
gsave
clp
[11.1605 -111.605 -111.605 -11.1605 64.5879 145.847 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G=jK38hP<[/pBo?G=jK28hP9Z/p9f<G"F9/8M,*W/Ts];G"F9/8M,'V/TjW:F\+0-81esT/TjT9F\"*,
81esT/TjT9F\"*,81epS/TaN8F@[s)81\jQ/9FB5F@Rm(7kAaP/9=<4F%7d&7kA^O/9=<4F%.^%7P&UM
/9=92F%.[$7OrOL.rn*0E^hR"74WCI.rn'/E^_L!74WCI.rn'/E^_L!74N=H.WIj+EC;9r6n31E.WIj+
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~EC;9r6n31E.W@d*E'u0p6n3.D.W7^)DaZ'n6Rm"A.W7[(DaQ!m6Rm"A.;hL%DF5jj67He=.;hI$D*f[g
67Hb<.;_C#CdKRe67H_:.;V9uCdBIb5q$M7-u2*sCI'@a5q$M7-u2*sCI'@`5U^A4-u)!qC-X.\5UU82
-YYgnBg=%[5::,/-YP^lBKmkX5::,/-YP^lBKmkX4ssu,-YGUjB0I\U4ssr+-Y>OhAj.PR4sjl*-=o@f
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.582249 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.1605 -111.605 -111.605 -11.1605 64.5879 145.847 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G'8%PG'8%PG'8%PF`hhLF`hhLF`hhLF`hhLF`hhLF`heJFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDSF
F)uDDF)uDDF)uDDF)uDDF)uDCEcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<E,]c8E,]c8E,]c8E,]c7Df9Q4Df0H1DJj?0DJj?0DJj?/D/F-,D/F-,Ci!p(Ci!m&
CMR^$CMR^#C2.KuC2.KuC2.KuBk_9qBk_9pBP;'mBP;'mB4kjiB4kjiB4kjiB4bafAnGXeAS#FaAS#Fa
~>
<~8P)KF8P)KF8P)KF8P)KF8OuBC84Z9B84Z9B84Z9B84Z9B84Z9B84Q0?7n6'>7n6'>7n6'>7n6'>7n6'>
7n6'>7n6'=7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj977BX677BX677BX677BX677BX66psF26psF26psF2
6psF26psF26psF26UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UF++6:+"*6:+"*6:*t(5s[e&5s[e&5s[e&
5s[b$5X7S"5X7S"5X7S"5X7S"5<h@s5<h@s5<h@s5<h=q5!D.o5!D.o5!D.o4Ztqk4Ztqk4Ztqk4Ztqk
~>
<~/M/P+/M/P+/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
/1`>&.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<)!.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olns.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4?Sm-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jk-RU8h-RU8h-RU8h-RU8h-RU8h-RL/e-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71#b,pai`
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
104.273 143.424 mo
103.337 143.424 102.488 143.116 101.951 142.295 cv
101.408 141.466 101.224 140.431 100.851 139.523 cv
100.249 138.062 99.623 136.606 98.9366 135.182 cv
98.333 133.93 97.6992 132.65 96.8945 131.511 cv
96.2793 130.64 95.5957 129.818 95.041 128.906 cv
94.6609 128.282 94.3404 127.639 94.3405 126.934 cv
94.3406 126.758 94.3605 126.579 94.4043 126.395 cv
94.6592 125.324 95.2901 124.334 95.8369 123.393 cv
96.9004 121.563 97.6425 119.59 98.2939 117.579 cv
99.5356 113.746 100.348 109.703 100.346 105.659 cv
100.346 105.132 100.332 104.606 100.304 104.08 cv
100.245 103.011 100.12 101.942 99.9229 100.889 cv
99.9229 100.889 li
99.9768 100.861 100.018 100.809 100.018 100.739 cv
100.018 100.726 100.016 100.712 100.013 100.698 cv
100.013 100.697 100.013 100.696 100.013 100.696 cv
99.8242 99.8863 99.6191 99.0806 99.3828 98.2837 cv
98.9268 96.7446 98.3642 95.2202 97.5791 93.8169 cv
97.1689 93.0825 96.6846 92.3755 96.1152 91.7514 cv
95.7529 91.2974 95.3642 90.8628 94.9541 90.4506 cv
94.9375 90.4243 li
94.8516 90.3531 li
92.001 87.5395 88.082 85.7544 84.0781 85.7144 cv
84.0386 85.714 83.9989 85.7138 83.9595 85.7138 cv
81.2316 85.7138 78.7164 86.6477 76.6172 88.1961 cv
76.6151 88.1976 76.6132 88.199 76.6111 88.2006 cv
76.6057 88.2046 76.6005 88.2084 76.5951 88.2124 cv
76.5889 88.217 76.583 88.2214 76.5769 88.2259 cv
76.5755 88.227 76.5744 88.2277 76.573 88.2288 cv
74.8781 89.4894 73.4571 91.1512 72.4175 93.0449 cv
72.4109 93.057 72.4041 93.0694 72.3975 93.0815 cv
72.3844 93.1054 72.3714 93.1294 72.3585 93.1534 cv
70.1601 97.2238 69.4925 102.003 69.2207 106.561 cv
69.2207 106.561 li
69.0274 109.795 69.2031 113.058 68.7812 116.277 cv
68.6523 117.261 68.5732 118.274 68.251 119.22 cv
68.1162 119.617 67.9336 120.036 67.6045 120.31 cv
67.3875 120.49 67.1249 120.54 66.8559 120.54 cv
66.7011 120.54 66.5442 120.523 66.3925 120.506 cv
65.9043 120.451 65.4113 120.303 64.9192 120.303 cv
64.9113 120.303 64.9034 120.303 64.8955 120.303 cv
64.8955 120.303 li
64.8949 120.303 64.8943 120.303 64.8937 120.303 cv
64.6796 120.303 64.495 120.137 64.458 119.931 cv
64.458 119.931 li
64.2911 118.98 64.2324 118.024 64.232 117.067 cv
64.2309 114.837 64.5456 112.596 64.5454 110.363 cv
64.5454 109.626 64.5111 108.89 64.4199 108.156 cv
63.9141 104.084 62.1563 100.261 60.4034 96.5962 cv
57.3672 90.2476 53.4287 84.3383 48.4346 79.3589 cv
46.7529 77.6821 44.9648 76.1255 43.0918 74.6753 cv
42.9571 74.6274 li
42.8877 74.5142 li
42.2832 74.0503 41.6679 73.6001 41.0459 73.1577 cv
40.4346 72.9126 39.7871 72.7407 39.2343 72.5816 cv
39.0369 72.5247 38.8453 72.3657 38.8447 72.1664 cv
38.8446 72.1193 38.8552 72.0699 38.8789 72.019 cv
38.9306 71.9097 38.9765 71.7993 39.0224 71.688 cv
39.0224 71.688 li
39.0224 71.688 li
39.0127 71.6608 39.0081 71.6338 39.0081 71.6078 cv
39.008 71.5266 39.0525 71.455 39.125 71.4165 cv
39.8301 69.4712 39.7275 67.3218 40.0733 65.2993 cv
40.4599 63.0415 41.4414 60.9145 41.6416 58.6225 cv
41.6416 58.6225 li
41.6416 58.6225 li
39.9014 58.2085 38.3086 57.2612 36.6484 56.6236 cv
34.46 55.7817 32.2842 54.9077 30.1142 54.0191 cv
27.918 53.1206 25.6992 52.2817 23.4277 51.5904 cv
22.3887 51.2749 21.3359 51.018 20.292 50.7212 cv
19.4052 50.4683 18.5517 50.1079 17.6533 49.893 cv
17.282 49.8037 16.9331 49.7575 16.5926 49.7575 cv
16.058 49.7575 15.5439 49.8714 14.9951 50.1118 cv
14.291 50.4204 13.6338 50.8306 12.8721 50.9927 cv
12.4563 51.0811 12.0249 51.1261 11.5878 51.1323 cv
11.5866 51.1323 11.5855 51.1323 11.5844 51.1323 cv
11.5504 51.1328 11.5164 51.133 11.4823 51.133 cv
10.0254 51.133 8.51122 50.7084 7.28908 50.0317 cv
7.28 50.0267 7.27091 50.0216 7.26183 50.0166 cv
6.158 49.3996 5.07179 48.4696 5.074 47.1286 cv
5.0741 47.0678 5.07643 47.0062 5.08109 46.9438 cv
5.08109 46.9438 li
5.17968 45.6313 6.03418 44.478 6.44047 43.2524 cv
6.55325 42.9111 6.6019 42.601 6.60172 42.3004 cv
6.60142 41.7993 6.46547 41.3246 6.26466 40.7759 cv
6.05312 40.1979 5.88899 39.6154 5.88821 39.0166 cv
5.8879 38.7778 5.91359 38.5363 5.97262 38.2915 cv
6.16699 37.4858 6.7031 36.8569 7.21676 36.2329 cv
7.84964 35.4643 8.48832 34.6724 8.93851 33.7788 cv
9.86915 31.9341 9.12012 29.7583 10.128 27.9604 cv
10.1336 27.9504 10.1392 27.9404 10.1449 27.9305 cv
10.8678 26.6659 12.1459 25.9452 13.4375 25.3745 cv
13.4375 25.3745 li
14.8252 24.7632 16.3457 24.2417 17.3233 23.0122 cv
18.2647 21.8277 18.7461 20.3071 19.6172 19.063 cv
20.4033 17.9399 21.4385 17.0766 22.7373 16.6099 cv
23.5508 16.3179 24.4278 16.2749 25.2315 15.9565 cv
25.9795 15.6597 26.6377 15.185 27.2666 14.6919 cv
27.3298 14.6422 27.393 14.5921 27.4564 14.5417 cv
28.6401 13.5988 29.8481 12.5474 31.372 12.2388 cv
31.6547 12.1817 31.9424 12.1659 32.2318 12.1659 cv
32.4121 12.1659 32.593 12.172 32.7738 12.1781 cv
32.9547 12.1843 33.1356 12.1904 33.3155 12.1904 cv
33.3155 12.1904 33.3155 12.1904 33.3155 12.1904 cv
33.3156 12.1904 li
33.6654 12.1904 34.0117 12.1672 34.3488 12.0757 cv
34.3683 12.0704 34.3877 12.0648 34.4072 12.0591 cv
35.2773 11.8013 35.9454 11.0649 36.5459 10.4253 cv
37.792 9.10106 39.042 8.10299 40.9258 7.93017 cv
40.9258 7.93017 li
40.9361 7.92921 40.9464 7.92829 40.9568 7.92738 cv
41.0989 7.91549 41.2418 7.9153 41.3848 7.9126 cv
40.5517 8.51218 39.71 9.09916 38.831 9.64504 cv
37.4502 10.5034 36.041 11.3139 34.6289 12.1206 cv
33.3007 12.8785 31.9209 13.5698 30.7559 14.5728 cv
28.9531 16.1274 27.9268 18.1694 27.0136 20.3247 cv
26.5224 21.4848 25.999 22.6324 25.5137 23.7945 cv
25.0898 24.8091 24.6074 25.8452 24.4356 26.939 cv
24.0976 29.0874 25.5713 30.6636 27.0264 32.0328 cv
28.0205 32.9683 29.1865 33.7026 30.1494 34.6753 cv
31.2334 35.77 31.8301 37.0679 32.1748 38.5542 cv
32.7607 41.0795 33.04 43.603 35.126 45.3911 cv
36.8213 46.8452 39.0381 47.478 41.1777 47.939 cv
43.5136 48.4419 45.8399 48.8941 48.1543 49.4936 cv
49.416 49.8198 51.5732 50.1567 51.9218 51.6889 cv
52.1211 52.562 51.8369 53.5288 51.585 54.3608 cv
51.1963 55.6479 50.792 56.9057 50.6601 58.2515 cv
50.4102 60.8013 51.2725 63.1548 52.4082 65.3941 cv
53.0752 66.7085 53.8311 67.9712 54.4355 69.3188 cv
54.9971 70.5708 55.4853 71.855 55.9961 73.1294 cv
56.9521 75.5142 57.9873 77.9321 59.6895 79.8921 cv
60.7998 81.1694 62.1045 82.3325 63.3564 83.4683 cv
64.7822 84.7612 66.2901 86.1381 68.0107 87.0307 cv
68.5302 87.3009 69.2432 87.5107 69.9143 87.5107 cv
70.6915 87.5107 71.4126 87.2295 71.7129 86.4351 cv
72.0166 85.6294 71.9121 84.6967 72.044 83.8569 cv
72.1875 82.9361 72.5361 82.0932 73.1611 81.399 cv
74.2852 80.1528 75.919 79.4311 77.4903 78.938 cv
79.416 78.3335 81.4356 78.0395 83.4472 77.94 cv
83.9498 77.915 84.4542 77.9018 84.9589 77.9018 cv
86.453 77.9018 87.9505 78.0175 89.4169 78.2876 cv
90.9082 78.562 92.5342 78.9712 93.7657 79.9028 cv
95.4492 81.1753 96.7568 83.1294 97.9297 84.8511 cv
99.3877 86.9936 100.694 89.2407 101.879 91.5444 cv
102.9 93.5308 103.916 95.5923 104.558 97.7378 cv
105.376 100.475 104.813 103.273 104.005 105.938 cv
103.226 108.509 102.255 111.044 101.982 113.736 cv
101.858 114.955 101.959 116.173 101.94 117.395 cv
101.923 118.535 101.871 119.673 101.847 120.812 cv
101.798 123.092 101.787 125.496 102.518 127.684 cv
103.195 129.717 104.692 131.145 106.546 132.159 cv
107.834 132.863 109.547 133.539 111.158 133.539 cv
111.855 133.539 112.533 133.412 113.148 133.107 cv
115.305 132.038 115.197 129.663 115.426 127.612 cv
115.992 122.524 121.57 120.739 124.952 117.798 cv
127.01 116.008 128.06 113.698 128.906 111.148 cv
129.901 108.147 130.741 105.09 132.667 102.52 cv
133.524 101.375 134.515 100.336 135.404 99.2163 cv
136.171 98.2507 136.841 97.2157 137.419 96.1274 cv
137.167 98.0928 136.954 100.064 136.716 102.032 cv
136.81 101.747 136.897 101.459 136.973 101.164 cv
136.502 103.016 135.634 104.625 134.714 106.284 cv
133.761 108.002 133.05 109.833 132.112 111.559 cv
131.154 113.324 130.08 115.022 128.971 116.695 cv
127.916 118.282 126.829 119.848 125.778 121.437 cv
124.746 122.998 123.706 124.56 122.498 125.992 cv
121.504 127.169 120.362 128.168 119.218 129.194 cv
119.146 129.258 119.074 129.323 119.002 129.388 cv
117.993 130.301 116.998 131.285 116.36 132.498 cv
116.265 132.679 116.185 132.861 116.118 133.044 cv
115.618 134.402 115.861 135.794 116.245 137.207 cv
116.248 137.216 116.25 137.225 116.253 137.235 cv
116.621 138.583 116.958 139.924 117.284 141.283 cv
117.337 141.501 117.395 141.719 117.457 141.936 cv
117.547 141.995 117.619 142.078 117.65 142.181 cv
117.654 142.335 li
117.615 142.434 li
117.61 142.438 li
117.61 142.438 li
117.74 142.541 117.835 142.686 117.835 142.804 cv
117.835 142.893 117.782 142.965 117.648 142.993 cv
117.605 143.002 117.563 143.006 117.523 143.006 cv
117.39 143.006 117.274 142.959 117.173 142.88 cv
117.064 142.794 116.972 142.67 116.893 142.524 cv
116.694 142.519 116.495 142.516 116.296 142.516 cv
116.296 142.516 li
116.265 142.516 116.233 142.516 116.202 142.516 cv
113.744 142.516 111.289 142.823 108.848 143.07 cv
108.817 143.073 108.785 143.076 108.754 143.08 cv
108.754 143.08 li
107.318 143.224 105.88 143.367 104.438 143.42 cv
104.383 143.422 104.328 143.424 104.273 143.424 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 335.984 ]ct
[133.92 0 0 136.8 4.31999 191.984 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 279 
/H 285 
/M[279 0 0 -285 0 285 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 279 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 279 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 279 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JeN_LkS'EmJdTg2ZjD<j[L(1lJeO[gjpH\IKF7_cJdI#8l3WjlJeQNFZ3l0j\-gCcJdJ%Uj:d+YL(jLm
JdR):ljB'cJdKm4YS2U%\eE0mJdS1YJdI#8kR!^lJeQHDZjMBl[L17cJdItSjqE=[KG4@mJdR):l3`pc
JdKg2Z4hg'\.d$mJdS+Wj9^DEL'delJeN_Llk>]mJdTs6YR,mf\d?IlJeOgkJdR):kR*dcJdKa0ZkJ$)
[M-mmJdS%Ujp?VGKF.YlJeN_Ll4]QmJdTm4Z3c*h\-^=lJeOaij9gJGL'mkcJdI#8lj9!lJeQTHYR5sh
\dHOcJdJ+WJeN_LkS'EmJdTg2ZjD<j[L(1lJeO[gjpH\IKF7_cJdI#8l3WjlJeQNFZ3l0j\-gCcJdJ%U
j:d+YL(jLmJdR):ljB'cJdKm4YS2U%\eE0mJdS1YJdI#8kR!^lJeQHDZjMBl[L17cJdItSjqE=[KG4@m
JdR):l3`pcJdKg2Z4hg'\.d$mJdS+Wj9^DEL'delJeN_Llk>]mJdTs6YR,mf\d?IlJeOgkJdR):kR*dc
JdKa0ZkJ$)[M-mmJdS%Ujp?VGKF.YlJeN_Ll4]QmJdTm4Z3c*h\-^=lJeOaij9gJGL'mkcJdI#8lj9!l
JeQTHYR5sh\dHOcJdJ+WJeN_LkS'EmJdTg2ZjD<j[L(1lJeO[gjpH\IKF7_cJdI#8l3WjlJeQNFZ3l0j
\-gCcJdJ%Uj:d+YL(jLmJdR):ljB'cJdKm4YS2U%\eE0mJdS1YJdI#8kR!^lJeQHDZjMBl[L17cJdItS
jqE=[KG4@mJdR):l3`pcJdKg2Z4hg'\.d$mJdS+Wj9^DEL'delJeN_Llk>]mJdTs6YR,mf\d?IlJeOgk
JdR):kR*dcJdKa0ZkJ$)[M-mmJdS%Ujp?VGKF.YlJeN_Ll4]QmJdTm4Z3c*h\-^=lJeOaij9gJGL'mkc
JdI#8lj9!lJeQTHYR5sh\dHOcJdJ+WJeN_LkS'EmJdTg2ZjD<j[L(1lJeO[grsS#tJdR):JdI#8l3Wjl
JeQNFoaAJ@JdSRdf*R$8T*aQlJeNkPr<r'%PR<!LedAMcJdKm4p_:7PJeP^/i="lWJdS1Yi<l:cJdLWI
mM)f;JeQHDf*gFBJdRGDpBcEXSI+EmrtL,"KG4@o!"@3^ZjMBll3dLucjJ#(JdKg2g(`3RJePX-oF0@[
q$W&eT*k2unI"1]UBuY]rY5DIe.f)"JeRJal3u#Ih[4rBdgG@JcjKOSJdK!poG,pkrY1&"TbI21kmYoH
e-^d7kR-5UcjK.HJdKa0l4qb^q%J>n[M/'<km[=pfaFeeSI4KenI*\N_[1u&rtbPKjqZ>ZcP(mDl4`4f
kmYoHrsF>bd0fj]cO8nCl3`pc\-_[@jq[S(h@ue"T+g8ppC6?qcjSA2L'mkfp^GIVcjK1IJdLcMrYOi8
jqZ>Zq@eGodhC(;km[@qfF+_e\dI^2i!]#^cjI\tTaC?-l5&LsdhM6aJeR>]p^YUZkmZtfisVLecO0FV
kmZ)Mq[:aX\I#\Nl5/_$q\AH4dhKb7SJ1E$q$kpbkmYoHoa6?ZrseH,kmYlGh$Wc]NsY(Xi"tYojq[4s
kS0L"d1cKik75fIkmYoHb6k`dj:1>^!"7-]cjJh?T*aQpo,$[-jqZ>Zn.UNir=AZ6k75fIkm["giX;Fe
ljDGUkmZ,Nq?tXW\d?glqA@Ztl5':4lP7k_`Y5osl4<%fq@2!bkmYoHp'RK#cjf4JcO9[Ye-`AckR$_q
dhh9bnJ1a4dhKD-cP,4Ik76qii=5#[cjT.H[L2mAdgc-_kmYlGdgH']TF(Q7l57tdl5&LsiY:qtP8!s,
fFR-TcOKUWo*itR_$]H7nIEbPkm[7ng'c77g'Q.5o,6g1f,+B%l5&LsdhLpX\.eiQcOU!ckRPoJkmZY]
ljL0-rX\9(rXI0_kmYlGrX.*]ZjH[Km2>1+dhh9bneLg4dhKG.lkB"&cO]1Kn.":bkmYoHljD2KoFL3s
e.)3_kmYlGe-c-]^'W[7lPKU=dhh9bjqZnjnJ&5Al4D8Pk76S_lOE(ecjSe>kR-Scl42#IrXA-%cO8),
q?bISeJ[WhpD;X%l5&LsfG+5t]+b&Rjq-qkiXb2^cOK7Mr=%$\dL,+Iq[_s%bRNeFljMk^cjJ2-ru1nU
cPc!bdhhlsn.t.$dhLRNl4`\"jq,iLp($X'cOK+IgC*]_g^;UCl43Fqfa[0ScO9@Ph$VpDo,?:"pDN65
dhh9bkS=+4dhL+Ak7R\)kn)/Ok76V`l4)tdcjStCrX]&?ck#CObROR\lO;)IcjKXVlj3Y2l5Itdl59:4
g_]5kjqZP`q\7]sh%Ac\mgn@fk75fImL9"%cjT=MoFTRaq@Dj$bRNeFm0hq^cjK7Kp)E98cPc!bm2+q%
l5&LsdhM]nkS)DWjq-Saljr7hcOK+Iq[:s_q?lL!cO]samLIGMkmZPZmL.AKq?cL-l5KI9f,<ijdhhNi
qA/3.dhM0_q\&6-j:UMccO]@Pr!q$^kmZ#Krt52Ajq,iLl43(gisk5]cO9"Fl3cMil5Itdl57tdl5&Ls
q%VQtpCm'0cOod\o+94Yk768VoF:$nh$``bjq.4sg(3HYbRO4RoaK.Sh$W3^oc*07cPc!bmMG"%l5&Ls
dhMcp!#"T1cOo:NjU^Yfk75fIkm[ItljMtgjq,iLrXS<*bRNeFisY5^k6_2/cPu-fqAIj%l57tdneV$:
jqZ\doFpL&m1J@jjq,iLm10"'cOK+InI+.bjq,iLo+(O*bRNeFfF.H^nI"t0cPu-fmht(%l57tdl5'@6
knW@ql4`FqiXtSjjq,iLk77D!e.(XNq[:jbq[i**cO]:Ni!o&_kmYlGq[2[0q]"')l5ItdpDEN>dhh9b
jq[D#rtFB*l4VDTl4En*cO]1KdLH0bm0rk)cOo:Nljr.fl42#IlO<e%dgPsll5\1jru:5AcPc!bj;7;%
l5&Lsq\7Tpp(I$2cOo:NgCNrfk75fIpC-R)oF]jjjq,iLoFCU*bRNeFh$a0%o,[*9cPu-fn/:.%l57td
l5'C7lkTL6cP,RVit:Yjjq,iLk77G"dgc9il4VDTr"/0*cO]:Ni=5,_kmZ__r#Y,Dl5]^@e/RZkcPcKp
o,,pml5'",oG#Ubl4V_]p^uX"cO]1KndXdloFpL&cOo[Yp(5O\l42ASpC6?qnI+n/l5f.0nJg@)l5Itd
m25g>dhh9brY=]4j:gknl4VDTjq.D#eIUgQisk8er=\N2cOo:NiXbGfl42#Ikm[Fsru^MIl5f.0cPuZu
nf#gll584kqA8Z;i"XKNlk9=2cOo:Nd1?6fk76kgi"PAgl4N.jjq,iLl42#Im0rY0l5o@6r>k/CcPu-f
jr*G%l57tdq\J6,o+]Lal4Vb^pCZO!cO]1KpC7'7g(W`acOo^ZoaoF[l42DTp'pa)lQ>C5l5f.0nf-F)
l5ItdmMPm>f,+E$cP5ISlP&OrcOo:Nr"%9fk77J*cP-9jm1R_Wjq-P`m18IlbRNMQl5o42l5\t+ko8n+
cPc!bqA8?3oG,[dg(X/nl4VDTjq.%nh[f5eoG#Ubo+Lg2cOo:NfFR`fl42ASf,s`.oH*9<l5\+hmi)*B
cPc!blPJh$r=m]pcP,RVq%;3jjq,iLq[WW?lkIbZl4W"en.FdocO]:NpC6BsrufW0l5o42q],)FcPu-f
g_o`%l5911q\J</dhM`pcP,RVcOo:Ndgt@NlkAFnl4VDTkRdb*cO]:Nl4*D/n/pR1l5o42l5]",kSre*
cPc!brtkVLobQ[)cP5+Iob6U'cOo:Nndk'teeHFDoFgm2cOo:Nfamffl43FqlQFLqp`B#Jl5f.0cPu?l
q\mcunegO*jq[k0dM1"@l4Wq*ee.$Uk7>cNcP,RV!"mQijq,iL!"S<)rXJWGl6+Cpm2l6Jl5f.0cPu-f
r#+!%r##2Fjqd(oo+^!pcP,RVmh+Ljjq.%np_D?op(Ygdl4VY[q@Vj$cO]OUmNMBKnfZ7#l5o42nJqBF
cPu-fe/A9&n/(4&jqZ2Vq\.Knl4VDTpCQg*q[`*0b7rqLmM"jucOo:Nq%)'fq[V[1l6,42l6#:4l5f.0
hAc#)l5JLsj;7"qrta`3cP4b?rtFZ1cOoFRq\JH3b7r89l4VDTjq,uPr?:#@l6+CpmN2<Jl5f.0cPu-f
r>Fr>g)&lejq[M&g_A'Jl4WRui">SmnJ:C)f+dllcP,RVf+Ifjjq->ZrZ]f7qB5;NcQDEnl5fF8q&I^"
l5K42ckkg[jq[+pk7l5Ul4W1jlOj+-k8*=tbS1$kcP,RVcOp-fkn*"goHMa-mi_NNcQDEnl5f.0rYs9)
l5KR<p__QuqA890jqZ2VnIsdnl4VY[p_WB7p_N-0b7rSBp_2p*cOo:NnIPXDllsn%l6+k(oH3?>l5f.0
e/S<)mi(U2cPP^Zq%`<4cP4\=q%E62i">Anjqd4spCu-lcP,RVpCZ'jjq.D#q]k5IllkR9l6+Cpl5ogC
n/^d6cPuZuq\eZ9cPP^Zjq[.qjqQ,Tl4W@or>4Z6jqd4sbnU0lcP,RVcOp0glk&\3js&7tn0%TNcQDEn
l5f.0ru9E+nJUU/f,+6!jqd(ocP5p`h@o/eoF]dnn.ta6l4qJVfb=)nl4VDToFU11js&7tl6-!He0!rs
l5f.0oGd!5k8EP%cPQQrkn`CrcP5OUknE=prXmKnjq[q3lP7SWcP$9klOqMUrXdm1nKRZNdin!!dNAH1
l5o42l5\n)jr*q3l57h`jqdD#p_D*hcP,g]rttSLcPP^Zl4r\#h\=BMl4WIrl4MJijs&e.nfd9@cQDEn
nK%HHl5]73di%EfpD;L!jqd(oi"YYpcP-0gmMOdsne^F(l4qJVq%M?nl4W"epE]/Ojs0"4din!!r?'K1
l5o42l5]U=r>P\ScPc!bcPQTskSE:qcP5RVlkB76l57h`jqd4sb7r89l4W@om3L.*nfm`Ndin!!di\N1
l5o42ll>O6fbsN%l57h`jqdG$pD)!gh%T;rl57h`jqdY*obGXacP-!bob-m/qBbDPdj+$"!$]l8l6+Cp
qB#/Jl5fR<k8MYa!#Y#=cPP^ZjqRk1ckPXVk8EP%rYO!!jqd4sitU_lcP,RVrXnWGpE]AVdj+!!fHL/9
l6+Cpl5o42!ZW-uqA\Q8cPc!bm2+e!jqd(oeeIrpnIs^rl58"er"nK2l4qJVmh=XnnIkdIl6Y^@j<O.=
js&7tl6,[?h&ko'o,[6<jr4%5f,<ijcPQ6ineU@&cP66ij;IG)l57h`jqd\+oG,O`cP-0gr?h7cl6Y^@
dj+'#s!#o8l6+Cpq]>5Jr>jr<jr2P`l57h`jqd(odhMZtcPc!brtj'!jqd4sj:peldhCsml6Z3No-Dd0
js&J%q]Y5IcQDWtg)K/mcPcEnobc!kjqd(op(Z^)nJ]^kl59.0g_])gl4qtdo+^!oqBtDPl6YgCrZor;
js&7tr#kGNcQE!)cl;s&ko.kcl58Otm2+n#jq[%nk8F=<cl)*ccPQKplPAb#b7s+Qs!R@bjsK@>l6P(.
qBP,Hdin!!ko]14p`.U!jr3\+i>LntcPPm_r"eE0nJ(a;jr2egqAJQ8cPP^Zm1oU8b7sI[r@$qYjsK@>
l6Oh'js'UEgEGi)g`Pr(pD_d)jr2P`pDEN>cPP^Zjq[b-r>Y;Hjr2P`l5911gDAufl4r"eneCs7o-ilO
jsK@>mNh`Vdj+!!dinZ4mNCX6q]4rAcPum&kShbbl58Rulkee"l4rA!jr2P`l57h`r>+Z6l4qVZkpYgE
jsK@>l6Q3Ng*>`(din9)q&o/KnK$m7cPuKpo,>pml581jpD;s-oG-(!jr3q2g)9/mcPQ-fobQg-fbE<l
mjJ#\jsK@>l6Oh'rZ^SNdin!!qB+l@!$(;EcPu!bjVdA%l57h`jqdq2ru9B*jr2P`rYY#>cPP^Zl4s.0
l4hbsl6k^@pEfGXl6Oh'js'7;jWX"6p`AQ<l5]11iu@,!cPc*erYWrtm2#I:e/S<)jr2P`l58h'jVR%p
l4r\#q'kYYkU>^DjsK@>l6Q6Ofd#W'dinH.r>tMNjrN_,cPuNqnf#gll584kp)!H=mMsOljr3t3fbs&l
cPQ0goG6^,pD!'FdjX]5q^:MQl6Y^@dj+l:kT\J!ru^AEjrN_,cPu!bjr*G%l57h`ruL5AcPu!bll"k%
l57h`kSF16l4j:Kjseb-l6lKVlR(mCl6Oh'oHNlNh')G5jrWY*p)N`FcPu!bgDTZ%l581joc<07oGcR)
jr2P`oGI<>cPP^ZoG.'LnL=/\djXK/jsKIAr[$hTdj+!!k99jIm2tI3jrN_,iu@A)jr2P`l59@6l5/b,
jrD\dr#4l>cPc!bi>:r!jqdq2lmh-Hi[F@Gl6k^@l6Y^@nK['=js'==i?.A,r#Xu@l5\+hlPf[>cPc!b
m2,O=m2c0HjrD\djr3V)iu.,!cPPsar@@gsl71pFdjXK/r?geVl6Y^@dj+N0nfmrSf,s,rjrO19oGl0r
jr3"moGQp2pD<6=l5f",oc)X)jr2P`obdB>cPQ<kmjmZQngX5\djXK/jsKLBr?^_Sdj+-%rufW0jrWY*
ll?$FcPu!bd2Ds%l59OCjrWe.jrEY*jr<G$cPc!bcPP[nl71sG!%HAFl6k^@l6Z9PnKcR.oHNrNfcTr1
jrWY*l5\IrpD`65cPc?locN`GocEB=jrD\dnf%0>cPc!bfbaZ=h(.b?jseq2r$^hXjsK@>l6PO;m3DTS
lQFLqjrXF@lQ,71cPu!br#+!%rYXrCjrWe.qAelBcPu!biu.5%l58Ots")VLq^V(bjseb-l6l0MoHriL
l6P(.p`]#IrZKN/jrWY*m2Z*FcPu!bef"E.jWEV+l5f",lPnq)jr2P`lPKU=m2,FHdjs]5kUHN\djXK/
jsK@>q]tYVj<O(9l6+e&p)iE<jrN_,g)K`)jr3.qf,sT*oH*9<jrD\do,@6>cPc!bpD<-Hdjs]5jsg'R
gaMG8jsK@>n0IlVmN^d9l6+CpjrWY*l5\+hjr3M&rufW0kT9aFl5f",cPu'dru03$l59FNjt,mMk:>gI
jseb-r$Uq\jsK@>l6Q-LjrsC@l6+CpjrX(6oc<<;cPu!boGRZOpE7d(jrWe.n/V0BcPu!bfbsN%oGI-N
jt+t3nLFAbjseb-l6kgCr[-nVlQjh#l6,pFefX#qjrN_,qA\!)jr44:lQG..miU[5l5f",i>_5)jr2P`
rYYYfl7Mrcl7CC7l71pFq'auGl6k^@l6Z*Kr?D.`cQVQrclW60jrWY*l5\.i!#t;Dp`\oFcQDBmrZ:>F
jrD\dko0O>ef"-5l7M-LmOREMl71pFdjY/BmO.-Dl6ZHUmNUF0oHEKBcQD9jo,[HDl5\+hpDWHCl6+Cp
jrX==nf?j4cPu!bq&/B6lRqHSjt,OCnLNlSjseb-ngF5\jsKXFs!-YMd38N5l6+CpjrW_,ruLAEcPtpg
l6+CpjrWe.jrD\djr3M&jt?Qal7M-Ldjs]5r[I(\djXK/jsL!Ps!.7_js&+pl6,R<i#h)&jrN_,n/LX3
g*,`(f,sf1jrWe.jrDtlq&AH7oGQ75l7MTYoISHAl71pFmjR9Gl6kmElQbO9r#sQ5l6+Cpp`AlFjrN_,
iu@&&m31a;cQD9jqAo)HjrD\djr44:r@\.(dOsf:jt,RDn13cRjseb-o-a;\od8WBjs&4srZUPLcQD9j
koKaDl5]11p`e$-lQ?0McQD9jl5f%-!$'<(m2GOKfIm%Rl7M-Ldjs]5s!d.\djXK/s!H>Bjs&+pq&o5N
cQD9jjrO7;nf7BCmNTt#l6,gCfcT>tl5f",pD_d)pDX&cl7^R<r%7@hjt+t3l72ETo-r-:ngFG_cQhQr
cQVQrjr`k1jrWY*l5]gKkT^$NcQVQrcQE0.kT9"0jrD\ds"O1$l7^R<l7M6Or[cMKl71pFjXBRGr$V._
cQhQrnfcj5l6+CpmN20FjrO(6ocrTCfcg)5l6+CpjrX"4q]4f=fc062l7_obgFhbCjt,4:qCCh\jseq2
lQl<Oeg'<$cQW--nK?."jrWY*rZ(k]mj$s=cQVQrp`J-1jrWe.jrF.8ll5jWjtQ'RdOtJMmOdQPdjs]5
odTG\i[FRJl6O_$!$gVMcQVQrk9&q1jrWn1i?RS2rZ]Z3l6+Cp!$:;El5f",m2PUNjtQ'RdOt)Bq(:_[
djs]5l7)Z\lmV9Jl6O\#pEK)NcQVQrg`Q/1jrX7;f-BE%q'"?5l6+CpocEZFl5f",pD`<NjtQ'RdOsf:
jt-?Zg+2G<jsg!PjsC$Rl6O\#js'"4kTT46cQD9js!,i7js&+pl6+CpjrWe.r>b)BhD+.Hl7_QXjY#gM
jt+t3r[R:bjs^9Yr$L;Il6PjDi$7A.cQVd#q]O3,n/hKQcm/?2js&+pl6,L:iZI;(l5f@6r\EXknM0/[
l7^R<o.B_hjt+t3l726Or?h4bh^.P5cQi3/mip($l6+n)o,mfMng):$js'XFefj<$cQDj%nK-s9qAf,_
f.lGB!&3[kdOsf:jt-B[fdl>;q'kMSi[+RMl6O\#js'%5k99+5dN@Zua<TgkmigX5l6+CplQ5sFm2bII
f.lDApFl.ldOsf:jt-!Pj=BRHhBq,+q'>MVcQhQrhBDG5l6+k(hB_S8fd#W'cQW$*oH;I%jrX7;jtcfh
f.lDAl7_3Nmk3lWjt+t3p+$(iegB9#l6PL:l6GF8cQVQrr?(;Hq^'rAa<U^/kT\=rl6,.0llY@2ehZ&9
q_@4el7^R<l7Duek:G(4!%RXhf-UJEh^.P5cQhj%q'+-.l6,R<nKmfQk9S+njs':<i$%A.cQDWtrA)_T
f.lDApb24ldOsf:jt-$QlmqBLegB9#qBYSVcQhQrh]_M5l6,pFk9\h-nKZ[2js&+pp`T/NcQE!)aYN]J
f.lDAl7_6OmOmcVjt,XFi@!2'h^._:r$9T5js&:ur#tGMh'Lc#js/n2js&+pm3)BNdNA9@^bYjCgG.hE
l7^jDq(Cqajt-!Pf-g;>i$R>-l6P.0oHWKBcQW$*q'PMUmNpR4a<U@%nflC'l6+k(s"j1$^bXLrr@mLj
l7^R<l7M]\nLXMepF+W@egC/<kU#L>cQhQrruoc5mj?d8l6PmFa<Tgkjrs"5l6,42jYQ'Tg+q87jtQ3V
r@cSOl7M6Om3q`Wi$[)&h^.b;q]sK4js&J%r?gbUgEkQ!k9Jt2js&+pmNDHNn/pC@^bYmDg+h_Dl7^mE
pb(h`o.8oMf-g>?h^75,l6P11o-<BAj!!/(mj7?Ig*F`ap*0#NcQVQrqB+*@^bYL9jY>mOl7^R<s"3Rh
r@HVMf-fr4l6bC7l6Oe&rZgPLm326Pg*Yl,pa+W>a<U!pr$'H1m3'Y0q_Q#Cf.lkNoJ#P`dOt#@js]LC
f-f,rmNqEMl6O\#js'OCs!R:`g*YQ#i$A1Fa<Tgkg`c;5pE7.*h(n%Hf.lDAl7`#efIm"P`@1.%l6k.0
h^.P5r?Kc9js&k6kU,mJgEkQ!h';82js&+pj>5.=^bYO:j>#dNl7^[?r@#E/f-fu5kpG:6l6Oh'r?LeU
!%?SLg*Yo-pEeN=a<U$qq]a]:YVZ,3^bXLroJ#kjl7_$IaXHC%f-f,rmj7KMl6O\#qBGV]gF(]%gEchF
gEaibjs'^HkTQQSrA);Hf.lMDr\3Ujkq;`[]dWM$f-f,rj<a^Ml6Oe&lmUj@qBsuDgEkQ!r?KN2js'19
jtj4tdk^>Hf.lDAl7_`]s!dFdYUJQ[oI&3:h^.P5o-<NFi[EP/hBr1JgEkQ!dj+Q2js'OCZ8:2j^bY10
mP3iXl7`)gj=0:@aXGagj<jIFh^.P5js/q8odJQBg*YQ#g*F`ajs'a[Ker]`__Tgul7i/jn1WKE^*rS$
f-f,rjX'dMl6PjDc7%^#q'XlCgEkQ!rZfT2n07]ccnhj]e2$DHf.lDAqCh[pf."$Sr[?AGegB9#r$:_V
qBNp,gF)tIh'Ul&g*H87eg(#8n2/*?\hhG`pbLGUkqMTVhC8:MYUJ3Qr[68Dh^.Y8js\b.gF(]%q^(2I
g*Fids"rprRks+]^bXh&pbD@ojsnt3hC-i$f-f9!r?gDJpE[$ms!ZVLg*YQ#pE\fFeK`j+n2$+]oJ4ZH
f.m4Xj=9sTf."'Tr@$8FegB9#r@.UmYUJ6Rs!HMJgEkQ!oHW]IdPSs"\MMA`pG1PZr%$AKh^S@MYUJ6R
r?p/Ckp>^Gh'gc$gF(]%r$C8Ig*Go-a>CLb`&#1a!&<[lngi<Af.$\IZRFEQqBk#Fo-NEGdO=!$gF(]%
nKmKIg*H87s#&+ZnhcIbmPDX6nM05Xs!l\Of.#2th'gl&egC>As!lbPYUK;pj!WP-gEl54mNh`UoejNA
jtiD]l8$sHq_?qXf.-eLfdX-Rq^:2Iga;\DgF<(LZmaZVod8fJgEkc'lS\Mqa#(Fb__]4dr@?MNf.,B$
s!Y0$f-gGBlmD$JgF:T"hC.,+g*ZA:l6Y^@iAJt=nMHCbm5*$Cat!HAfIGK%eL93$f-g&7i@<S2a=-:$
gF(]%k9]dIoH`$G`AIKLLGS]]fJ:5mod\uOf."ijk:"q0qBl1lg+)hGjXID^mjIKMg*YQ#rZpV`kV^.4
gbY]]i\LNa\1?/\odSoMYUK#hl6l3Sg+(i+o-h=$gF);6n0[-@__pp?d58-bbqn]Ar@H8Fi[`V1f.$A@
]I;hgl7;`]i%!J1aXH@$gF(]%lm;Tgs#.VL`\dQLLbnc]p+l4jYUfDsi[WP/b:)L$mO-pCg+)kHj=.;]
n0dQMg*ZM>nM]&Xk;C%3h(tc]!&EdiYUf#hm4-^:^aS_$pa=WCg+)J=mjYIhjX9dMg*QeGk;LUCnhn3>
dPJ<fh^n4H_CO4flRD3MYpe`bk:>79gF;A8a=,djj!Odah_r5,jttgLW&*]ps"2hR`@L:*f.,B$lR:./
_CP.+l71O;^F8Y$gF)A8dl."Za#1XhrA1'%oe#YakU`qglmh?Of."Zer@>N2g+)M>mO>@gjsTjMpEn!?
cSb5M^bjLrdkg;Af.?DA_(4+elm_9McRAW@cn"6/g+(i+l6s\$gEut[^c'+gr&)8Ha><$9i@WY4jX\P*
f.,`.pF4cDn1;O/nLN<CgF;#.dO=3)p,CV^kr-:6gbe+L\MNA"nh&HE].<S*f.,B$j!apYkUa+lk:6*R
gF9NYr$_"]lo2^<mkrKM^bkX=d51MLf.H,9ngq!qi[XXOf.$)8gaqqF`[famj=0jQYUK;pj>[)t^c'.h
q_c/Gbqo;NnLiEFf.?&7b:D0oi[ORMpF,tleh"fkn133BgF;&/djWj-ff&%P^GXh(j>>IEj"BLHnL`?D
]IWY*f.,B$o.ANE].<b/g+(i+eL9W0c8X$,o/=?@dPUDLiA9.>gb&FUf.=0W!%ZYNi@4"CjXfsR[4C&_
r[QYO`[Kt.h`&>/jYbdM^bk@5s";\Of.Gc/r%,'&fI?kNlRC^Ceh#r6cn!g"gF3+Nd3uRbq)6;P^GYsH
`&.-Cb:`ZEf.GT*gago*f.-GBq_%.cnh&ED]IWh/g+(i+g*lnYZo?;hni"6?dkpJLs"h8>h(ALUf.=3X
s!u\Ns!dIjgF_P=nLV'uhCAIRgF;23aZ&'8^c(=4g,6r.YqFW[r%-VSYUfJukUPaJgF_/2r%,6+g+)qJ
i[O:DZo@5.^c'q)jYbICr%HJNgFh)0f.?hM[4CJkjt?E]gF^u-gah)/g+(i+paH/$PW/%hdPeito/,_h
nh7'sr@QbUf.>?#h^e:Jdk9Q1r%6JN[4D5+h(%2/b;[-o`A[WP^GY.1kV)leYV+NZr@H\SYUfZ%r@Z>I
gF_23q^f-*g+)tKlm\8[kVp:8gbn.Mn2/uTdk9?,f.GT*r@>H0aY*<?gF^u-h(.//g+)S@pGe*jo/FHC
d5CAMqDA%&gFpW#jY#.:f.?JCcRZCU!%ltXeh#6"j=Aq6qC1ekiA[>ejYkmP_DUg:pFkV]X=j)rjXo(8
at*KFqCf3.gF`=SgFT`_oIB,Uj#FM,a>^mmr&)kZjtPOCo.IU,f.HSFjXen3mP!ELf.Pf0eh$bM\LZhm
j>cimNApDe^c'b$r@m.`gFpZ$j=]%9f.?MDlmq-MZnC)beh#9#j"'XLcT'oCSN#[hgG[tIr@ukWpb1\]
X=j,sj=St7kUQWegFoodp+>DYeh"lmmOS/a`AlI.W&NHhju2K^o.efMm4[o]X=i`hmk*-BngjDfgFrOY
[k?DengrlR\L[S<lT!HTXZ+Ze^c(gBs"WgoehGi3kq9n,f.H5<mk"AelnI0Ie1T]4gF^u-o./3=ni=NG
!'#Tir&;DLr\`Rfm4dfZgFp;omOm*CgaqM?s"N1\ZnD))jXo%7bq&`QloDj@fJf]egc"LWs"`1\ehHMF
mOtXol7MEUjt-Neg+_87s":`4gF`"Jj=Jn5hDsp^eMs]jd5TH2oeP,RehH,;q(Jg%h_"XUn1=5eg+_87
oIds4gF_V?mk!EJe2cJIi&IJjgc*tGlS@KToeG#OgFqG:c7[^#qCLqer%R"^gFp]%lRppDeh$,;s#J:`
^c;*JLH#,hl8ITVf.l;>oJ##Q[4_5,g+D8<g+`=Uj"Iblm4IcYeh$JEb;o8V^c9UuYrD,0j>-?_f.ki1
j=g9]X=iQcrA!%]g+_87oe+$4gF_Y@mO\AgpH$)Mi],gTUc7$eq)7t'f.uDAoJ+oNgFqJ;bqAE9pG1>T
r@m(^gFp`&l7UgChCS%T^cC"+l8Y1jkVqlbf.u#6s"W(YgFq)0fIlqNm5!9JnhB;^gFp>poe+uNkUbaT
lT*NV^c:a@SN#[er\N.]f.kr4r\3([XY0W/jYGFBg+_tKm4Yh!j":'YngrHT_)VKU^c97kd5T`7g+rX_
f.ki1gFiOZ\1Rb;g+r7SjY>ICgFqkFatDF#r%-niloMpBfJr+TSi?U(dkfT2g+iR]ehGi3eh6;Ap+tDX
f.lkNkV1aE_(P@4i%;o/loETV^c:dA\i7_erA3%\f.ku5r@ltZb:`-;g+q87kV2T^gFoufs"<RgrB%bT
iAogV^c:C6cSrHlqD-n_f.ki1qCgh]eLoi;ln\#bf.ku5jY-?]ZnCu&o/lS*bW<O"pc-AT]JojHZSU2g
qD$h]ehGi3p+GV_fJD5:kqVW]g+_87i@`V4r[m@rau]5W^cB\"o/O`Kpb^JVh)!Y<f.m+Uh([S:kq;$Q
lSI6Mf.lMDnhAfO].X%Dj#b":i]5mV^c:F7lo4>hYVZ/3h(mS:ehHtSi@jdT`&$d9mP<BKg+_YBp+OB;
eN<Fbb<!F!q)HGTg,J(LYVYc(kVCaEehHSHlnA;i\hi>$q(gPVg+_87cS!C&l8mKW^cCgBdl?DIg,/FX
]ee7qn1j,]ehH&9rA<dqb;7j-h_Fp]g+_87fe3:d_`PXp!'7nU`&R]TmPju"f/1W+k;1^Ff.lbKk:l3T
o/+6=oeY;Wf.l/:r%QkYj"C*he3!%Z^H1"-krHO=pc%\"oeb\cYVYf)k;(XDehHbMrA<muZnp_tpbLGU
g+_;8!&*^lmQA9HlT3QW^cCjCdl?JIf/3.V]JJ.pnM02]ehI+Wh_aXTatqa,i%b!]g+_87pFbMh^cUI8
i&\Y6j>c?_gbm\?l8-I:f.uJCnhJuTq_d+bi%rn>g+q87s"N4^gFq8CoK1;Z^H2-MaZ7m2r&3jum5<KP
^bbL:f.tr4kV3#oo/58Z[PRq>g+q87g+`FXl7^LHauf>Z^H0Y#o/Y\fni#)WlSRucYVYGtnM8]NnhB5a
jYZ]gZnpDk!&<+\g+_tKj?2Hb^cUL9h`AP5krAW"lo*HQf/2eL`\Z4%k:uK]r%QqagGIkFe2,f6f.d7Z
gG&FV]KGjKbWER#q)QMVo/PSblo",ef/1<"n2&ZOgbJU_gGR_Behc2>g+q87oe>S`Z97D6f/p`.mQ&`V
rAag9ei)JEpGLPZ[PRe:f.uJCml'&\rAE=dZnqM5i\K+?jtPp[_`Y^r^H0@ps#9[2ei),;iAC9cYVY)j
q_IXqjYkjNgGH8ng+r@Vi\BpVZ97M:^cU./krR0OlSmc\p,:M[f/2GBcnj9/qD%%hpbpkagGIM<hD<k@
f.m+UrB-H0lT<ZZ^H1gDloF#`ei)MFp,1GY[kmk:g+rRbei)GDr&*4cZnqP6iA0+AaZRF&_)hWY^H1F9
f/M8=f/;/:YVZ55kVD]fei)8?q_[7gZnq/+ln[WVs#meQbrid'pH$DWmQ&NNei),;f/0]fmP<ubs#/Lf
gGR_BpG9N>g+r(Ns#p*>N'-hs^cTe%o/cY,_`-1*!&iFdf/2)8g,&LZhDa"D!&`OhgGI/2kVLpJpbD(t
iB3hsiB,sZ^cLO8ei2/<fJNXdf/0`grAW@fei)8?r&!=gZnq2,ln[N_[lhks^cV<PdlRLgZ8VbBei),;
fJERb]/.Sg!&iFegGR_BpbTT>jYGFNX?>)s^cUpEkW8ArYrDD8i&91Ef/34XcSN?qoetefgGR_Bm5)g>
mkW-NJiph1hE's^r&;&Cei*:\i&0+CcSPS[\2Vtsp,1tigGHf(nh^(s_`cU6X?>)rl9"2jiAf7Ei&B4F
f/<=[i&'+Cq)Hh^i]#FHgGSOYl85q*qEF4.eig,tei^`0niH_/gGlGspbq"ff/;/:pbV7mml7[5p,:kf
gGR_BmPE<Jn34ZO!'Prs!'J%Yr&XU5ei<Ue[5ZYpq).%ef/2kNjZ'V+lSe)fgGR_Bj"omTk!$RDpH4Bs
pH-\_mQ&iXni+?Cei)qRl8@0MpG:P`o/FNFei)kPn28rWe2-5NpHHAUbriEscTD.ejuM!Pa>`BCei),;
mPO2cpGptfaZ&QFei)8?kVVoghD<SDiB?*^UHIHsffRnJni5_jYrD)/kr.-NiABp^pc.=oZo@>0lSdKT
gGJ+MrBAFh^chHTM`gbrloY&)f/_DAo/FECei)tSkr%c`j#PjRoJaTFei)nQmkriVnh^;1b<GV`^cft*
[63h<n2f/]ei;kPau@m0j>HQeoec\0gH""Jkr6gFei)MFqDI"ar%n"1^coOs_`Y^spH.LukW/,mei:B&
oJb>Zf/<RbofDY(l8dTY^GkjFei)8?i&(Hum6ABMf0/C^R69asgcF%IkW&#jYrC`%o/>J`lT3c\mPsVo
Zo?u&oetP^l87HalTWl`^ch*JT02m1m5j\sf/_DAkr6^Cei)bMrAs%$gH""Jl8QmFei)PGq).e$f0@)8
!'\1]`&uL2mQ9/akrJ2mei:E'o/G5Yo/6M/g,egckrIKX^c1pFei)8?r\Vka^cqKUb!!9tkWIofgH+1O
qDm+dZo@tCei*IaoK1bfkW/8qgGlT"!&rIei\etFpHQGWbrt\^W]]E*ofLnhf/_\Iq)GW<gc#0oloWo^
gH"=Spc,W>fJ`aflo"Z*^H^[@i'+q>j?1UJeiVnQq)[+fei;PGdl6DIi&g9dmlK2`gGn+MeMl&;p,2A*
oKUPa^cqNVaZ[3tofUeegH+4Pq)R"c[5\%Cn2:8/f/q\IkrJ>qgGlW#s#8Le!&`q)b!5Sa^cp%,o0'6=
j#clpgH*qHh`1BjYrDM;p,pqgg,e(Nr]/^mZo@b<kVh6^^H]Lt_`du^Xut>us#\srf/_DAs#7AFloa8h
p,gthgH""J!&q;Ekr.ZhmQeNOf08I`^cgC6eNDDEgH,?pff@VCeMlbPi]PgSi]?lrgH""Jei2JFo/=]U
l9Eia^cq0Ldljots#ejogH*qHs#AXja>`0BofUhfg,e+OrAiUlZo@qA!($TL_a)"%!'e7_`'+&^XutB!
r]Ajqf/_DA!&r@cc91,KofLkggH""J\i9=Ke3NCd^H^@7krumGqE2/JeiW[gj#YdPei<=]kVpFBfK0'p
g,dtKgGnmccSt2Va[#Vd^H]t,oKL)ScTL)IeiVVIof;%mei;eNjuh0Vf/q\Is#JmqgGmJ;s$>^3^d-gB
i'5"@j?;?_XZZD@hE0IQf/`L`i]-EdrB7SOs#empg,dtKq`*OofJhGKoK^Yd^H_KWaZdO(qE2,IeiW^h
i]>[Oei<LbrB9m<Zom#'s#\pqgH""JpG_Ftc9]T<pHZJXc9Ch`_*-.-hE9@NgH,$gi]5[Okrmufe3)>E
g,]3ogc=+Klo2jK^d%la^d#_#r]\.]`B<BIeiVVIlT+>mj#GpZei_hPf/q\Iof;1qgGnmcqa/atmQnWR
ej&Fa^cqESpce.0kWQ%1mlT_pgH*qHm5Y,0rBAt!Zon.Gh`KOQgH"d`lSnl'nNt#Wl9Nrd^H_-Mdm!dp
mQT2bn3"EIeiW@^loN`YpGh\,gHDo+f/rdhi]>gSj>c<hr^"Ff^d,Y!`'3BKeih#8kWIEXgH+[]loF5m
gHF.NhE9COg,epfjuMihh*TUWm6SNQf0ALadQRXqgHP*ik<5q0n2oepgH+:Rh*0RVbWP,Pf/q\IlT+Jq
pc-_ha[,\f^d-+.oKV+pp-7:qjZW/tXZY],niPSelT+f+g-5BsiB=P1mlTbqg,e"Lk!J,q^d6mDiBY.B
k!&f0mQ]Gieii.Xa?8$8juW2sof;M+g-47SpH6/Pf/rF^loO8h^I%QYbsB-1pHQban35hrl9=c&eigZ.
niYJbgH,?pk!/l0gcjIUbrk2Pf/q\In2^G7qa8+bb!Gbf^d-./o0<(8fK\+Sjur5tXZY`-nN5blgcsLV
r&rt$Zomh>kW@KZqDmq1h*U-g^d6pEi'>.Dpd!FqgHO@Tr&q/EgH5<pm5k#-gHXCUnNH2$ZomG3o/kbh
j$V6]mR"]Tej/OdbWkM\i'7!$gHO1OgcX"IeiWUemQgS4j$26]gHFpda?8'9k;rW1gI&_Bl9X#f^d.9O
l9F>pf0A1Wr'&[pZ98%IeiVqXgHY?pk!%N__`[KPf/rL`cU7Xt_a;.)^d-gBj?WH)f0A"RgcbNtXZYN'
rBT4)gHXCUnic8$ZomJ4niQ_0`C&*@m6\TSf0JUdl9EW\iBR'$gHO1Oh)s(Il9!?XqENt(g-47SmQANP
gH3#7a?oYg^d610og&.6`^&-?!']1%eihGDgcY3j`^&uWm6B;ggHFRZdQHVQbsUS[^I$jEiBb7Er]fO1
f0IqPgHPNugHDZ$r]C-F^-LF;lTXf%gHE)0r&jF0VaL&BbsK33pHX<qf0A"Reiiso\3.r"kWmleg-4^`
oKBQDq)dY)\jOS+pHlY]bs8?qf0A"ReihJElo_43n3?8(g-47Sj?1mRYX@J=^I$mFi'F,'ej.hOgHPR!
g-*M>Sj;C%pHR@qgHF4PkWF@~>

%%EndBinary
grestore
np
136.716 102.032 mo
136.954 100.064 137.167 98.0928 137.419 96.1274 cv
137.506 95.9632 137.591 95.7979 137.674 95.6313 cv
138.434 94.1089 139.013 92.5113 139.483 90.8794 cv
139.277 92.3957 138.84 93.8513 138.389 95.3238 cv
138.369 95.3895 138.349 95.4552 138.329 95.521 cv
137.759 97.3803 137.451 99.2827 136.973 101.164 cv
136.973 101.164 li
136.897 101.459 136.81 101.747 136.716 102.032 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 335.984 ]ct
[4.32 0 0 12.48 135.84 233.264 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 26 
/M[9 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%='&I)<`W7%<``@(='&I)='&I)='&I)='&I)
='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&I*=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-
=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BSd0=BJ[-=BJ^/=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1
=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1>$>*5>$>*5=^#!4>$>*5>$:~>
<~6UO4.6UO4.6UX=16psF26pj@16psF26psF26psF26psF26psF26psF26q'O577BX56psI477BX677BX6
77BX677BX677BX677BX677Tj<7n6'>7n#p<7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n?0A84Z6@7n6*@
84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84lKH84Z9B84Z?F8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J
8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kK~>
<~6:*t(5s[e&5sdn)6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6UO4.6:+"*6:4+-6UO4.6UO4.6UO4.6UO4.
6UO4.6UO4.6psF26pj=/6UX=16psF26psF26psF26psF26psF26psF277BX677BX56q'O577BX677BX6
77BX677BX677BX677BX67n6'>7n#j877Tj<7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>84Z9B84Z6@7n?0A
84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B8kM]J8kM]J84lKH8kM]J8kK~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175.188 221.49 mo
175.092 222.12 175.324 222.803 175.417 223.421 cv
175.566 224.425 175.632 225.447 175.644 226.461 cv
175.666 228.356 175.478 230.268 175.024 232.11 cv
174.377 234.746 173.172 237.679 170.895 239.316 cv
170.351 239.708 169.741 240 169.095 240.177 cv
168.822 240.15 li
169.904 243.394 170.247 246.854 170.474 250.264 cv
170.615 252.377 170.698 254.494 170.815 256.608 cv
170.946 258.958 171.132 261.306 171.282 263.655 cv
171.922 273.669 172.329 283.725 171.653 293.75 cv
171.471 296.462 171.318 299.178 171.137 301.892 cv
171.048 303.221 170.949 304.55 170.832 305.878 cv
170.738 306.935 170.671 308.009 170.503 309.062 cv
171.259 312.01 171.952 314.979 172.515 317.963 cv
172.909 320.059 173.223 322.172 173.394 324.298 cv
173.52 325.83 173.527 327.362 173.574 328.896 cv
173.595 329.558 173.618 330.259 173.555 330.944 cv
8.73438 330.944 li
8.74216 330.248 8.75583 329.572 8.77638 329.23 cv
8.84962 328 8.89452 326.769 8.96486 325.539 cv
9.11034 323.007 9.36328 320.479 9.61522 317.957 cv
10.1182 312.917 10.7324 307.892 11.3975 302.873 cv
11.4834 302.222 11.5694 301.571 11.6524 300.919 cv
11.5791 299.697 11.7783 298.458 11.9472 297.251 cv
12.1289 295.942 12.2597 294.635 12.3877 293.321 cv
12.6504 290.641 13.1768 288.032 13.8721 285.432 cv
14.5781 282.794 15.3584 280.177 16.0704 277.541 cv
16.7842 274.902 17.5381 272.284 18.4258 269.697 cv
18.9092 268.291 19.3487 266.861 19.8711 265.468 cv
20.0459 265.001 20.2148 264.534 20.3838 264.067 cv
20.3545 263.899 li
20.7119 262.629 21.209 261.403 21.5576 260.126 cv
21.8955 258.892 22.1797 257.643 22.4502 256.392 cv
23.0156 253.781 23.6025 251.177 24.2148 248.577 cv
25.4795 243.21 26.748 237.842 28.1983 232.522 cv
28.878 230.03 29.5791 227.511 30.5664 225.116 cv
30.5059 224.949 li
30.7735 223.563 31.2578 222.206 31.5927 220.832 cv
31.9356 219.426 32.2539 218.014 32.6016 216.61 cv
32.9453 215.222 33.3056 213.843 33.5712 212.436 cv
33.8437 210.995 34.0567 209.542 34.2549 208.088 cv
34.6455 205.211 34.9736 202.321 35.5254 199.469 cv
36.0821 196.593 36.833 193.782 37.042 190.847 cv
37.1153 189.819 36.9776 188.653 37.5606 187.739 cv
38.044 186.981 38.8574 186.9 39.6455 187.077 cv
40.5566 186.405 41.8311 186.56 42.8643 186.827 cv
43.3349 185.675 43.544 184.387 43.8594 183.204 cv
44.2236 181.835 44.7158 180.479 45.7539 179.471 cv
47.8555 177.431 50.9834 177.977 53.5694 177.155 cv
55.1543 176.65 56.3125 175.561 57.2353 174.208 cv
58.1318 172.894 58.8066 171.392 59.9434 170.256 cv
61.0869 169.114 62.6065 168.848 64.165 168.979 cv
65.8115 169.118 67.417 169.469 69.0791 169.332 cv
70.6396 169.203 72.0537 168.632 73.4638 168.009 cv
73.4668 168.001 li
74.4882 166.591 75.8437 165.5 77.0127 164.221 cv
78.2344 162.886 79.3037 161.416 80.5234 160.077 cv
82.9551 157.407 85.669 155.06 88.7412 153.157 cv
94.6172 149.516 101.311 147.487 108.101 146.409 cv
111.845 145.815 115.628 145.543 119.388 145.068 cv
121.374 144.818 123.337 144.503 125.277 144.008 cv
126.192 143.775 127.105 143.53 128.032 143.344 cv
128.974 143.155 129.929 143.05 130.882 142.937 cv
131.817 142.827 132.753 142.71 133.675 142.515 cv
134.606 142.318 135.5 142.016 136.394 141.69 cv
138.159 141.046 139.905 140.343 141.701 139.785 cv
143.416 139.251 145.144 138.915 146.933 138.765 cv
148.322 138.649 149.723 138.579 151.112 138.739 cv
152.433 138.892 153.725 139.294 154.84 140.03 cv
156.116 140.872 157.068 142.092 157.833 143.399 cv
159.467 146.19 160.313 149.535 160.092 152.768 cv
160.046 153.437 159.949 154.089 159.798 154.74 cv
160.04 154.688 160.287 154.652 160.543 154.653 cv
161.794 154.655 162.912 155.374 163.647 156.35 cv
164.681 157.724 164.945 159.495 164.925 161.171 cv
164.912 162.228 164.816 163.284 164.855 164.341 cv
164.891 165.274 165.099 166.141 165.483 166.992 cv
166.244 168.674 167.449 170.13 168.611 171.548 cv
169.829 173.034 171.062 174.506 172.286 175.989 cv
174.75 178.975 177.158 182.036 179.043 185.43 cv
182.769 192.142 184.447 199.94 184.776 207.565 cv
184.909 210.65 184.725 214.136 182.788 216.697 cv
181.783 218.026 180.367 218.647 178.829 219.158 cv
178.054 219.416 177.271 219.666 176.553 220.061 cv
175.979 220.375 175.298 220.786 175.188 221.49 cv
.0588235 .309804 .231373 rgb
f
174.493 221.185 mo
174.401 221.758 174.561 222.345 174.657 222.907 cv
175.253 226.361 175.002 230.092 173.849 233.407 cv
173.017 235.799 171.551 238.547 169.006 239.416 cv
168.968 239.302 li
168.928 239.1 168.778 238.928 168.567 238.889 cv
168.366 238.912 li
168.219 238.546 168.064 238.183 167.896 237.825 cv
167.843 237.776 li
167.772 237.554 li
167.545 236.821 167.388 236.065 167.247 235.311 cv
166.883 233.347 166.378 231.422 165.732 229.532 cv
164.013 224.491 161.337 219.959 158.075 215.768 cv
154.939 211.739 151.357 208.081 147.455 204.791 cv
143.555 201.505 139.337 198.594 134.921 196.045 cv
132.579 194.695 130.227 193.338 127.825 192.097 cv
125.967 191.137 124.038 190.256 122.009 189.744 cv
123.934 189.429 125.878 189.247 127.832 189.296 cv
130.929 189.375 134.019 190.045 136.977 190.933 cv
142.844 192.694 148.47 195.516 153.543 198.936 cv
154.811 199.79 156.042 200.701 157.221 201.674 cv
158.219 202.499 159.15 203.397 160.148 204.221 cv
161.88 205.65 164.069 207.185 164.849 209.393 cv
164.147 209.784 163.218 209.577 162.491 209.366 cv
161.608 209.109 160.755 208.764 159.96 208.302 cv
159.83 208.226 159.725 208.368 159.857 208.449 cv
160.753 208.999 161.676 209.54 162.675 209.875 cv
163.581 210.18 164.675 210.41 165.542 209.875 cv
165.646 209.811 165.645 209.689 165.62 209.585 cv
165.493 209.051 165.259 208.544 164.966 208.082 cv
163.645 205.999 161.516 204.611 159.708 202.995 cv
157.45 200.976 155.128 199.107 152.567 197.48 cv
147.311 194.14 141.572 191.392 135.544 189.779 cv
132.502 188.964 129.351 188.429 126.193 188.512 cv
123.006 188.597 119.859 189.225 116.772 189.988 cv
113.627 190.765 110.519 191.693 107.349 192.369 cv
104.119 193.057 100.985 194.126 97.7529 194.802 cv
94.5019 195.481 91.1367 195.973 87.8066 195.903 cv
84.5 195.832 81.2686 194.885 77.9609 194.896 cv
77.5391 194.898 77.7861 195.464 78.0839 195.495 cv
78.8789 195.577 79.6738 195.675 80.4668 195.78 cv
83.6816 196.203 86.8174 196.806 90.0772 196.655 cv
90.4736 196.637 90.8711 196.613 91.2685 196.583 cv
90.7881 196.831 90.3301 197.129 89.8642 197.429 cv
88.7774 198.13 87.6846 198.817 86.624 199.56 cv
82.8819 202.181 79.1846 204.848 75.2178 207.127 cv
73.2139 208.279 71.1553 209.327 69.0322 210.24 cv
66.9902 211.117 64.8799 211.783 62.7695 212.47 cv
62.5537 212.541 62.7725 212.834 62.9345 212.812 cv
65.4121 212.483 67.8096 211.609 70.0898 210.605 cv
74.1943 208.799 78.0645 206.467 81.7618 203.941 cv
83.6953 202.619 85.5644 201.21 87.4756 199.857 cv
88.3945 199.207 89.3545 198.614 90.2666 197.956 cv
90.9688 197.45 91.6767 196.882 92.457 196.481 cv
94.9209 196.239 97.3759 195.802 99.7705 195.209 cv
101.335 194.823 102.88 194.366 104.436 193.945 cv
105.997 193.522 107.577 193.2 109.152 192.83 cv
112.233 192.107 115.269 191.2 118.352 190.479 cv
119.133 190.296 119.918 190.125 120.708 189.973 cv
121.241 190.118 121.77 190.274 122.293 190.454 cv
124.938 191.362 127.42 192.606 129.854 193.974 cv
132.17 195.275 134.496 196.57 136.76 197.962 cv
141.139 200.659 145.307 203.713 149.116 207.171 cv
152.93 210.633 156.39 214.488 159.35 218.705 cv
162.488 223.176 164.722 228.132 166.123 233.408 cv
166.493 234.803 166.671 236.243 167.157 237.608 cv
167.347 238.14 167.694 238.969 168.201 239.48 cv
168.633 241.177 168.934 242.92 169.172 244.644 cv
169.5 247.023 169.662 249.425 169.787 251.823 cv
170.285 261.328 171.071 270.823 171.178 280.344 cv
171.234 285.333 171.051 290.299 170.729 295.275 cv
170.57 297.707 170.439 300.139 170.269 302.569 cv
170.184 303.782 170.09 304.995 169.977 306.206 cv
169.958 306.408 169.936 306.609 169.914 306.81 cv
169.813 306.434 169.713 306.057 169.611 305.681 cv
169.069 303.682 168.472 301.696 167.728 299.762 cv
166.961 297.771 166.039 295.841 165.102 293.925 cv
164.284 292.253 163.439 290.601 162.578 288.952 cv
161.917 287.681 161.1 286.131 161.298 284.644 cv
161.764 284.863 162.189 285.241 162.556 285.57 cv
163.197 286.146 163.784 286.785 164.322 287.457 cv
164.858 288.129 165.364 288.837 165.758 289.603 cv
166.043 290.158 166.347 290.794 166.308 291.435 cv
166.303 291.529 166.5 291.621 166.527 291.506 cv
166.674 290.875 166.441 290.2 166.186 289.628 cv
165.808 288.786 165.293 287.997 164.732 287.267 cv
164.156 286.517 163.528 285.8 162.826 285.165 cv
162.316 284.706 161.745 284.216 161.084 283.993 cv
160.951 283.948 160.739 283.932 160.696 284.112 cv
160.303 285.746 161.151 287.472 161.867 288.894 cv
162.776 290.702 163.684 292.505 164.547 294.335 cv
165.426 296.199 166.289 298.078 167.006 300.01 cv
167.706 301.898 168.269 303.831 168.782 305.777 cv
169.086 306.931 169.388 308.088 169.683 309.248 cv
169.67 309.443 169.655 309.638 169.649 309.833 cv
169.646 309.963 169.771 310.09 169.912 310.159 cv
170.557 312.737 171.153 315.328 171.637 317.937 cv
172.01 319.95 172.306 321.979 172.473 324.02 cv
172.596 325.531 172.599 327.04 172.651 328.553 cv
172.669 329.072 172.732 330.058 172.619 330.944 cv
10.6309 330.944 li
10.6953 328.666 10.8662 326.4 11.1514 324.136 cv
11.7158 319.645 12.5742 315.197 13.0459 310.693 cv
13.2871 308.396 13.5234 306.099 13.7607 303.801 cv
13.8975 302.472 13.8984 301.126 13.9638 299.788 cv
14.1142 299.869 14.3047 299.859 14.3164 299.654 cv
14.4873 296.732 14.79 293.849 15.373 290.978 cv
15.9414 288.183 16.6993 285.431 17.5108 282.698 cv
18.2344 280.26 18.9541 277.819 19.835 275.433 cv
20.7207 273.03 21.582 270.643 22.2627 268.171 cv
23.6582 263.101 24.916 257.979 26.0928 252.855 cv
26.6875 250.265 27.248 247.667 27.7763 245.064 cv
28.2959 242.509 28.7539 239.946 29.3994 237.419 cv
30.0381 234.922 30.7735 232.451 31.4834 229.974 cv
31.8379 228.738 32.1924 227.502 32.501 226.253 cv
32.6328 225.719 32.7344 225.179 32.8291 224.639 cv
32.9307 224.703 33.0518 224.712 33.08 224.584 cv
33.8476 221.129 35.126 217.787 35.6084 214.266 cv
35.7314 213.361 35.8261 212.452 35.9258 211.542 cv
36.5342 212.531 37.5547 213.281 38.5234 213.874 cv
39.5908 214.527 40.7373 215.041 41.9111 215.469 cv
43.1397 215.918 44.414 216.32 45.7022 216.555 cv
47.2295 216.833 48.8057 216.882 50.3486 216.7 cv
51.8711 216.52 53.2998 216.118 54.7383 215.605 cv
54.5361 215.531 54.3252 215.479 54.1084 215.442 cv
52.6406 215.854 51.0967 216.079 49.582 216.142 cv
46.874 216.256 44.3008 215.656 41.7852 214.698 cv
40.7139 214.29 39.6592 213.814 38.6924 213.194 cv
37.7383 212.582 36.9912 211.817 36.2441 210.974 cv
36.1924 210.916 36.0986 210.877 36.0019 210.862 cv
36.0556 210.4 36.1123 209.939 36.1777 209.479 cv
36.4121 207.845 36.6865 206.216 36.9756 204.591 cv
37.5576 201.327 38.2011 198.071 38.6162 194.78 cv
38.7949 193.369 38.9238 191.952 39.086 190.54 cv
39.208 189.484 39.4034 188.128 40.4228 187.552 cv
41.0684 187.188 41.8662 187.226 42.6162 187.366 cv
42.6123 187.373 li
42.961 187.378 43.3135 187.434 43.6425 187.501 cv
44.1739 187.61 44.6894 187.735 45.2324 187.768 cv
45.3399 187.775 45.4482 187.778 45.5557 187.78 cv
44.7539 187.49 43.9697 187.148 43.1504 186.909 cv
43.3204 186.616 43.4628 186.307 43.5909 185.98 cv
44.1563 184.523 44.3271 182.928 45.0049 181.509 cv
45.6094 180.246 46.6045 179.268 47.9267 178.783 cv
49.3047 178.277 50.7871 178.256 52.2246 178.046 cv
53.6728 177.835 55.0703 177.395 56.1992 176.429 cv
57.4277 175.378 58.1748 173.95 59.0625 172.629 cv
59.9942 171.244 61.1084 169.888 62.8711 169.684 cv
64.4619 169.5 66.0684 169.968 67.6533 170.056 cv
69.3008 170.149 70.916 169.901 72.4561 169.307 cv
74.1855 168.639 75.8623 167.808 77.5576 167.056 cv
79.2442 166.307 80.9355 165.568 82.6406 164.86 cv
86.0684 163.437 89.5556 162.147 93.1397 161.17 cv
96.749 160.186 100.449 159.568 104.193 159.474 cv
108.061 159.378 111.911 159.82 115.695 160.6 cv
117.562 160.986 119.424 161.432 121.254 161.964 cv
122.386 162.293 123.493 162.705 124.626 163.034 cv
126.696 163.636 129.737 164.448 131.482 162.697 cv
131.576 162.603 131.479 162.43 131.415 162.357 cv
129.926 160.659 127.426 160.817 125.608 159.7 cv
125.329 159.529 125.103 159.843 125.386 160.017 cv
126.28 160.566 127.263 160.868 128.253 161.194 cv
129.129 161.483 130.088 161.79 130.776 162.43 cv
130.415 162.738 129.98 162.937 129.516 163.044 cv
128.26 163.334 126.897 163.07 125.668 162.769 cv
124.427 162.464 123.22 162.043 122.005 161.649 cv
118.629 160.552 115.076 159.803 111.561 159.324 cv
107.796 158.809 103.972 158.683 100.19 159.091 cv
96.5547 159.484 92.9785 160.329 89.5039 161.456 cv
85.9658 162.604 82.5225 164.018 79.1143 165.503 cv
77.4277 166.239 75.749 166.992 74.0684 167.741 cv
74.0674 167.741 li
74.5566 167.253 75.0732 166.793 75.584 166.329 cv
76.1699 165.796 76.7608 165.269 77.3203 164.708 cv
77.9336 164.093 78.4551 163.397 79.0098 162.731 cv
80.1309 161.382 81.3018 160.072 82.5429 158.833 cv
85.0459 156.334 87.8828 154.243 90.9815 152.54 cv
96.9326 149.269 103.599 147.546 110.295 146.655 cv
114.023 146.158 117.78 145.905 121.502 145.357 cv
123.363 145.084 125.162 144.646 126.986 144.198 cv
128.825 143.746 130.683 143.584 132.551 143.315 cv
136.157 142.796 139.408 141.059 142.896 140.084 cv
144.563 139.619 146.237 139.395 147.963 139.299 cv
149.31 139.224 150.68 139.211 152.006 139.491 cv
153.325 139.769 154.547 140.37 155.518 141.315 cv
156.633 142.402 157.453 143.827 158.062 145.249 cv
159.354 148.258 159.669 151.55 159.155 154.772 cv
159.186 154.921 li
158.375 155.241 157.663 155.813 157.087 156.473 cv
156.955 156.624 157.288 156.887 157.428 156.765 cv
157.98 156.282 158.605 155.837 159.298 155.579 cv
160.416 155.161 161.677 155.264 162.574 156.101 cv
163.739 157.186 164.091 158.901 164.146 160.425 cv
164.216 162.309 163.89 164.271 164.47 166.102 cv
164.996 167.759 166.037 169.219 167.097 170.576 cv
169.357 173.469 171.813 176.206 174.062 179.109 cv
176.41 182.136 178.502 185.338 180.024 188.864 cv
181.589 192.489 182.645 196.325 183.278 200.218 cv
183.562 201.958 183.757 203.708 183.906 205.464 cv
184.038 207.015 184.117 208.576 184.028 210.131 cv
183.849 213.252 182.86 216.743 179.72 218.05 cv
178.335 218.627 176.822 218.91 175.563 219.763 cv
175.057 220.107 174.594 220.555 174.493 221.185 cv
.239216 .572549 .447059 rgb
f
161.541 249.048 mo
160.129 245.158 159.24 241.105 158.298 237.083 cv
157.351 233.036 156.345 228.976 154.694 225.147 cv
153.876 223.247 152.894 221.415 151.706 219.717 cv
150.425 217.887 149.062 216.119 147.625 214.41 cv
144.865 211.13 141.861 208.069 138.822 205.05 cv
139.626 205.669 140.425 206.295 141.215 206.933 cv
144.493 209.576 147.649 212.387 150.508 215.484 cv
153.334 218.545 155.972 221.908 157.73 225.708 cv
159.505 229.543 160.362 233.725 160.813 237.908 cv
161.213 241.609 161.327 245.332 161.541 249.048 cv
.419608 .815686 .694118 rgb
f
61.333 285.83 mo
61.294 284.761 61.3047 283.69 61.3545 282.623 cv
61.418 281.262 61.5449 279.902 61.7822 278.56 cv
61.9961 277.356 62.2539 276.088 62.8935 275.03 cv
63.8008 273.531 65.3047 272.732 66.7911 271.909 cv
66.5157 272.626 66.2373 273.343 65.9658 274.063 cv
64.4785 278.005 63.0302 281.97 61.333 285.83 cv
f
103.139 235.325 mo
104.797 232.839 106.701 230.527 108.32 228.014 cv
109.116 226.779 109.835 225.492 110.412 224.138 cv
110.864 223.077 111.219 221.972 111.575 220.875 cv
111.987 219.608 112.37 218.33 112.719 217.042 cv
112.757 218.601 112.741 220.16 112.638 221.714 cv
112.483 224.026 112.199 226.43 111.431 228.627 cv
110.762 230.54 109.439 232 107.731 233.053 cv
106.276 233.95 104.686 234.602 103.139 235.325 cv
f
177.117 197.18 mo
175.388 195.124 173.739 193 172.047 190.914 cv
168.691 186.776 165.048 182.762 160.383 180.077 cv
159.017 179.29 157.58 178.623 156.178 177.903 cv
154.98 177.289 153.784 176.667 152.59 176.045 cv
153.202 176.218 153.816 176.385 154.435 176.541 cv
157.474 177.309 160.717 177.23 163.644 178.444 cv
166.227 179.515 168.487 181.415 170.318 183.497 cv
173.693 187.333 175.982 192.197 177.117 197.18 cv
f
130.647 149.547 mo
128.796 149.547 126.946 149.496 125.095 149.471 cv
126.64 149 128.181 148.513 129.718 148.016 cv
136.518 145.818 143.401 143.466 150.525 142.602 cv
147.041 144.704 143.929 147.761 139.871 148.733 cv
137.192 149.374 134.387 149.51 131.642 149.542 cv
131.31 149.545 130.978 149.547 130.647 149.547 cv
f
14.1354 299.835 mo
14.1336 299.835 14.1319 299.835 14.1302 299.835 cv
14.1319 299.835 14.1336 299.835 14.1354 299.835 cv
14.1354 299.835 li
14.1387 299.835 mo
14.2249 299.834 14.2972 299.789 14.3135 299.682 cv
14.2972 299.79 14.225 299.834 14.1387 299.835 cv
13.9691 299.79 mo
13.9674 299.789 13.9656 299.789 13.9638 299.788 cv
13.9656 299.789 13.9674 299.789 13.9691 299.79 cv
166.458 291.559 mo
166.454 291.559 166.45 291.559 166.447 291.559 cv
166.45 291.559 166.454 291.559 166.458 291.559 cv
166.458 291.559 li
166.458 291.559 mo
166.489 291.559 166.515 291.546 166.525 291.513 cv
166.515 291.546 166.489 291.559 166.458 291.559 cv
166.525 291.513 mo
166.526 291.511 166.527 291.509 166.527 291.506 cv
166.527 291.509 166.526 291.511 166.525 291.513 cv
166.308 291.438 mo
166.308 291.438 li
166.308 291.437 166.308 291.436 166.308 291.435 cv
166.308 291.436 166.308 291.437 166.308 291.438 cv
160.699 284.1 mo
160.729 283.998 160.817 283.964 160.911 283.963 cv
160.817 283.964 160.729 283.998 160.699 284.1 cv
160.918 283.963 mo
160.917 283.963 160.916 283.963 160.915 283.963 cv
160.915 283.963 li
160.916 283.963 160.917 283.963 160.918 283.963 cv
32.9646 224.685 mo
32.9639 224.685 32.9632 224.685 32.9626 224.684 cv
32.9632 224.685 32.9639 224.685 32.9646 224.685 cv
32.9646 224.685 li
32.9671 224.684 mo
33.0205 224.684 33.0644 224.655 33.08 224.584 cv
33.0644 224.655 33.0205 224.684 32.9671 224.684 cv
32.8431 224.647 mo
32.8384 224.645 32.8337 224.642 32.8291 224.639 cv
32.8337 224.642 32.8384 224.645 32.8431 224.647 cv
48.666 216.807 mo
48.666 216.807 li
49.1683 216.802 49.6703 216.773 50.1692 216.72 cv
49.6703 216.773 49.1684 216.802 48.666 216.807 cv
50.1953 216.717 mo
50.2274 216.714 50.2594 216.71 50.2915 216.706 cv
50.2594 216.71 50.2274 216.714 50.1953 216.717 cv
50.2917 216.706 mo
50.3107 216.704 50.3297 216.702 50.3486 216.7 cv
50.3297 216.702 50.3107 216.704 50.2917 216.706 cv
48.9219 216.156 mo
48.9203 216.156 48.9188 216.156 48.9171 216.156 cv
48.9188 216.156 48.9203 216.156 48.9219 216.156 cv
48.9219 216.156 li
48.9224 216.156 mo
49.1413 216.156 49.3614 216.151 49.582 216.142 cv
49.3612 216.151 49.1415 216.156 48.9224 216.156 cv
42.0297 214.79 mo
42.0068 214.781 41.9835 214.772 41.9606 214.764 cv
41.9835 214.772 42.0068 214.781 42.0297 214.79 cv
41.9271 214.751 mo
41.9196 214.749 41.9122 214.746 41.9047 214.743 cv
41.9122 214.746 41.9196 214.749 41.9271 214.751 cv
62.9165 212.813 mo
62.9159 212.813 62.9153 212.813 62.9147 212.813 cv
62.9153 212.813 62.9159 212.813 62.9165 212.813 cv
62.9165 212.813 li
62.9168 212.813 mo
62.9213 212.813 62.9257 212.813 62.9301 212.813 cv
62.9257 212.813 62.9213 212.813 62.9168 212.813 cv
62.9301 212.813 mo
62.9316 212.812 62.9331 212.812 62.9345 212.812 cv
62.9331 212.812 62.9316 212.812 62.9301 212.813 cv
62.738 212.484 mo
62.7388 212.483 62.7396 212.483 62.7404 212.482 cv
62.7396 212.483 62.7388 212.483 62.738 212.484 cv
62.7429 212.481 mo
62.7509 212.477 62.7598 212.473 62.7695 212.47 cv
64.8799 211.783 66.9902 211.117 69.0322 210.24 cv
71.1553 209.327 73.2139 208.279 75.2178 207.127 cv
79.1846 204.848 82.8819 202.181 86.624 199.56 cv
87.6846 198.817 88.7774 198.13 89.8642 197.429 cv
90.3301 197.129 90.7881 196.831 91.2685 196.583 cv
91.2685 196.583 li
90.7881 196.831 90.3301 197.129 89.8642 197.429 cv
88.7774 198.13 87.6846 198.817 86.624 199.56 cv
82.8819 202.181 79.1846 204.848 75.2178 207.127 cv
73.2139 208.279 71.1553 209.327 69.0322 210.24 cv
66.9902 211.117 64.8799 211.783 62.7695 212.47 cv
62.7598 212.473 62.7509 212.477 62.7429 212.481 cv
164.316 210.196 mo
164.314 210.196 164.313 210.196 164.312 210.196 cv
164.313 210.196 164.314 210.196 164.316 210.196 cv
164.316 210.196 li
164.318 210.196 mo
164.741 210.195 165.156 210.109 165.53 209.883 cv
165.156 210.109 164.741 210.195 164.318 210.196 cv
162.703 209.885 mo
162.693 209.882 162.684 209.879 162.675 209.875 cv
162.684 209.879 162.693 209.882 162.703 209.885 cv
163.899 209.613 mo
163.899 209.613 163.898 209.613 163.897 209.613 cv
163.898 209.613 163.899 209.613 163.899 209.613 cv
163.899 209.613 li
163.902 209.613 mo
164.229 209.613 164.548 209.555 164.831 209.403 cv
164.548 209.555 164.229 209.613 163.902 209.613 cv
164.836 209.4 mo
164.84 209.398 164.844 209.395 164.849 209.393 cv
164.849 209.393 li
164.844 209.395 164.84 209.398 164.836 209.4 cv
162.52 209.374 mo
162.511 209.371 162.501 209.368 162.491 209.366 cv
161.608 209.109 160.755 208.764 159.96 208.302 cv
159.959 208.301 159.957 208.301 159.956 208.3 cv
159.957 208.301 159.959 208.301 159.96 208.302 cv
160.755 208.764 161.608 209.109 162.491 209.366 cv
162.501 209.368 162.511 209.371 162.52 209.374 cv
159.851 208.445 mo
159.754 208.38 159.798 208.282 159.884 208.28 cv
159.798 208.282 159.754 208.38 159.851 208.445 cv
159.889 208.28 mo
159.888 208.28 159.887 208.28 159.886 208.28 cv
159.886 208.28 li
159.887 208.28 159.888 208.28 159.889 208.28 cv
89.0308 196.679 mo
89.0294 196.679 89.0279 196.679 89.0266 196.679 cv
89.0279 196.679 89.0294 196.679 89.0308 196.679 cv
89.0308 196.679 li
89.0314 196.679 mo
89.3446 196.679 89.6592 196.672 89.9745 196.659 cv
89.659 196.672 89.3448 196.679 89.0314 196.679 cv
90.017 196.657 mo
90.037 196.657 90.0571 196.656 90.0772 196.655 cv
90.0571 196.656 90.037 196.657 90.017 196.657 cv
88.4452 195.91 mo
88.445 195.91 88.445 195.91 88.4448 195.91 cv
88.445 195.91 88.445 195.91 88.4452 195.91 cv
88.4452 195.91 li
88.4513 195.91 mo
91.5008 195.909 94.572 195.458 97.5499 194.844 cv
94.5718 195.458 91.501 195.909 88.4513 195.91 cv
87.8066 195.903 mo
87.8066 195.903 li
87.7996 195.903 87.7925 195.903 87.7854 195.902 cv
87.7925 195.903 87.7996 195.903 87.8066 195.903 cv
87.8066 195.903 li
87.6245 195.898 mo
86.2206 195.855 84.8297 195.659 83.4403 195.452 cv
84.8297 195.659 86.2206 195.855 87.6245 195.898 cv
81.2619 195.888 mo
81.2329 195.884 81.2039 195.88 81.1749 195.876 cv
81.2039 195.88 81.2329 195.884 81.2619 195.888 cv
81.1664 195.874 mo
81.114 195.867 81.0618 195.86 81.0093 195.853 cv
81.0618 195.86 81.114 195.867 81.1664 195.874 cv
80.8754 195.835 mo
80.8427 195.83 80.8099 195.826 80.7772 195.821 cv
80.8099 195.826 80.8427 195.83 80.8754 195.835 cv
80.7371 195.816 mo
80.7365 195.816 80.7362 195.816 80.7356 195.816 cv
80.7362 195.816 80.7365 195.816 80.7371 195.816 cv
80.502 195.784 mo
80.4902 195.783 80.4785 195.781 80.4668 195.78 cv
80.4785 195.781 80.4902 195.783 80.502 195.784 cv
77.9742 194.896 mo
77.9745 194.896 77.9752 194.896 77.9756 194.896 cv
77.9752 194.896 77.9745 194.896 77.9742 194.896 cv
77.9887 194.896 mo
77.998 194.896 78.0073 194.896 78.0166 194.896 cv
78.0075 194.896 77.9978 194.896 77.9887 194.896 cv
78.0214 194.896 mo
78.0198 194.896 78.0182 194.896 78.0166 194.896 cv
78.0166 194.896 li
78.0182 194.896 78.0198 194.896 78.0214 194.896 cv
97.6049 194.833 mo
97.6287 194.828 97.6524 194.823 97.6762 194.818 cv
97.6524 194.823 97.6287 194.828 97.6049 194.833 cv
135.457 189.756 mo
135.444 189.752 135.432 189.749 135.42 189.746 cv
135.432 189.749 135.444 189.752 135.457 189.756 cv
122.009 189.744 mo
122.071 189.733 122.133 189.723 122.196 189.714 cv
122.133 189.723 122.071 189.733 122.009 189.744 cv
122.21 189.711 mo
123.856 189.45 125.516 189.289 127.184 189.288 cv
125.516 189.289 123.856 189.451 122.21 189.711 cv
127.832 189.296 mo
127.815 189.296 127.798 189.296 127.781 189.295 cv
127.798 189.296 127.815 189.296 127.832 189.296 cv
127.19 189.288 mo
127.19 189.288 127.189 189.288 127.189 189.288 cv
127.189 189.288 li
127.189 189.288 127.19 189.288 127.19 189.288 cv
126.245 188.511 mo
126.443 188.506 126.642 188.504 126.84 188.504 cv
126.642 188.504 126.443 188.506 126.245 188.511 cv
126.845 188.504 mo
126.844 188.504 126.842 188.504 126.841 188.504 cv
126.841 188.504 li
126.842 188.504 126.844 188.504 126.845 188.504 cv
40.4228 187.552 mo
40.7944 187.343 41.2165 187.266 41.6509 187.266 cv
41.2166 187.266 40.7944 187.343 40.4228 187.552 cv
41.6568 187.266 mo
41.656 187.266 41.6552 187.266 41.6543 187.266 cv
41.6543 187.266 li
41.6552 187.266 41.656 187.266 41.6568 187.266 cv
68.3235 170.075 mo
68.3232 170.075 68.323 170.075 68.3227 170.075 cv
68.323 170.075 68.3232 170.075 68.3235 170.075 cv
68.3235 170.075 li
68.3277 170.075 mo
69.6872 170.075 71.0208 169.839 72.3032 169.365 cv
71.0207 169.839 69.6873 170.075 68.3277 170.075 cv
67.69 170.058 mo
67.6777 170.057 67.6656 170.057 67.6533 170.056 cv
67.6656 170.057 67.6777 170.057 67.69 170.058 cv
67.6533 170.056 mo
67.6467 170.056 67.6401 170.055 67.6334 170.055 cv
67.6401 170.055 67.6467 170.056 67.6533 170.056 cv
67.5805 170.052 mo
67.565 170.051 67.5494 170.05 67.5339 170.049 cv
67.5494 170.05 67.565 170.051 67.5805 170.052 cv
67.5132 170.047 mo
67.0496 170.015 66.5841 169.953 66.1179 169.887 cv
66.5841 169.953 67.0496 170.015 67.5132 170.047 cv
62.8866 169.682 mo
63.139 169.654 63.3913 169.641 63.6443 169.641 cv
63.3914 169.641 63.1389 169.654 62.8866 169.682 cv
63.6505 169.641 mo
63.6487 169.641 63.647 169.641 63.6452 169.641 cv
63.6452 169.641 li
63.647 169.641 63.6487 169.641 63.6505 169.641 cv
72.33 169.355 mo
72.3312 169.354 72.3325 169.354 72.3337 169.354 cv
72.3325 169.354 72.3312 169.354 72.33 169.355 cv
72.3502 169.347 mo
72.3855 169.334 72.4208 169.321 72.4561 169.307 cv
72.4208 169.321 72.3855 169.334 72.3502 169.347 cv
74.0684 167.741 mo
74.0674 167.741 li
74.0674 167.741 li
74.0684 167.741 li
75.749 166.992 77.4277 166.239 79.1143 165.503 cv
82.5225 164.018 85.9658 162.604 89.5039 161.456 cv
92.9785 160.329 96.5547 159.484 100.19 159.091 cv
101.719 158.926 103.254 158.849 104.789 158.849 cv
103.254 158.849 101.718 158.926 100.19 159.091 cv
96.5547 159.484 92.9785 160.329 89.5039 161.456 cv
85.9658 162.604 82.5225 164.018 79.1143 165.503 cv
77.4277 166.239 75.749 166.992 74.0684 167.741 cv
128.529 163.756 mo
128.528 163.756 128.527 163.756 128.526 163.756 cv
128.527 163.756 128.528 163.756 128.529 163.756 cv
128.529 163.756 li
128.531 163.756 mo
129.628 163.756 130.67 163.494 131.456 162.723 cv
130.67 163.494 129.628 163.756 128.531 163.756 cv
128.344 163.17 mo
128.343 163.17 128.342 163.17 128.34 163.17 cv
128.342 163.17 128.343 163.17 128.344 163.17 cv
128.344 163.17 li
128.346 163.17 mo
128.741 163.17 129.133 163.133 129.516 163.044 cv
129.98 162.937 130.415 162.738 130.776 162.43 cv
130.776 162.43 li
130.415 162.738 129.98 162.937 129.516 163.044 cv
129.133 163.133 128.741 163.17 128.346 163.17 cv
124.782 163.079 mo
124.777 163.077 124.771 163.076 124.765 163.074 cv
124.771 163.076 124.777 163.077 124.782 163.079 cv
125.901 162.825 mo
125.889 162.822 125.877 162.819 125.864 162.816 cv
125.877 162.819 125.889 162.822 125.901 162.825 cv
125.668 162.769 mo
125.668 162.769 li
124.427 162.464 123.22 162.043 122.005 161.649 cv
118.629 160.552 115.076 159.803 111.561 159.324 cv
111.54 159.321 111.518 159.318 111.497 159.315 cv
111.518 159.318 111.54 159.321 111.561 159.324 cv
115.076 159.803 118.629 160.552 122.005 161.649 cv
123.22 162.043 124.427 162.464 125.668 162.769 cv
125.668 162.769 li
131.473 162.706 mo
131.476 162.703 131.479 162.7 131.482 162.697 cv
131.479 162.7 131.476 162.703 131.473 162.706 cv
131.521 162.597 mo
131.522 162.509 131.46 162.408 131.415 162.357 cv
129.926 160.659 127.426 160.817 125.608 159.7 cv
125.604 159.697 125.599 159.694 125.594 159.692 cv
125.599 159.694 125.604 159.697 125.608 159.7 cv
127.426 160.817 129.926 160.659 131.415 162.357 cv
131.46 162.408 131.522 162.509 131.521 162.597 cv
125.386 160.017 mo
125.382 160.015 125.379 160.013 125.376 160.011 cv
125.379 160.013 125.382 160.015 125.386 160.017 cv
125.373 160.009 mo
125.373 160.009 125.373 160.009 125.373 160.009 cv
125.373 160.009 125.373 160.009 125.373 160.009 cv
125.355 159.997 mo
125.171 159.858 125.267 159.652 125.447 159.65 cv
125.267 159.652 125.171 159.858 125.355 159.997 cv
125.45 159.65 mo
125.45 159.65 125.449 159.65 125.449 159.65 cv
125.449 159.65 li
125.449 159.65 125.45 159.65 125.45 159.65 cv
104.245 159.473 mo
104.277 159.472 104.309 159.471 104.341 159.471 cv
104.309 159.471 104.277 159.472 104.245 159.473 cv
104.359 159.47 mo
104.654 159.464 104.949 159.461 105.243 159.461 cv
104.949 159.461 104.654 159.464 104.359 159.47 cv
105.249 159.461 mo
105.247 159.461 105.246 159.461 105.244 159.461 cv
105.244 159.461 li
105.246 159.461 105.247 159.461 105.249 159.461 cv
104.795 158.849 mo
104.794 158.849 104.793 158.849 104.791 158.849 cv
104.791 158.849 li
104.793 158.849 104.794 158.849 104.795 158.849 cv
157.338 156.797 mo
157.336 156.797 157.334 156.797 157.332 156.796 cv
157.334 156.797 157.336 156.797 157.338 156.797 cv
157.338 156.797 li
157.339 156.797 mo
157.371 156.796 157.4 156.788 157.424 156.768 cv
157.4 156.788 157.371 156.796 157.339 156.797 cv
162.551 156.08 mo
162.549 156.078 162.548 156.076 162.546 156.075 cv
162.548 156.076 162.549 156.078 162.551 156.08 cv
159.298 155.579 mo
159.714 155.423 160.149 155.34 160.578 155.34 cv
160.149 155.34 159.714 155.423 159.298 155.579 cv
160.584 155.34 mo
160.583 155.34 160.582 155.34 160.581 155.34 cv
160.581 155.34 li
160.582 155.34 160.583 155.34 160.584 155.34 cv
152.006 139.491 mo
151.989 139.487 151.973 139.484 151.957 139.48 cv
151.973 139.484 151.989 139.487 152.006 139.491 cv
151.933 139.476 mo
151.929 139.475 151.926 139.474 151.923 139.474 cv
151.926 139.474 151.929 139.475 151.933 139.476 cv
147.963 139.299 mo
147.975 139.299 147.988 139.298 148.001 139.297 cv
147.988 139.298 147.975 139.299 147.963 139.299 cv
148.018 139.296 mo
148.028 139.296 148.037 139.295 148.046 139.295 cv
148.037 139.295 148.028 139.296 148.018 139.296 cv
148.093 139.292 mo
148.536 139.269 148.982 139.253 149.428 139.253 cv
148.982 139.253 148.536 139.269 148.093 139.292 cv
149.433 139.253 mo
149.432 139.253 149.431 139.253 149.43 139.253 cv
149.43 139.253 li
149.431 139.253 149.432 139.253 149.433 139.253 cv
.0352941 .231373 .156863 rgb
f
64.2959 330.944 mo
38.666 330.944 li
38.8447 329.873 39.084 328.813 39.3018 327.751 cv
39.6553 326.025 39.833 324.262 40.0498 322.514 cv
40.4044 319.649 40.6702 316.765 41.0321 313.897 cv
41.4323 312.411 41.919 310.951 42.5713 309.566 cv
42.8428 308.988 43.1504 308.423 43.5195 307.901 cv
43.8857 307.382 44.2891 306.842 44.8496 306.521 cv
45.1861 306.329 45.5309 306.252 45.8773 306.252 cv
46.665 306.252 47.4603 306.647 48.1806 306.966 cv
49.0284 307.342 49.8652 307.584 50.7617 307.808 cv
51.8027 308.069 52.8467 308.283 53.9131 308.407 cv
54.8991 308.522 55.8952 308.582 56.8915 308.582 cv
57.325 308.582 57.7588 308.571 58.1914 308.547 cv
56.5342 308.241 54.9404 307.679 53.4219 306.886 cv
53.1041 306.72 52.7905 306.547 52.4802 306.368 cv
52.7451 306.447 53.0104 306.522 53.2754 306.594 cv
55.1191 307.101 57.0107 307.442 58.916 307.609 cv
59.2428 307.637 59.5685 307.649 59.8939 307.649 cv
60.5474 307.649 61.1992 307.602 61.8545 307.548 cv
62.8174 307.469 63.7754 307.475 64.7373 307.425 cv
64.9531 307.414 64.8096 307.165 64.6777 307.134 cv
64.217 307.017 63.7347 306.981 63.2487 306.981 cv
62.6675 306.981 62.0811 307.033 61.5205 307.064 cv
61.0219 307.092 60.5277 307.11 60.0344 307.11 cv
59.4136 307.11 58.7942 307.081 58.1689 307.008 cv
56.0752 306.763 54.0029 306.304 51.9942 305.668 cv
51.5 305.511 51.003 305.345 50.5104 305.163 cv
49.4949 304.518 48.4862 303.861 47.4395 303.268 cv
46.9465 302.989 46.4459 302.726 45.9363 302.482 cv
45.7082 302.237 45.4952 301.974 45.2881 301.691 cv
44.9452 301.221 44.5769 300.757 44.055 300.49 cv
44.3739 299.599 44.7186 298.716 45.0908 297.842 cv
45.9209 295.896 46.874 294.021 47.5674 292.016 cv
48.2666 289.994 48.7959 287.917 49.2578 285.83 cv
50.1934 281.6 50.916 277.339 52.1386 273.176 cv
52.8896 270.622 53.673 268.076 54.4794 265.539 cv
55.2583 264.458 56.2893 263.645 57.7646 263.525 cv
57.8965 263.514 58.0285 263.509 58.1605 263.509 cv
58.5149 263.509 58.8693 263.545 59.221 263.603 cv
60.3413 264.008 61.4912 264.322 62.6387 264.64 cv
64.0342 265.026 65.4199 265.448 66.8154 265.832 cv
69.7002 266.629 72.7329 267.417 75.7468 267.417 cv
75.812 267.417 75.8772 267.416 75.9424 267.415 cv
76.1348 267.414 76.0215 267.159 75.8857 267.143 cv
74.1914 266.952 72.5088 266.686 70.8418 266.324 cv
68.0391 265.713 65.3057 264.846 62.5439 264.079 cv
61.3758 263.753 60.1199 263.437 58.9319 262.983 cv
58.2707 262.065 57.8116 261.022 57.6084 259.875 cv
57.403 258.717 57.417 257.542 57.4887 256.371 cv
59.982 248.991 62.6033 241.653 65.0391 234.254 cv
66.4443 229.987 67.7099 225.668 68.7119 221.288 cv
69.169 219.29 69.499 217.274 69.8105 215.249 cv
70.0707 213.565 70.3604 211.84 70.9329 210.225 cv
74.7256 208.478 78.3186 206.294 81.7618 203.941 cv
83.6953 202.619 85.5644 201.21 87.4756 199.857 cv
88.3945 199.207 89.3545 198.614 90.2666 197.956 cv
90.9688 197.45 91.6767 196.882 92.457 196.481 cv
94.9209 196.239 97.3759 195.802 99.7705 195.209 cv
101.335 194.823 102.88 194.366 104.436 193.945 cv
105.997 193.522 107.577 193.2 109.152 192.83 cv
112.233 192.107 115.269 191.2 118.352 190.479 cv
119.133 190.296 119.918 190.125 120.708 189.973 cv
121.241 190.118 121.77 190.274 122.293 190.454 cv
124.938 191.362 127.42 192.606 129.854 193.974 cv
132.17 195.275 134.496 196.57 136.76 197.962 cv
141.139 200.659 145.307 203.713 149.116 207.171 cv
152.93 210.633 156.39 214.488 159.35 218.705 cv
162.488 223.176 164.722 228.132 166.123 233.408 cv
166.493 234.803 166.671 236.243 167.157 237.608 cv
167.347 238.14 167.694 238.969 168.201 239.48 cv
168.633 241.177 168.934 242.92 169.172 244.644 cv
169.5 247.023 169.662 249.425 169.787 251.823 cv
170.285 261.328 171.071 270.823 171.178 280.344 cv
171.185 280.948 171.188 281.552 171.188 282.155 cv
171.188 286.536 171.012 290.902 170.729 295.275 cv
170.884 292.872 170.992 290.469 171.069 288.066 cv
171.069 288.066 li
171.069 288.066 li
169.643 283.779 166.355 280.363 163.906 276.635 cv
163.776 276.438 163.652 276.237 163.526 276.037 cv
162.183 274.207 160.938 272.33 159.85 270.311 cv
159.44 269.552 159.051 268.783 158.671 268.008 cv
158.632 268.026 158.59 268.036 158.548 268.036 cv
158.47 268.036 158.392 268.002 158.337 267.919 cv
156.04 264.456 154.727 260.363 152.011 257.174 cv
150.567 255.481 148.832 254.022 147.093 252.645 cv
145.307 251.232 143.487 249.834 141.628 248.519 cv
138.114 246.032 134.498 243.584 130.504 241.929 cv
128.54 241.116 126.477 240.497 124.363 240.225 cv
123.592 240.126 122.825 240.081 122.059 240.081 cv
120.616 240.081 119.18 240.241 117.741 240.5 cv
115.441 240.914 113.192 241.529 110.973 242.243 cv
108.363 243.381 105.825 244.681 103.284 245.962 cv
96.608 249.326 90.1358 253.254 84.6492 258.368 cv
84.6444 258.372 84.6398 258.376 84.635 258.381 cv
84.6283 258.387 84.6209 258.394 84.6142 258.4 cv
84.6077 258.406 84.6011 258.412 84.5946 258.418 cv
84.59 258.423 84.585 258.427 84.5804 258.432 cv
84.5723 258.439 84.5641 258.447 84.5561 258.454 cv
84.5529 258.457 84.5503 258.46 84.5471 258.463 cv
84.5375 258.472 84.5279 258.481 84.5183 258.49 cv
84.5176 258.491 84.5163 258.492 84.5156 258.492 cv
84.2906 258.704 84.0667 258.917 83.8451 259.132 cv
83.8444 259.133 83.8436 259.134 83.8429 259.135 cv
83.8326 259.145 83.8223 259.155 83.8121 259.164 cv
83.8104 259.166 83.8088 259.168 83.8071 259.169 cv
83.7976 259.179 83.7881 259.188 83.7787 259.197 cv
83.7759 259.2 83.7734 259.202 83.7706 259.205 cv
83.7621 259.213 83.7533 259.222 83.7448 259.23 cv
83.7334 259.241 83.7224 259.252 83.7109 259.263 cv
79.7207 263.166 76.2246 267.562 73.3261 272.328 cv
71.5634 277.21 69.085 281.798 67.3017 286.672 cv
66.3809 289.19 65.6894 291.765 65.3487 294.426 cv
64.9678 297.392 64.8526 300.383 64.7715 303.37 cv
64.7617 303.742 64.752 304.115 64.7422 304.487 cv
64.7422 304.487 li
64.7422 304.487 li
64.7422 304.487 li
64.7422 304.487 li
64.8936 306.396 65.0947 308.303 65.2608 310.207 cv
65.4977 312.931 65.6919 315.692 65.6914 318.444 cv
65.6912 319.911 65.6357 321.375 65.5019 322.83 cv
65.3447 324.541 65.0566 326.244 64.8067 327.943 cv
64.6592 328.947 64.4834 329.947 64.2959 330.944 cv
59.2165 265.373 mo
58.9665 265.373 58.7138 265.407 58.461 265.482 cv
57.3916 265.8 56.6211 266.718 56.0605 267.638 cv
54.6465 269.958 54.0381 272.764 53.4873 275.394 cv
53.0019 277.715 52.4268 279.989 51.6972 282.248 cv
50.9473 284.57 50.1123 286.864 49.3642 289.186 cv
48.669 291.344 47.9599 293.569 47.6758 295.826 cv
47.5136 297.12 47.5273 298.547 48.2227 299.699 cv
48.8457 300.733 49.9209 301.338 51.0293 301.734 cv
52.585 302.29 54.2871 302.563 55.9199 302.779 cv
56.3996 302.842 56.9116 302.896 57.4229 302.896 cv
58.2168 302.896 59.0087 302.767 59.6729 302.344 cv
60.6328 301.734 61.0811 300.634 61.3779 299.583 cv
61.9278 297.639 62.1338 295.608 62.4512 293.619 cv
62.8437 291.162 63.2793 288.709 63.8594 286.289 cv
64.1494 285.078 64.4766 283.874 64.8526 282.686 cv
65.1631 281.704 65.4697 280.693 65.9356 279.771 cv
66.6699 278.316 67.5576 276.944 68.2881 275.487 cv
68.9775 274.113 69.711 272.531 69.6308 270.955 cv
69.5986 270.331 69.417 269.724 69.0205 269.235 cv
68.6319 268.755 68.0918 268.408 67.5459 268.133 cv
66.1484 267.43 64.584 267.074 63.0625 266.756 cv
62.6836 266.677 62.3017 266.607 61.9189 266.537 cv
61.7734 266.414 li
61.0406 265.844 60.147 265.373 59.2165 265.373 cv
125.775 192.943 mo
125.62 192.943 125.466 192.961 125.315 193 cv
124.147 193.31 124.327 194.897 124.445 195.805 cv
124.606 197.04 124.9 198.259 125.105 199.486 cv
125.511 201.911 125.718 204.364 125.841 206.817 cv
126.084 211.688 125.987 216.573 126.349 221.438 cv
126.524 223.797 126.81 226.154 127.299 228.471 cv
127.691 230.333 128.228 232.127 129.179 233.788 cv
130.839 236.688 133.453 238.816 136.219 240.612 cv
139.243 242.576 142.436 244.261 145.342 246.409 cv
148.808 248.969 151.79 252.114 154.34 255.579 cv
155.294 256.876 156.199 258.197 157 259.593 cv
157.828 261.036 158.613 262.503 159.46 263.935 cv
160.3 265.356 161.189 266.762 162.257 268.025 cv
163.094 269.014 164.096 269.989 165.353 270.403 cv
165.377 270.411 165.401 270.414 165.424 270.414 cv
165.537 270.414 165.637 270.327 165.674 270.22 cv
165.853 269.697 165.986 269.161 166.085 268.617 cv
166.543 266.1 166.409 263.492 166.209 260.956 cv
166.004 258.335 165.731 255.717 165.477 253.102 cv
164.858 246.762 164.096 240.414 162.658 234.2 cv
162.009 231.395 161.257 228.615 160.151 225.952 cv
159.09 223.392 157.741 220.956 156.068 218.744 cv
154.237 216.321 152.049 214.159 149.85 212.073 cv
147.59 209.929 145.239 207.883 142.875 205.856 cv
141.727 204.872 140.566 203.901 139.445 202.886 cv
138.33 201.878 137.217 200.868 136.07 199.894 cv
134.713 198.741 133.303 197.629 131.805 196.661 cv
130.634 195.601 129.4 194.608 128.061 193.805 cv
127.419 193.421 126.579 192.943 125.775 192.943 cv
112.234 193.892 mo
108.459 193.892 104.662 194.966 101.169 196.304 cv
97.2568 197.803 93.5078 199.765 89.9424 201.958 cv
86.5527 204.042 83.0947 206.019 79.7959 208.248 cv
78.1777 209.34 76.5976 210.494 75.0996 211.748 cv
73.6738 212.942 72.2256 214.203 71.2266 215.79 cv
69.3106 218.832 68.9815 222.515 68.0801 225.917 cv
66.9394 230.227 65.6416 234.497 64.3614 238.765 cv
63.1309 242.865 61.9101 246.966 60.7051 251.074 cv
59.9365 253.694 59.1377 256.89 61.2071 259.138 cv
62.2725 260.296 63.8213 260.918 65.2402 261.526 cv
66.7305 262.164 68.2656 262.714 69.8516 263.059 cv
70.8185 263.269 71.8127 263.407 72.805 263.407 cv
73.3579 263.407 73.9105 263.364 74.457 263.267 cv
75.1748 263.14 75.876 262.908 76.5185 262.56 cv
77.2266 262.177 77.7969 261.642 78.3633 261.078 cv
81.1005 258.348 83.4394 255.263 85.9326 252.318 cv
87.1679 250.858 88.4443 249.431 89.8232 248.106 cv
91.0761 246.901 92.4072 245.728 93.8936 244.818 cv
96.1377 243.443 98.6563 242.582 101.132 241.728 cv
103.62 240.871 106.149 240.043 108.471 238.783 cv
110.628 237.61 112.579 235.993 113.702 233.769 cv
114.406 232.376 114.687 230.875 114.941 229.348 cv
115.285 227.286 115.533 225.207 115.707 223.123 cv
116.066 218.823 116.117 214.502 116.032 210.191 cv
115.991 208.087 115.916 205.985 115.826 203.883 cv
116.01 202.123 116.119 200.35 116.046 198.587 cv
116.003 197.544 115.916 196.438 115.515 195.462 cv
115.366 195.105 115.169 194.749 114.863 194.504 cv
114.26 194.021 113.436 193.915 112.687 193.897 cv
112.536 193.893 112.386 193.892 112.234 193.892 cv
38.0049 330.944 mo
37.7832 330.944 li
37.876 330.007 37.9863 329.073 38.1211 328.141 cv
38.4867 325.6 39.0236 323.08 39.5562 320.565 cv
39.3556 322.498 39.1382 324.43 38.8653 326.355 cv
38.6962 327.551 38.4072 328.731 38.1846 329.917 cv
38.1201 330.258 38.0586 330.601 38.0049 330.944 cv
36.8027 330.944 mo
22.126 330.944 li
22.3808 328.787 22.7285 326.64 23.0976 324.501 cv
23.6641 321.222 24.3448 317.941 24.7051 314.631 cv
24.8034 313.728 24.867 312.822 24.9173 311.915 cv
25.1055 310.572 25.2853 309.228 25.4561 307.882 cv
25.7265 305.747 25.9735 303.609 26.194 301.467 cv
26.4788 300.713 26.8895 300.02 27.6094 299.583 cv
28.2681 299.185 29.0362 299.071 29.8038 299.071 cv
29.9852 299.071 30.1666 299.077 30.3465 299.087 cv
31.7113 299.549 33.0894 299.955 34.499 300.28 cv
36.0554 300.639 37.6423 300.905 39.2404 300.905 cv
39.4933 300.905 39.7466 300.898 40 300.884 cv
40.1402 300.876 40.2804 300.868 40.4206 300.858 cv
40.6619 300.907 40.9009 300.963 41.1367 301.032 cv
41.2558 301.067 41.3154 301.167 41.3272 301.284 cv
41.5508 303.422 41.0469 305.572 40.541 307.636 cv
40.0068 309.812 39.5136 311.999 39.124 314.207 cv
38.2852 318.946 37.8886 323.749 37.1934 328.51 cv
37.0752 329.323 36.9433 330.134 36.8027 330.944 cv
20.0781 330.944 mo
10.6309 330.944 li
10.6953 328.666 10.8662 326.4 11.1514 324.136 cv
11.7158 319.645 12.5742 315.197 13.0459 310.693 cv
13.2871 308.396 13.5234 306.099 13.7607 303.801 cv
13.8975 302.472 13.8984 301.126 13.9638 299.788 cv
13.9638 299.788 li
13.9656 299.789 13.9674 299.789 13.9691 299.79 cv
14.0213 299.818 14.078 299.834 14.1302 299.835 cv
14.1319 299.835 14.1336 299.835 14.1354 299.835 cv
14.1354 299.835 li
14.1354 299.835 li
14.1365 299.835 14.1376 299.835 14.1387 299.835 cv
14.225 299.834 14.2972 299.79 14.3135 299.682 cv
14.3148 299.673 14.3158 299.664 14.3164 299.654 cv
14.4218 297.852 14.5773 296.065 14.8178 294.286 cv
15.9737 295.314 17.4141 295.977 18.876 296.452 cv
19.2283 296.566 19.5844 296.67 19.9433 296.764 cv
19.8259 296.791 19.708 296.816 19.5898 296.838 cv
20.5996 297.008 21.6123 297.235 22.5469 297.649 cv
23.6153 298.123 24.3564 298.989 24.5752 300.151 cv
24.8311 301.511 24.5371 302.928 24.2598 304.262 cv
23.9356 305.816 23.7216 307.375 23.4864 308.945 cv
23.1992 310.853 22.8789 312.757 22.5517 314.659 cv
21.8984 318.453 21.2129 322.242 20.6728 326.054 cv
20.4423 327.679 20.2393 329.309 20.0781 330.944 cv
16.7047 318.373 mo
16.4778 318.373 16.2554 318.41 16.0537 318.49 cv
15.3955 318.749 14.9805 319.365 14.7227 319.997 cv
14.2051 321.262 14.1592 322.907 14.7285 324.165 cv
14.9609 324.676 15.3281 325.143 15.8448 325.384 cv
16.0603 326.024 16.6678 326.402 17.2959 326.402 cv
17.5073 326.402 17.7209 326.359 17.9228 326.269 cv
18.6963 325.924 19.2861 325.191 19.7353 324.498 cv
20.1895 323.799 20.5664 323.02 20.6475 322.182 cv
20.7461 321.154 20.46 320.103 19.7061 319.371 cv
19.1607 318.84 18.3554 318.444 17.5701 318.444 cv
17.4835 318.444 17.3972 318.448 17.3115 318.458 cv
17.1134 318.403 16.9073 318.373 16.7047 318.373 cv
44.8849 302.013 mo
44.4902 301.85 44.0901 301.701 43.6839 301.565 cv
43.7454 301.38 43.8079 301.196 43.8715 301.012 cv
44.1066 301.129 44.3221 301.3 44.5244 301.55 cv
44.6486 301.704 44.7671 301.859 44.8849 302.013 cv
37.0292 300.207 mo
35.8643 300.056 34.7076 299.789 33.584 299.503 cv
33.4454 299.468 33.3074 299.432 33.1697 299.395 cv
33.2986 299.408 33.4276 299.42 33.5567 299.43 cv
32.0586 298.841 30.5595 298.188 29.4746 296.979 cv
28.6787 296.09 28.1182 294.97 27.7012 293.861 cv
27.4093 293.085 27.1998 292.284 27.0336 291.473 cv
27.2132 288.981 27.4075 286.49 27.7207 284.01 cv
27.9498 282.197 28.2561 280.404 28.6515 278.633 cv
28.8087 278.03 28.9531 277.424 29.0905 276.815 cv
29.4632 275.385 29.8975 273.968 30.3994 272.566 cv
31.7149 268.889 33.3389 265.333 34.7441 261.691 cv
35.3222 260.194 35.873 258.684 36.414 257.17 cv
36.4521 257.184 li
36.8095 257.338 37.0703 257.665 37.3535 257.919 cv
37.7627 258.29 38.207 258.62 38.6748 258.913 cv
40.1219 259.816 41.7371 260.378 43.3825 260.813 cv
42.8747 262.914 42.4537 265.036 42.1836 267.167 cv
41.9521 268.992 41.9424 270.772 42.1006 272.601 cv
42.2031 273.779 42.2862 275.009 42.666 276.139 cv
42.5792 276.078 42.4775 276.036 42.3909 276.036 cv
42.2991 276.036 42.2243 276.083 42.2021 276.202 cv
42.0928 276.786 42.1895 277.457 42.3105 278.031 cv
42.4267 278.582 42.6397 279.164 43.0723 279.543 cv
43.0547 279.59 li
43.0078 279.916 43.2246 280.257 43.4385 280.521 cv
43.2803 280.875 43.1338 281.224 43.001 281.597 cv
42.788 282.196 42.5762 282.793 42.3808 283.398 cv
42.0322 284.477 41.6797 285.605 41.6455 286.747 cv
41.623 287.521 41.8692 288.417 42.7598 288.54 cv
42.8414 288.552 42.9194 288.557 42.9938 288.557 cv
44.2675 288.557 44.5076 286.963 44.7207 285.964 cv
44.8946 285.148 45.1826 284.361 45.3926 283.553 cv
45.543 282.977 45.6826 282.353 45.6611 281.746 cv
45.7808 281.76 45.9011 281.767 46.0211 281.767 cv
46.2244 281.767 46.4269 281.746 46.624 281.698 cv
47.2851 281.538 47.9092 281.014 48.0644 280.333 cv
48.2343 279.586 47.9668 278.749 47.6621 278.074 cv
47.5049 277.724 47.3233 277.385 47.1064 277.068 cv
47.0489 276.983 46.9541 276.82 46.8427 276.701 cv
46.9219 276.416 46.9834 276.125 47.0283 275.82 cv
47.166 274.888 47.2431 273.776 46.7978 272.911 cv
46.5292 272.387 45.9769 272.025 45.4219 272.025 cv
45.2969 272.025 45.1718 272.044 45.0498 272.082 cv
45.0488 272.014 li
45.0293 269.117 45.7852 266.268 46.3203 263.439 cv
46.4376 262.818 46.5558 262.196 46.6779 261.573 cv
48.0187 261.855 49.3667 262.1 50.7324 262.23 cv
51.0422 262.26 51.3654 262.287 51.6953 262.306 cv
52.1885 262.561 52.5945 262.96 52.8487 263.537 cv
53.27 264.491 53.287 265.585 53.2691 266.625 cv
52.4628 269.095 51.675 271.575 50.9883 274.078 cv
51.0535 273.291 51.103 272.502 51.1367 271.712 cv
49.5859 275.568 48.8603 279.741 47.8594 283.753 cv
46.7676 288.126 45.4131 292.716 42.3965 296.185 cv
40.8584 297.953 38.9112 299.27 36.7324 300.099 cv
36.8305 300.138 36.9296 300.173 37.0292 300.207 cv
20.9624 296.446 mo
20.2571 296.304 19.5603 296.121 18.8808 295.898 cv
17.4971 295.443 16.1035 294.809 15.042 293.79 cv
14.9984 293.748 14.9499 293.718 14.9003 293.699 cv
15.0331 292.791 15.1891 291.884 15.373 290.978 cv
15.9414 288.183 16.6993 285.431 17.5108 282.698 cv
18.2344 280.26 18.9541 277.819 19.835 275.433 cv
20.5179 273.58 21.1864 271.737 21.7687 269.857 cv
22.021 269.233 22.2741 268.609 22.5244 267.984 cv
22.9444 266.937 23.3594 265.888 23.7578 264.833 cv
24.04 264.089 24.3477 263.347 24.7354 262.651 cv
25.2148 261.79 25.8702 260.984 26.8633 260.731 cv
27.1805 260.65 27.5069 260.618 27.837 260.618 cv
28.6439 260.618 29.4717 260.813 30.2334 260.977 cv
30.6397 261.065 31.045 261.159 31.4512 261.252 cv
31.6113 261.289 31.6933 261.497 31.6064 261.635 cv
31.29 262.138 31.0176 262.664 30.7745 263.204 cv
30.7927 267.548 29.059 271.724 28.5032 275.995 cv
27.5475 279.478 27.0357 283.064 26.6943 286.657 cv
26.6385 287.245 26.5864 287.833 26.5368 288.421 cv
26.4388 287.76 26.3358 287.1 26.207 286.445 cv
25.7842 288.586 25.3731 290.765 24.5039 292.764 cv
24.1016 293.687 23.5664 294.57 22.8301 295.265 cv
22.2869 295.778 21.65 296.17 20.9624 296.446 cv
17.0791 284.186 mo
16.4492 286.375 15.8691 288.581 15.4101 290.812 cv
15.4668 290.722 15.5195 290.63 15.5694 290.537 cv
16.0635 289.61 16.3144 288.558 16.5234 287.537 cv
16.75 286.427 16.9072 285.305 17.0791 284.186 cv
30.1885 264.701 mo
29.9531 265.398 29.7568 266.109 29.5869 266.823 cv
29.1406 268.701 28.8682 270.615 28.6084 272.525 cv
28.582 272.714 28.5566 272.904 28.5303 273.093 cv
29.1445 270.306 29.9649 267.537 30.1885 264.701 cv
30.7674 269.438 mo
31.1402 268.088 31.5594 266.747 31.9668 265.409 cv
32.4599 263.786 32.9658 262.079 33.8076 260.597 cv
34.1736 259.952 34.6028 259.345 35.0275 258.735 cv
34.4042 260.442 33.7598 262.142 33.0723 263.825 cv
32.307 265.696 31.5139 267.558 30.7674 269.438 cv
22.1688 268.508 mo
22.2005 268.396 22.2318 268.284 22.2627 268.171 cv
23.294 264.424 24.25 260.65 25.1537 256.866 cv
25.1537 256.866 li
24.25 260.65 23.294 264.424 22.2627 268.171 cv
22.2319 268.284 22.2006 268.396 22.1688 268.508 cv
51.2876 261.711 mo
50.6447 261.674 50.0033 261.6 49.3672 261.509 cv
48.5024 261.385 47.6396 261.229 46.7808 261.053 cv
46.8932 260.491 47.0097 259.928 47.1324 259.367 cv
47.4938 259.406 47.8557 259.437 48.2168 259.461 cv
48.7447 259.497 49.2875 259.531 49.8293 259.531 cv
50.4252 259.531 51.02 259.49 51.5918 259.365 cv
52.5615 259.152 53.212 258.536 53.6816 257.682 cv
54.0312 257.044 54.3056 256.362 54.6006 255.698 cv
54.9932 254.814 55.3692 253.922 55.7295 253.025 cv
57.8134 247.849 59.4082 242.49 60.7158 237.065 cv
61.0029 236.244 61.2851 235.42 61.5606 234.595 cv
62.0869 233.018 62.5947 231.442 63.1601 229.878 cv
63.6904 228.415 64.209 226.918 64.331 225.356 cv
64.3431 225.197 64.1962 225.098 64.0569 225.098 cv
64.038 225.098 64.0192 225.1 64.001 225.104 cv
63.3066 225.246 62.6289 225.452 61.9678 225.706 cv
59.7728 226.548 57.7511 227.819 55.8842 229.264 cv
56.1741 227.393 56.4175 225.514 56.6214 223.63 cv
56.7613 223.543 56.9007 223.456 57.04 223.368 cv
61.0937 220.805 64.8408 217.882 68.2119 214.467 cv
68.0889 214.362 li
66.1943 216.155 64.1025 217.748 61.9815 219.261 cv
60.2693 220.484 58.5105 221.643 56.7146 222.742 cv
56.9555 220.373 57.1356 217.998 57.2685 215.621 cv
57.3649 213.905 57.4255 212.189 57.4644 210.474 cv
57.6607 210.317 57.8491 210.151 58.0283 209.974 cv
58.1895 209.814 58.0674 209.53 57.8438 209.529 cv
57.7236 209.528 57.6037 209.526 57.4838 209.522 cv
57.4987 208.704 57.5092 207.888 57.5169 207.071 cv
58.6793 207.358 59.8623 207.482 61.0512 207.482 cv
64.2152 207.482 67.4189 206.602 70.3662 205.572 cv
72.545 204.81 74.6944 203.872 76.6221 202.591 cv
78.4404 201.384 80.1152 199.822 80.9248 197.751 cv
80.9893 197.587 80.8271 197.426 80.6738 197.422 cv
78.2793 197.348 75.8837 197.33 73.4893 197.28 cv
69.3632 197.196 65.2139 197.023 61.1523 196.236 cv
59.9493 196.002 58.7621 195.711 57.5956 195.359 cv
57.6529 192.101 57.7569 188.76 58.419 185.564 cv
58.7266 184.079 59.2119 182.633 59.7939 181.234 cv
59.9355 180.893 60.083 180.555 60.2314 180.217 cv
60.432 180.303 60.6462 180.341 60.8645 180.341 cv
61.6197 180.341 62.4256 179.885 62.9014 179.362 cv
63.6358 178.554 63.7578 177.439 63.4551 176.421 cv
63.1719 175.472 62.5791 174.687 61.7979 174.089 cv
61.2869 173.699 60.6017 173.329 59.9315 173.329 cv
59.6999 173.329 59.4702 173.374 59.25 173.476 cv
58.4375 173.855 58.2403 174.853 58.1777 175.68 cv
58.084 175.759 57.9951 175.842 57.9121 175.929 cv
57.0537 176.833 56.5723 178.078 56.1953 179.246 cv
55.6914 180.805 55.3096 182.413 54.9619 184.013 cv
54.256 187.268 53.837 190.574 53.6458 193.896 cv
52.8226 193.531 52.0139 193.131 51.2217 192.696 cv
50.5967 192.184 49.9521 191.691 49.2646 191.267 cv
48.6621 190.894 47.9942 190.536 47.2861 190.423 cv
47.1623 190.404 47.0377 190.393 46.9142 190.393 cv
46.4741 190.393 46.0495 190.528 45.7314 190.865 cv
45.2393 191.386 45.0986 192.184 45.1094 192.876 cv
45.1387 194.809 46.1171 196.717 47.0674 198.349 cv
47.9638 199.887 49 201.407 50.2246 202.706 cv
51.2125 203.755 52.3767 204.691 53.6388 205.446 cv
53.6677 206.414 53.6976 207.382 53.7236 208.35 cv
53.7284 208.527 53.7329 208.705 53.7372 208.882 cv
53.5336 208.823 53.3308 208.762 53.1289 208.698 cv
52.9893 208.608 52.8535 208.514 52.7178 208.419 cv
50.4482 206.827 48.2812 205.091 46.0078 203.501 cv
44.8311 202.679 43.6358 201.86 42.3682 201.184 cv
41.9394 200.955 41.4941 200.733 41.0283 200.592 cv
40.8531 200.539 40.6454 200.487 40.4454 200.487 cv
40.3131 200.487 40.1842 200.51 40.0703 200.571 cv
39.5957 200.826 39.4971 201.485 39.4629 201.964 cv
39.4092 202.707 39.5078 203.462 39.6211 204.195 cv
39.8252 205.508 40.1006 206.843 40.5068 208.11 cv
40.9922 209.624 41.5625 211.263 42.7246 212.402 cv
43.7328 213.39 45.0722 213.745 46.4356 213.745 cv
46.6834 213.745 46.9321 213.733 47.1797 213.711 cv
49.1269 213.54 51.0859 213.158 52.958 212.598 cv
53.2326 212.516 53.5094 212.429 53.7863 212.336 cv
53.7893 213.404 53.7797 214.471 53.7537 215.537 cv
52.3931 215.889 50.9752 216.084 49.582 216.142 cv
49.7695 216.134 49.959 216.117 50.1475 216.103 cv
50.2939 216.045 li
51.0342 215.775 51.8057 215.556 52.5244 215.229 cv
47.1846 215.133 41.5469 214.225 37.9551 209.88 cv
37.3867 209.192 36.8916 208.454 36.456 207.681 cv
36.3641 208.256 36.2713 208.831 36.188 209.408 cv
36.4201 207.798 36.6907 206.193 36.9756 204.591 cv
37.5576 201.327 38.2011 198.071 38.6162 194.78 cv
38.7949 193.369 38.9238 191.952 39.086 190.54 cv
39.208 189.484 39.4034 188.128 40.4228 187.552 cv
40.4228 187.552 li
40.7944 187.343 41.2166 187.266 41.6509 187.266 cv
41.6521 187.266 41.6532 187.266 41.6543 187.266 cv
41.6552 187.266 41.656 187.266 41.6568 187.266 cv
41.9751 187.266 42.2999 187.307 42.6162 187.366 cv
42.6123 187.373 li
42.6123 187.373 li
42.961 187.378 43.3135 187.434 43.6425 187.501 cv
44.1739 187.61 44.6894 187.735 45.2324 187.768 cv
45.3399 187.775 45.4482 187.778 45.5557 187.78 cv
45.5557 187.78 li
45.5557 187.78 li
44.7539 187.49 43.9697 187.148 43.1504 186.909 cv
43.3204 186.616 43.4628 186.307 43.5909 185.98 cv
44.1563 184.523 44.3271 182.928 45.0049 181.509 cv
45.6094 180.246 46.6045 179.268 47.9267 178.783 cv
49.3047 178.277 50.7871 178.256 52.2246 178.046 cv
53.6728 177.835 55.0703 177.395 56.1992 176.429 cv
57.4277 175.378 58.1748 173.95 59.0625 172.629 cv
59.9942 171.244 61.1084 169.888 62.8711 169.684 cv
62.8762 169.683 62.8814 169.683 62.8866 169.682 cv
63.1389 169.654 63.3914 169.641 63.6443 169.641 cv
63.6446 169.641 63.645 169.641 63.6452 169.641 cv
63.647 169.641 63.6487 169.641 63.6505 169.641 cv
64.472 169.642 65.2964 169.771 66.1179 169.887 cv
66.5841 169.953 67.0496 170.015 67.5132 170.047 cv
67.5202 170.048 67.527 170.048 67.5339 170.049 cv
67.5494 170.05 67.565 170.051 67.5805 170.052 cv
67.5981 170.053 67.6158 170.054 67.6334 170.055 cv
67.6401 170.055 67.6467 170.056 67.6533 170.056 cv
67.6533 170.056 li
67.6533 170.056 li
67.6656 170.057 67.6777 170.057 67.69 170.058 cv
67.9015 170.069 68.1124 170.075 68.3227 170.075 cv
68.323 170.075 68.3232 170.075 68.3235 170.075 cv
68.3235 170.075 li
68.3235 170.075 li
68.3249 170.075 68.3263 170.075 68.3277 170.075 cv
69.6873 170.075 71.0207 169.839 72.3032 169.365 cv
72.3122 169.362 72.321 169.358 72.33 169.355 cv
72.3312 169.354 72.3325 169.354 72.3337 169.354 cv
72.3392 169.351 72.3447 169.349 72.3502 169.347 cv
72.3855 169.334 72.4208 169.321 72.4561 169.307 cv
72.4561 169.307 li
74.1855 168.639 75.8623 167.808 77.5576 167.056 cv
79.2442 166.307 80.9355 165.568 82.6406 164.86 cv
86.0684 163.437 89.5556 162.147 93.1397 161.17 cv
96.749 160.186 100.449 159.568 104.193 159.474 cv
104.211 159.474 104.228 159.473 104.245 159.473 cv
104.277 159.472 104.309 159.471 104.341 159.471 cv
104.347 159.471 104.353 159.47 104.359 159.47 cv
104.654 159.464 104.949 159.461 105.243 159.461 cv
105.244 159.461 105.244 159.461 105.244 159.461 cv
105.246 159.461 105.247 159.461 105.249 159.461 cv
108.761 159.462 112.256 159.891 115.695 160.6 cv
117.562 160.986 119.424 161.432 121.254 161.964 cv
122.386 162.293 123.493 162.705 124.626 163.034 cv
124.672 163.047 124.718 163.061 124.765 163.074 cv
124.771 163.076 124.777 163.077 124.782 163.079 cv
125.888 163.398 127.244 163.756 128.526 163.756 cv
128.527 163.756 128.528 163.756 128.529 163.756 cv
128.529 163.756 li
128.529 163.756 li
128.53 163.756 128.531 163.756 128.531 163.756 cv
129.628 163.756 130.67 163.494 131.456 162.723 cv
131.462 162.717 131.467 162.712 131.473 162.706 cv
131.476 162.703 131.479 162.7 131.482 162.697 cv
131.482 162.697 li
131.51 162.669 131.521 162.634 131.521 162.597 cv
131.522 162.509 131.46 162.408 131.415 162.357 cv
129.926 160.659 127.426 160.817 125.608 159.7 cv
125.604 159.697 125.599 159.694 125.594 159.692 cv
125.543 159.663 125.494 159.651 125.45 159.65 cv
125.45 159.65 125.449 159.65 125.449 159.65 cv
125.449 159.65 li
125.449 159.65 li
125.448 159.65 125.448 159.65 125.447 159.65 cv
125.267 159.652 125.171 159.858 125.355 159.997 cv
125.361 160.001 125.367 160.005 125.373 160.009 cv
125.373 160.009 125.373 160.009 125.373 160.009 cv
125.374 160.01 125.375 160.01 125.376 160.011 cv
125.379 160.013 125.382 160.015 125.386 160.017 cv
125.386 160.017 li
126.28 160.566 127.263 160.868 128.253 161.194 cv
129.129 161.483 130.088 161.79 130.776 162.43 cv
130.415 162.738 129.98 162.937 129.516 163.044 cv
129.133 163.133 128.741 163.17 128.346 163.17 cv
128.345 163.17 128.344 163.17 128.344 163.17 cv
128.343 163.17 128.342 163.17 128.34 163.17 cv
127.521 163.169 126.687 163.011 125.901 162.825 cv
125.889 162.822 125.877 162.819 125.864 162.816 cv
125.799 162.801 125.733 162.785 125.668 162.769 cv
125.668 162.769 li
124.427 162.464 123.22 162.043 122.005 161.649 cv
118.629 160.552 115.076 159.803 111.561 159.324 cv
111.54 159.321 111.518 159.318 111.497 159.315 cv
109.276 159.014 107.035 158.849 104.795 158.849 cv
104.794 158.849 104.793 158.849 104.791 158.849 cv
104.791 158.849 li
104.791 158.849 li
104.791 158.849 104.79 158.849 104.789 158.849 cv
103.254 158.849 101.719 158.926 100.19 159.091 cv
96.5547 159.484 92.9785 160.329 89.5039 161.456 cv
85.9658 162.604 82.5225 164.018 79.1143 165.503 cv
77.4277 166.239 75.749 166.992 74.0684 167.741 cv
74.0674 167.741 li
74.5566 167.253 75.0732 166.793 75.584 166.329 cv
76.1699 165.796 76.7608 165.269 77.3203 164.708 cv
77.9336 164.093 78.4551 163.397 79.0098 162.731 cv
80.1309 161.382 81.3018 160.072 82.5429 158.833 cv
85.0459 156.334 87.8828 154.243 90.9815 152.54 cv
96.9326 149.269 103.599 147.546 110.295 146.655 cv
114.023 146.158 117.78 145.905 121.502 145.357 cv
123.363 145.084 125.162 144.646 126.986 144.198 cv
128.825 143.746 130.683 143.584 132.551 143.315 cv
136.157 142.796 139.408 141.059 142.896 140.084 cv
144.563 139.619 146.237 139.395 147.963 139.299 cv
147.963 139.299 li
147.975 139.299 147.988 139.298 148.001 139.297 cv
148.007 139.297 148.012 139.297 148.018 139.296 cv
148.028 139.296 148.037 139.295 148.046 139.295 cv
148.062 139.294 148.077 139.293 148.093 139.292 cv
148.536 139.269 148.982 139.253 149.428 139.253 cv
149.428 139.253 149.429 139.253 149.43 139.253 cv
149.431 139.253 149.432 139.253 149.433 139.253 cv
150.269 139.253 151.104 139.309 151.923 139.474 cv
151.926 139.474 151.929 139.475 151.933 139.476 cv
151.941 139.477 151.949 139.479 151.957 139.48 cv
151.973 139.484 151.989 139.487 152.006 139.491 cv
152.006 139.491 li
153.325 139.769 154.547 140.37 155.518 141.315 cv
156.633 142.402 157.453 143.827 158.062 145.249 cv
158.965 147.353 159.391 149.596 159.39 151.855 cv
159.389 152.828 159.31 153.803 159.155 154.772 cv
159.155 154.772 li
159.155 154.772 li
159.186 154.921 li
158.375 155.241 157.663 155.813 157.087 156.473 cv
157.087 156.473 li
156.98 156.596 157.179 156.792 157.332 156.796 cv
157.334 156.797 157.336 156.797 157.338 156.797 cv
157.338 156.797 li
157.338 156.797 li
157.338 156.797 157.338 156.797 157.339 156.797 cv
157.371 156.796 157.4 156.788 157.424 156.768 cv
157.426 156.767 157.427 156.766 157.428 156.765 cv
157.98 156.282 158.605 155.837 159.298 155.579 cv
159.298 155.579 li
159.714 155.423 160.149 155.34 160.578 155.34 cv
160.579 155.34 160.58 155.34 160.581 155.34 cv
160.582 155.34 160.583 155.34 160.584 155.34 cv
161.295 155.34 161.988 155.569 162.546 156.075 cv
162.548 156.076 162.549 156.078 162.551 156.08 cv
162.559 156.087 162.567 156.094 162.574 156.101 cv
163.739 157.186 164.091 158.901 164.146 160.425 cv
164.154 160.624 164.157 160.824 164.157 161.024 cv
164.157 161.776 164.116 162.537 164.117 163.295 cv
164.117 164.246 164.181 165.19 164.47 166.102 cv
164.996 167.759 166.037 169.219 167.097 170.576 cv
169.357 173.469 171.813 176.206 174.062 179.109 cv
176.41 182.136 178.502 185.338 180.024 188.864 cv
181.589 192.489 182.645 196.325 183.278 200.218 cv
183.562 201.958 183.757 203.708 183.906 205.464 cv
183.999 206.555 184.066 207.65 184.066 208.745 cv
184.066 209.207 184.055 209.67 184.028 210.131 cv
183.849 213.252 182.86 216.743 179.72 218.05 cv
178.335 218.627 176.822 218.91 175.563 219.763 cv
175.057 220.107 174.594 220.555 174.493 221.185 cv
174.474 221.306 174.466 221.428 174.466 221.549 cv
174.466 222.005 174.581 222.464 174.657 222.907 cv
174.864 224.108 174.969 225.342 174.969 226.581 cv
174.969 228.905 174.601 231.245 173.849 233.407 cv
173.017 235.799 171.551 238.547 169.006 239.416 cv
168.968 239.302 li
168.928 239.1 168.778 238.928 168.567 238.889 cv
168.366 238.912 li
168.219 238.546 168.064 238.183 167.896 237.825 cv
167.843 237.776 li
167.772 237.554 li
167.545 236.821 167.388 236.065 167.247 235.311 cv
166.883 233.347 166.378 231.422 165.732 229.532 cv
164.013 224.491 161.337 219.959 158.075 215.768 cv
154.939 211.739 151.357 208.081 147.455 204.791 cv
143.555 201.505 139.337 198.594 134.921 196.045 cv
132.579 194.695 130.227 193.338 127.825 192.097 cv
125.967 191.137 124.038 190.256 122.009 189.744 cv
122.009 189.744 li
122.071 189.733 122.133 189.723 122.196 189.714 cv
122.2 189.713 122.205 189.712 122.21 189.711 cv
123.856 189.451 125.516 189.289 127.184 189.288 cv
127.186 189.288 127.187 189.288 127.189 189.288 cv
127.189 189.288 127.19 189.288 127.19 189.288 cv
127.387 189.288 127.584 189.291 127.781 189.295 cv
127.798 189.296 127.815 189.296 127.832 189.296 cv
127.832 189.296 li
130.929 189.375 134.019 190.045 136.977 190.933 cv
142.844 192.694 148.47 195.516 153.543 198.936 cv
154.811 199.79 156.042 200.701 157.221 201.674 cv
158.219 202.499 159.15 203.397 160.148 204.221 cv
161.88 205.65 164.069 207.185 164.849 209.393 cv
164.844 209.395 164.84 209.398 164.836 209.4 cv
164.834 209.401 164.833 209.402 164.831 209.403 cv
164.548 209.555 164.229 209.613 163.902 209.613 cv
163.901 209.613 163.9 209.613 163.899 209.613 cv
163.899 209.613 163.898 209.613 163.897 209.613 cv
163.427 209.613 162.941 209.495 162.52 209.374 cv
162.511 209.371 162.501 209.368 162.491 209.366 cv
161.608 209.109 160.755 208.764 159.96 208.302 cv
159.959 208.301 159.957 208.301 159.956 208.3 cv
159.932 208.287 159.909 208.281 159.889 208.28 cv
159.888 208.28 159.887 208.28 159.886 208.28 cv
159.886 208.28 li
159.886 208.28 li
159.886 208.28 159.885 208.28 159.884 208.28 cv
159.798 208.282 159.754 208.38 159.851 208.445 cv
159.853 208.446 159.855 208.447 159.857 208.449 cv
160.753 208.999 161.676 209.54 162.675 209.875 cv
162.675 209.875 li
162.684 209.879 162.693 209.882 162.703 209.885 cv
163.207 210.053 163.766 210.195 164.312 210.196 cv
164.313 210.196 164.314 210.196 164.316 210.196 cv
164.316 210.196 li
164.316 210.196 li
164.316 210.196 164.317 210.196 164.318 210.196 cv
164.741 210.195 165.156 210.109 165.53 209.883 cv
165.534 209.88 165.538 209.878 165.542 209.875 cv
165.611 209.833 165.634 209.764 165.634 209.693 cv
165.634 209.657 165.628 209.62 165.62 209.585 cv
165.493 209.051 165.259 208.544 164.966 208.082 cv
163.645 205.999 161.516 204.611 159.708 202.995 cv
157.45 200.976 155.128 199.107 152.567 197.48 cv
147.311 194.14 141.572 191.392 135.544 189.779 cv
135.544 189.779 li
135.515 189.771 135.486 189.763 135.457 189.756 cv
135.444 189.752 135.432 189.749 135.42 189.746 cv
132.626 189.005 129.741 188.504 126.845 188.504 cv
126.844 188.504 126.842 188.504 126.841 188.504 cv
126.841 188.504 li
126.841 188.504 li
126.841 188.504 126.841 188.504 126.84 188.504 cv
126.642 188.504 126.443 188.506 126.245 188.511 cv
126.228 188.511 126.211 188.512 126.193 188.512 cv
126.193 188.512 li
123.006 188.597 119.859 189.225 116.772 189.988 cv
113.627 190.765 110.519 191.693 107.349 192.369 cv
104.119 193.057 100.985 194.126 97.7529 194.802 cv
97.7529 194.802 li
97.7273 194.808 97.7018 194.813 97.6762 194.818 cv
97.6524 194.823 97.6287 194.828 97.6049 194.833 cv
97.5866 194.837 97.5682 194.841 97.5499 194.844 cv
94.572 195.458 91.5008 195.909 88.4513 195.91 cv
88.4493 195.91 88.4473 195.91 88.4452 195.91 cv
88.445 195.91 88.445 195.91 88.4448 195.91 cv
88.2322 195.91 88.019 195.907 87.8066 195.903 cv
87.8066 195.903 li
87.7996 195.903 87.7925 195.903 87.7854 195.902 cv
87.7317 195.901 87.6782 195.9 87.6245 195.898 cv
86.2206 195.855 84.8297 195.659 83.4403 195.452 cv
81.6398 195.184 79.8423 194.896 78.0214 194.896 cv
78.0198 194.896 78.0182 194.896 78.0166 194.896 cv
78.0166 194.896 li
78.0166 194.896 li
78.0166 194.896 li
78.0073 194.896 77.998 194.896 77.9887 194.896 cv
77.9843 194.896 77.9801 194.896 77.9756 194.896 cv
77.9752 194.896 77.9745 194.896 77.9742 194.896 cv
77.9697 194.896 77.9654 194.896 77.9609 194.896 cv
77.9609 194.896 li
77.7994 194.897 77.736 194.98 77.7358 195.085 cv
77.7356 195.253 77.9001 195.476 78.0839 195.495 cv
78.8789 195.577 79.6738 195.675 80.4668 195.78 cv
80.4668 195.78 li
80.4785 195.781 80.4902 195.783 80.502 195.784 cv
80.5799 195.795 80.6578 195.805 80.7356 195.816 cv
80.7362 195.816 80.7365 195.816 80.7371 195.816 cv
80.7505 195.818 80.7639 195.819 80.7772 195.821 cv
80.8099 195.826 80.8427 195.83 80.8754 195.835 cv
80.9201 195.841 80.9647 195.847 81.0093 195.853 cv
81.0618 195.86 81.114 195.867 81.1664 195.874 cv
81.1691 195.875 81.1722 195.875 81.1749 195.876 cv
81.2039 195.88 81.2329 195.884 81.2619 195.888 cv
83.8552 196.249 86.4071 196.678 89.0266 196.679 cv
89.0279 196.679 89.0294 196.679 89.0308 196.679 cv
89.0308 196.679 li
89.0308 196.679 li
89.031 196.679 89.0312 196.679 89.0314 196.679 cv
89.3448 196.679 89.659 196.672 89.9745 196.659 cv
89.9887 196.659 90.0028 196.658 90.017 196.657 cv
90.037 196.657 90.0571 196.656 90.0772 196.655 cv
90.0772 196.655 li
90.4736 196.637 90.8711 196.613 91.2685 196.583 cv
90.7881 196.831 90.3301 197.129 89.8642 197.429 cv
88.7774 198.13 87.6846 198.817 86.624 199.56 cv
82.8819 202.181 79.1846 204.848 75.2178 207.127 cv
73.2139 208.279 71.1553 209.327 69.0322 210.24 cv
66.9902 211.117 64.8799 211.783 62.7695 212.47 cv
62.7598 212.473 62.7509 212.477 62.7429 212.481 cv
62.7421 212.481 62.7412 212.482 62.7404 212.482 cv
62.7396 212.483 62.7388 212.483 62.738 212.484 cv
62.5842 212.568 62.7646 212.811 62.9147 212.813 cv
62.9153 212.813 62.9159 212.813 62.9165 212.813 cv
62.9165 212.813 li
62.9165 212.813 li
62.9166 212.813 62.9167 212.813 62.9168 212.813 cv
62.9213 212.813 62.9257 212.813 62.9301 212.813 cv
62.9301 212.813 62.9301 212.813 62.9301 212.813 cv
62.9316 212.812 62.9331 212.812 62.9345 212.812 cv
62.9345 212.812 li
65.4121 212.483 67.8096 211.609 70.0898 210.605 cv
70.2334 210.542 70.377 210.478 70.5199 210.413 cv
70.3263 210.882 70.1531 211.36 70.0068 211.842 cv
69.416 213.786 69.1416 215.814 68.7793 217.807 cv
68.3926 219.929 67.8701 222.031 67.3223 224.117 cv
66.166 228.513 64.7549 232.834 63.292 237.137 cv
61.4512 242.556 59.5591 247.956 57.702 253.368 cv
57.7244 252.947 57.7405 252.526 57.7471 252.105 cv
57.3428 255.341 55.4658 258.246 52.9707 260.409 cv
52.4348 260.874 51.8716 261.307 51.2876 261.711 cv
133.335 184.712 mo
137.338 184.712 141.322 185.142 145.31 185.474 cv
146.227 185.764 147.134 186.087 148.019 186.468 cv
150.375 187.484 152.558 188.835 154.679 190.271 cv
158.913 193.137 162.826 196.449 166.552 199.944 cv
168.407 201.683 170.218 203.469 172.008 205.274 cv
173.603 206.881 175.125 208.601 176.828 210.095 cv
177.395 210.593 178.135 211.133 178.846 211.133 cv
179.224 211.133 179.594 210.98 179.925 210.586 cv
180.515 209.884 180.786 208.914 181.012 208.045 cv
181.283 207 181.456 205.928 181.534 204.851 cv
181.855 200.452 180.55 196.103 178.661 192.174 cv
176.683 188.056 174.038 184.29 171.231 180.7 cv
169.988 179.11 168.742 177.492 167.391 175.993 cv
165.996 174.448 164.431 173.068 163.043 171.515 cv
162.369 170.761 161.722 169.966 161.23 169.079 cv
160.731 168.177 160.55 167.226 160.583 166.2 cv
160.621 165.077 160.858 163.978 161.087 162.878 cv
161.704 162.172 162.44 161.237 162.352 160.295 cv
162.277 159.497 161.501 159.153 160.8 159.035 cv
160.424 158.972 160.042 158.946 159.659 158.946 cv
158.908 158.946 158.15 159.045 157.417 159.155 cv
156.031 159.362 154.663 159.679 153.312 160.045 cv
152.111 160.371 150.919 160.737 149.75 161.165 cv
148.776 161.522 147.859 161.985 146.913 162.406 cv
145.262 163.142 143.279 163.902 142.121 165.363 cv
141.67 165.932 141.417 166.645 141.614 167.368 cv
141.81 168.081 142.372 168.693 142.923 169.16 cv
144.424 170.43 146.349 171.182 148.178 171.839 cv
149.465 172.302 150.778 172.685 152.08 173.101 cv
151.725 173.115 151.369 173.125 151.014 173.129 cv
150.897 173.131 150.78 173.131 150.663 173.131 cv
149.129 173.131 147.597 173.022 146.088 172.739 cv
144.445 172.429 142.831 171.953 141.248 171.42 cv
138.125 170.371 135.105 169.047 132.023 167.884 cv
125.948 165.591 119.522 164.138 113.039 163.704 cv
111.748 163.617 110.455 163.572 109.161 163.572 cv
107.181 163.572 105.201 163.677 103.233 163.898 cv
100.392 164.217 97.5381 164.667 94.8535 165.687 cv
92.3359 166.643 89.7676 168.091 88.1181 170.275 cv
86.457 172.475 85.9336 175.256 84.6309 177.647 cv
82.5182 181.522 78.2021 182.685 74.0551 182.685 cv
73.1914 182.685 72.3343 182.634 71.5069 182.547 cv
71.4989 182.547 71.4911 182.546 71.4834 182.546 cv
71.2702 182.546 71.1752 182.852 71.3233 182.993 cv
71.6826 183.334 72.0566 183.66 72.4453 183.967 cv
75.8388 186.646 80.1211 187.998 84.3213 188.758 cv
87.8574 189.399 91.4591 189.645 95.0547 189.645 cv
96.1689 189.645 97.2828 189.622 98.3936 189.579 cv
103.154 189.394 107.854 188.805 112.529 187.898 cv
119.065 186.628 125.615 184.851 132.307 184.722 cv
132.65 184.716 132.992 184.712 133.335 184.712 cv
60.3327 184.393 mo
60.12 184.393 59.9121 184.432 59.7197 184.529 cv
59.0381 184.874 59.0156 185.767 59.0908 186.425 cv
59.2422 187.768 59.6962 189.141 60.4942 190.239 cv
62.1259 192.483 64.9072 193.317 67.5703 193.435 cv
67.8316 193.447 68.0931 193.452 68.3554 193.452 cv
70.8589 193.452 73.3975 192.933 75.7276 192.053 cv
75.9795 191.958 75.9678 191.649 75.7276 191.551 cv
72.3525 190.169 69.0058 188.723 65.6612 187.271 cv
65.2529 186.96 64.8398 186.656 64.4179 186.363 cv
63.5693 185.771 62.6904 185.19 61.7402 184.775 cv
61.3276 184.595 60.8174 184.393 60.3327 184.393 cv
117.06 154.78 mo
123.01 154.78 128.957 155.149 134.877 155.743 cv
138.907 156.147 142.942 156.978 147.004 156.978 cv
147.37 156.978 147.738 156.971 148.105 156.957 cv
150.092 156.878 152.206 156.578 153.93 155.517 cv
155.469 154.57 156.348 153.001 156.646 151.244 cv
157.215 147.887 155.92 143.258 152.347 142.085 cv
152.317 142.076 152.289 142.071 152.263 142.071 cv
152.176 142.071 152.109 142.122 152.069 142.191 cv
151.089 141.781 150.029 141.633 148.967 141.633 cv
148.364 141.633 147.761 141.68 147.172 141.755 cv
143.26 142.253 139.569 143.831 135.885 145.15 cv
135.115 145.425 134.342 145.694 133.557 145.924 cv
132.49 146.236 131.394 146.436 130.301 146.633 cv
126.72 147.28 123.096 147.644 119.477 148.014 cv
116.146 148.355 112.82 148.719 109.514 149.257 cv
107.576 149.573 105.639 149.896 103.729 150.352 cv
101.629 150.854 99.5098 151.489 97.6103 152.537 cv
96.0518 153.397 94.5342 154.649 94.086 156.45 cv
94.0402 156.634 94.1796 156.775 94.349 156.775 cv
94.3678 156.775 94.3869 156.774 94.4062 156.77 cv
95.1963 156.626 95.9863 156.49 96.7783 156.361 cv
103.026 155.348 109.35 154.849 115.677 154.787 cv
116.138 154.782 116.599 154.78 117.06 154.78 cv
43.5092 260.296 mo
41.3774 259.745 39.2025 258.978 37.581 257.445 cv
37.2461 257.129 36.9336 256.885 36.5752 256.719 cv
37.3496 254.542 38.1006 252.356 38.8545 250.174 cv
39.3504 248.74 39.8544 247.303 40.3407 245.859 cv
41.6063 242.562 42.8428 239.254 44.0342 235.928 cv
44.4453 234.782 44.8076 233.61 45.3682 232.524 cv
45.8086 231.671 46.3506 230.876 46.962 230.137 cv
47.723 229.219 48.59 228.404 49.4956 227.632 cv
49.913 227.424 50.3274 227.209 50.7403 226.993 cv
51.4791 226.605 52.2131 226.208 52.9417 225.801 cv
52.643 228.096 52.27 230.382 51.8155 232.652 cv
51.8 232.729 51.7846 232.806 51.769 232.883 cv
50.6182 234.027 49.541 235.247 48.6123 236.568 cv
47.3984 238.294 46.2862 240.094 45.251 241.932 cv
44.0078 244.138 42.8672 246.417 41.9824 248.792 cv
41.2617 250.727 40.5967 252.877 40.7627 254.968 cv
40.8252 255.762 41.0215 256.573 41.4805 257.236 cv
42.0239 258.021 42.9991 258.447 43.9138 258.731 cv
43.7745 259.251 43.6393 259.773 43.5092 260.296 cv
32.1618 257.016 mo
31.028 257.016 29.813 256.849 28.9278 256.157 cv
27.9658 255.406 27.8399 254.21 27.8936 253.068 cv
27.9648 251.545 28.3037 250.036 28.6543 248.557 cv
28.9824 247.169 29.3164 245.799 29.5645 244.394 cv
29.9883 241.996 30.5049 239.609 31.1972 237.272 cv
31.4356 236.468 31.7002 235.683 31.8799 234.864 cv
32.0429 234.119 32.2022 233.373 32.4121 232.639 cv
32.6748 231.72 33.0273 230.367 34.1221 230.16 cv
34.3541 230.116 34.5921 230.099 34.8316 230.099 cv
35.1969 230.099 35.5654 230.137 35.9199 230.173 cv
36.7295 230.256 37.5342 230.384 38.3369 230.518 cv
39.7402 230.751 41.1943 231.137 42.624 231.148 cv
42.7588 231.15 42.8916 231.267 42.8838 231.409 cv
42.8208 232.613 42.6992 233.808 42.533 234.995 cv
42.1309 236.94 41.7043 238.879 41.1416 240.786 cv
39.9805 244.715 38.6162 248.591 37.2558 252.456 cv
36.7812 253.804 36.3096 255.154 35.831 256.501 cv
35.6367 256.476 li
35.5263 256.467 35.416 256.463 35.3059 256.463 cv
34.3315 256.463 33.3706 256.793 32.4248 256.984 cv
32.3697 256.995 32.3146 257.006 32.2595 257.016 cv
32.227 257.016 32.1944 257.016 32.1618 257.016 cv
33.6887 237.073 mo
33.4627 237.073 33.2411 237.11 33.04 237.189 cv
32.3819 237.448 31.9658 238.065 31.708 238.696 cv
31.1914 239.962 31.1455 241.607 31.7149 242.865 cv
31.9473 243.376 32.3144 243.843 32.8301 244.084 cv
33.0456 244.724 33.6537 245.102 34.282 245.102 cv
34.4935 245.102 34.7073 245.059 34.9092 244.969 cv
35.6826 244.624 36.2714 243.891 36.7216 243.198 cv
37.1758 242.499 37.5527 241.72 37.6338 240.882 cv
37.7324 239.854 37.4463 238.803 36.6914 238.07 cv
36.1461 237.54 35.3416 237.144 34.5564 237.144 cv
34.4698 237.144 34.3836 237.149 34.2978 237.159 cv
34.099 237.103 33.8921 237.073 33.6887 237.073 cv
25.2683 256.385 mo
25.2683 256.385 li
25.5479 255.209 25.8224 254.032 26.0928 252.855 cv
26.6875 250.265 27.248 247.667 27.7763 245.064 cv
28.2959 242.509 28.7539 239.946 29.3994 237.419 cv
30.0381 234.922 30.7735 232.451 31.4834 229.974 cv
31.8379 228.738 32.1924 227.502 32.501 226.253 cv
32.6328 225.719 32.7344 225.179 32.8291 224.639 cv
32.8291 224.639 li
32.8337 224.642 32.8384 224.645 32.8431 224.647 cv
32.8431 224.647 li
32.8384 224.645 32.8337 224.642 32.8291 224.639 cv
32.7344 225.179 32.6328 225.719 32.501 226.253 cv
32.1924 227.502 31.8379 228.738 31.4834 229.974 cv
30.7735 232.451 30.0381 234.922 29.3994 237.419 cv
28.7539 239.946 28.2959 242.509 27.7763 245.064 cv
27.248 247.667 26.6875 250.265 26.0928 252.855 cv
25.8224 254.032 25.5479 255.209 25.2683 256.385 cv
45.9095 226.485 mo
45.7749 226.485 45.6386 226.356 45.6494 226.22 cv
45.8056 224.129 45.8047 221.981 46.4043 219.954 cv
46.6768 219.031 47.1074 218.129 47.8067 217.452 cv
48.0663 217.2 48.3598 216.994 48.666 216.807 cv
49.1684 216.802 49.6703 216.773 50.1692 216.72 cv
50.1779 216.719 50.1866 216.718 50.1953 216.717 cv
50.2274 216.714 50.2594 216.71 50.2915 216.706 cv
50.2915 216.706 50.2916 216.706 50.2917 216.706 cv
50.3107 216.704 50.3297 216.702 50.3486 216.7 cv
50.3486 216.7 li
51.52 216.561 52.6357 216.291 53.7431 215.941 cv
53.6966 217.589 53.61 219.236 53.4697 220.884 cv
53.3935 221.777 53.3071 222.668 53.2098 223.559 cv
50.8249 224.59 48.4071 225.546 45.9795 226.472 cv
45.9567 226.481 45.9332 226.485 45.9095 226.485 cv
52.5368 225.159 mo
52.7185 225.009 52.8992 224.858 53.0786 224.705 cv
53.072 224.761 53.0652 224.817 53.0585 224.872 cv
52.8849 224.968 52.7109 225.064 52.5368 225.159 cv
.133333 .431373 .301961 rgb
f
64.2959 330.944 mo
64.4834 329.947 64.6592 328.947 64.8067 327.943 cv
65.0566 326.244 65.3447 324.541 65.5019 322.83 cv
65.8867 318.646 65.624 314.383 65.2608 310.207 cv
65.0947 308.303 64.8936 306.396 64.7422 304.487 cv
64.752 304.115 64.7617 303.742 64.7715 303.37 cv
64.8526 300.383 64.9678 297.392 65.3487 294.426 cv
65.6894 291.765 66.3809 289.19 67.3017 286.672 cv
69.085 281.798 71.5634 277.21 73.3261 272.328 cv
76.2246 267.562 79.7207 263.166 83.7109 259.263 cv
89.3906 253.708 96.2236 249.52 103.284 245.962 cv
105.825 244.681 108.363 243.381 110.973 242.243 cv
113.192 241.529 115.441 240.914 117.741 240.5 cv
119.943 240.104 122.137 239.939 124.363 240.225 cv
126.477 240.497 128.54 241.116 130.504 241.929 cv
134.498 243.584 138.114 246.032 141.628 248.519 cv
143.487 249.834 145.307 251.232 147.093 252.645 cv
148.832 254.022 150.567 255.481 152.011 257.174 cv
154.727 260.363 156.04 264.456 158.337 267.919 cv
158.422 268.046 158.561 268.058 158.671 268.008 cv
159.051 268.783 159.44 269.552 159.85 270.311 cv
160.938 272.33 162.183 274.207 163.526 276.037 cv
163.652 276.237 163.776 276.438 163.906 276.635 cv
166.355 280.363 169.643 283.779 171.069 288.066 cv
170.992 290.469 170.884 292.872 170.729 295.275 cv
170.57 297.707 170.439 300.139 170.269 302.569 cv
170.184 303.782 170.09 304.995 169.977 306.206 cv
169.958 306.408 169.936 306.609 169.914 306.81 cv
169.813 306.434 169.713 306.057 169.611 305.681 cv
169.069 303.682 168.472 301.696 167.728 299.762 cv
166.961 297.771 166.039 295.841 165.102 293.925 cv
164.284 292.253 163.439 290.601 162.578 288.952 cv
161.917 287.681 161.1 286.131 161.298 284.644 cv
161.764 284.863 162.189 285.241 162.556 285.57 cv
163.197 286.146 163.784 286.785 164.322 287.457 cv
164.858 288.129 165.364 288.837 165.758 289.603 cv
166.043 290.158 166.347 290.794 166.308 291.435 cv
166.303 291.529 166.5 291.621 166.527 291.506 cv
166.674 290.875 166.441 290.2 166.186 289.628 cv
165.808 288.786 165.293 287.997 164.732 287.267 cv
164.156 286.517 163.528 285.8 162.826 285.165 cv
162.316 284.706 161.745 284.216 161.084 283.993 cv
160.951 283.948 160.739 283.932 160.696 284.112 cv
160.303 285.746 161.151 287.472 161.867 288.894 cv
162.776 290.702 163.684 292.505 164.547 294.335 cv
165.426 296.199 166.289 298.078 167.006 300.01 cv
167.706 301.898 168.269 303.831 168.782 305.777 cv
169.086 306.931 169.388 308.088 169.683 309.248 cv
169.67 309.443 169.655 309.638 169.649 309.833 cv
169.646 309.963 169.771 310.09 169.912 310.159 cv
170.557 312.737 171.153 315.328 171.637 317.937 cv
172.01 319.95 172.306 321.979 172.473 324.02 cv
172.596 325.531 172.599 327.04 172.651 328.553 cv
172.669 329.072 172.732 330.058 172.619 330.944 cv
64.2959 330.944 li
.898039 .486275 .145098 rgb
f
160.289 277.59 mo
159.261 276.823 158.454 275.759 157.705 274.735 cv
156.82 273.527 156 272.259 155.003 271.137 cv
153.957 269.96 152.874 268.825 151.78 267.692 cv
150.663 266.534 149.553 265.357 148.595 264.061 cv
146.797 261.629 145.868 258.707 144.4 256.086 cv
143.887 255.171 143.299 254.324 142.632 253.53 cv
144.337 254.725 145.995 255.991 147.5 257.433 cv
148.411 258.305 149.268 259.239 150.025 260.249 cv
150.851 261.348 151.502 262.543 152.171 263.742 cv
153.615 266.33 155.124 268.857 156.895 271.238 cv
158.285 273.109 160.042 275.18 160.289 277.59 cv
.945098 .619608 .211765 rgb
f
164.855 330.944 mo
156.429 330.944 li
156.581 328.462 156.452 325.955 156.264 323.491 cv
155.975 319.711 155.482 315.943 155.479 312.148 cv
155.473 307.974 155.403 303.764 154.474 299.675 cv
154.002 297.606 153.292 295.575 152.585 293.575 cv
151.877 291.569 151.107 289.584 150.316 287.609 cv
149.932 286.649 149.577 285.664 149.14 284.728 cv
148.769 283.934 148.379 283.15 148.021 282.35 cv
147.364 280.877 146.7 279.223 146.809 277.576 cv
146.906 277.614 li
149.229 281.199 151.457 284.849 153.445 288.631 cv
155.231 292.028 156.862 295.542 158.06 299.195 cv
159.276 302.907 159.968 306.761 160.569 310.614 cv
160.868 312.523 161.11 314.445 161.509 316.335 cv
161.904 318.218 162.415 320.074 162.922 321.928 cv
163.731 324.888 164.549 327.885 164.855 330.944 cv
f
100.1 294.72 mo
99.9824 293.391 100.332 292.047 100.851 290.832 cv
102.037 288.053 104.049 285.645 106.092 283.456 cv
106.79 282.707 107.514 281.986 108.247 281.273 cv
108.231 281.337 li
107.561 284.137 106.876 286.993 105.581 289.582 cv
104.413 291.918 102.658 293.966 100.1 294.72 cv
f
170.101 330.944 mo
166.989 330.944 li
167.584 325.516 167.014 319.962 165.977 314.629 cv
165.409 311.712 164.678 308.826 163.795 305.988 cv
162.876 303.033 161.671 300.19 160.369 297.385 cv
159.046 294.534 157.642 291.718 156.416 288.822 cv
155.778 287.315 155.19 285.785 154.689 284.227 cv
154.286 282.977 153.871 281.685 153.687 280.38 cv
153.572 279.578 153.523 278.351 154.531 278.351 cv
154.588 278.351 154.648 278.355 154.712 278.363 cv
155.981 278.526 157.216 279.458 158.23 280.17 cv
159.647 281.164 160.986 282.265 162.316 283.372 cv
163.292 284.182 164.246 285.046 165.291 285.769 cv
165.33 285.796 165.373 285.808 165.415 285.808 cv
165.574 285.808 165.729 285.639 165.674 285.475 cv
165.378 284.594 165.05 283.725 164.692 282.867 cv
163.187 279.253 161.241 275.843 159.252 272.479 cv
158.247 270.78 157.226 269.089 156.231 267.382 cv
155.303 265.787 154.463 264.134 153.474 262.574 cv
149.838 256.84 144.494 252.505 138.73 249.039 cv
137.262 248.155 135.763 247.322 134.246 246.522 cv
132.706 245.71 131.154 244.843 129.514 244.249 cv
128.735 243.968 127.937 243.791 127.131 243.791 cv
126.698 243.791 126.263 243.842 125.827 243.956 cv
124.366 244.335 123.02 245.168 121.706 245.885 cv
115.021 249.532 108.117 253.027 102.338 258.059 cv
99.5429 260.492 97.0069 263.276 94.7569 266.216 cv
92.5088 269.155 90.5733 272.332 89.0967 275.727 cv
89.0071 275.933 89.1476 276.112 89.3224 276.112 cv
89.3822 276.112 89.4459 276.091 89.5058 276.043 cv
91.6534 274.325 93.7988 272.602 95.999 270.952 cv
103.274 265.493 111.66 260.457 120.958 260.457 cv
121.579 260.457 122.202 260.48 122.831 260.526 cv
122.696 260.773 122.519 260.997 122.325 261.2 cv
121.582 261.986 120.634 262.572 119.709 263.117 cv
118.644 263.746 117.543 264.311 116.449 264.888 cv
115.445 265.418 114.431 265.946 113.487 266.58 cv
112.492 267.249 111.596 268.076 110.671 268.834 cv
105.831 272.805 100.77 276.868 97.167 282.051 cv
93.7451 286.973 93.4717 293.246 92.7129 298.995 cv
92.2676 302.373 91.6114 305.73 90.9717 309.075 cv
90.292 312.631 89.5517 316.176 88.7129 319.699 cv
87.8135 323.481 86.793 327.237 85.6211 330.944 cv
75.2148 330.944 li
75.4473 329.157 75.6709 327.368 75.8047 325.57 cv
75.9531 323.578 75.9765 321.58 76.1562 319.589 cv
76.3291 317.679 76.6035 315.778 77.0352 313.909 cv
77.5058 311.874 78.1904 309.895 78.8525 307.917 cv
80.1895 303.919 81.6231 299.956 83.0332 295.983 cv
84.4267 292.058 85.7851 288.12 87.0166 284.14 cv
86.3369 285.056 85.6045 285.933 84.8496 286.79 cv
83.6699 288.131 82.5088 289.489 81.332 290.832 cv
79.1328 293.341 77.5957 296.401 75.1504 298.701 cv
75.1008 298.747 75.0346 298.769 74.9684 298.769 cv
74.8312 298.769 74.6942 298.676 74.7061 298.516 cv
75.3525 289.904 77.1465 281.239 80.3184 273.194 cv
81.7451 269.578 83.5488 266.124 85.5478 262.793 cv
87.6387 259.312 89.9697 255.966 92.5869 252.86 cv
93.0781 252.276 93.584 251.704 94.0986 251.138 cv
90.7495 253.276 87.5599 255.655 84.6492 258.368 cv
90.1358 253.254 96.608 249.326 103.284 245.962 cv
105.825 244.681 108.363 243.381 110.973 242.243 cv
113.192 241.529 115.441 240.914 117.741 240.5 cv
119.18 240.241 120.616 240.081 122.059 240.081 cv
122.825 240.081 123.592 240.126 124.363 240.225 cv
126.477 240.497 128.54 241.116 130.504 241.929 cv
134.498 243.584 138.114 246.032 141.628 248.519 cv
143.487 249.834 145.307 251.232 147.093 252.645 cv
148.832 254.022 150.567 255.481 152.011 257.174 cv
154.727 260.363 156.04 264.456 158.337 267.919 cv
158.392 268.002 158.47 268.036 158.548 268.036 cv
158.59 268.036 158.632 268.026 158.671 268.008 cv
159.051 268.783 159.44 269.552 159.85 270.311 cv
160.938 272.33 162.183 274.207 163.526 276.037 cv
163.652 276.237 163.776 276.438 163.906 276.635 cv
166.355 280.363 169.643 283.779 171.069 288.066 cv
170.992 290.469 170.884 292.872 170.729 295.275 cv
170.693 295.819 170.659 296.363 170.626 296.907 cv
169.301 293.867 167.695 290.93 165.547 288.431 cv
165.535 288.417 li
165.287 288.019 165.015 287.636 164.732 287.267 cv
164.156 286.517 163.528 285.8 162.826 285.165 cv
162.316 284.706 161.745 284.216 161.084 283.993 cv
161.035 283.976 160.976 283.964 160.918 283.963 cv
160.917 283.963 160.916 283.963 160.915 283.963 cv
160.915 283.963 li
160.817 283.963 160.723 283.999 160.696 284.112 cv
160.663 284.251 160.638 284.39 160.622 284.53 cv
160.533 284.487 160.447 284.44 160.355 284.4 cv
160.498 285.892 160.992 287.336 161.563 288.713 cv
162.213 290.283 162.991 291.794 163.703 293.334 cv
164.385 294.809 164.909 296.313 165.393 297.863 cv
165.907 299.516 166.397 301.177 166.856 302.848 cv
168.766 309.797 170.194 316.959 170.372 324.183 cv
170.42 326.157 170.369 328.134 170.19 330.101 cv
170.165 330.382 170.131 330.664 170.101 330.944 cv
64.7422 304.487 mo
64.7422 304.487 li
64.752 304.115 64.7617 303.742 64.7715 303.37 cv
64.8526 300.383 64.9678 297.392 65.3487 294.426 cv
65.6894 291.765 66.3809 289.19 67.3017 286.672 cv
69.085 281.798 71.5634 277.21 73.3261 272.328 cv
76.2246 267.562 79.7207 263.166 83.7109 259.263 cv
83.7224 259.252 83.7334 259.241 83.7448 259.23 cv
83.7335 259.241 83.7223 259.252 83.7109 259.263 cv
79.7207 263.166 76.2246 267.562 73.3261 272.328 cv
71.5634 277.21 69.085 281.798 67.3017 286.672 cv
66.3809 289.19 65.6894 291.765 65.3487 294.426 cv
64.9678 297.392 64.8526 300.383 64.7715 303.37 cv
64.7617 303.742 64.752 304.115 64.7422 304.487 cv
166.311 291.322 mo
166.311 290.72 166.026 290.125 165.758 289.603 cv
165.364 288.837 164.858 288.129 164.322 287.457 cv
163.895 286.923 163.427 286.421 162.936 285.944 cv
162.412 285.545 161.863 285.182 161.286 284.866 cv
161.193 286.242 161.904 287.655 162.521 288.841 cv
161.94 287.725 161.267 286.406 161.268 285.108 cv
161.268 284.953 161.277 284.798 161.298 284.644 cv
161.764 284.863 162.189 285.241 162.556 285.57 cv
163.197 286.146 163.784 286.785 164.322 287.457 cv
164.858 288.129 165.364 288.837 165.758 289.603 cv
166.026 290.125 166.311 290.72 166.311 291.322 cv
166.311 291.322 li
83.7706 259.205 mo
83.7734 259.202 83.7759 259.2 83.7787 259.197 cv
83.776 259.2 83.7733 259.202 83.7706 259.205 cv
83.8071 259.169 mo
83.8088 259.168 83.8104 259.166 83.8121 259.164 cv
83.8104 259.166 83.8088 259.168 83.8071 259.169 cv
83.8429 259.135 mo
83.8436 259.134 83.8444 259.133 83.8451 259.132 cv
83.8443 259.133 83.8437 259.134 83.8429 259.135 cv
84.5156 258.492 mo
84.5163 258.492 84.5176 258.491 84.5183 258.49 cv
84.5173 258.491 84.5166 258.492 84.5156 258.492 cv
84.5471 258.463 mo
84.5503 258.46 84.5529 258.457 84.5561 258.454 cv
84.5531 258.457 84.5501 258.46 84.5471 258.463 cv
84.5804 258.432 mo
84.585 258.427 84.59 258.423 84.5946 258.418 cv
84.5897 258.423 84.5853 258.427 84.5804 258.432 cv
84.6142 258.4 mo
84.6209 258.394 84.6283 258.387 84.635 258.381 cv
84.6281 258.387 84.6211 258.394 84.6142 258.4 cv
.847059 .345098 .0745098 rgb
f
83.7448 259.23 mo
83.7533 259.222 83.7621 259.213 83.7706 259.205 cv
83.7623 259.213 83.7532 259.222 83.7448 259.23 cv
83.7787 259.197 mo
83.7881 259.188 83.7976 259.179 83.8071 259.169 cv
83.7977 259.179 83.788 259.188 83.7787 259.197 cv
83.8121 259.164 mo
83.8223 259.155 83.8326 259.145 83.8429 259.135 cv
83.8324 259.145 83.8225 259.154 83.8121 259.164 cv
83.8451 259.132 mo
84.0667 258.917 84.2906 258.704 84.5156 258.492 cv
84.2903 258.704 84.0669 258.917 83.8451 259.132 cv
84.5183 258.49 mo
84.5279 258.481 84.5375 258.472 84.5471 258.463 cv
84.5376 258.472 84.5279 258.481 84.5183 258.49 cv
84.5561 258.454 mo
84.5641 258.447 84.5723 258.439 84.5804 258.432 cv
84.5723 258.439 84.5642 258.447 84.5561 258.454 cv
84.5946 258.418 mo
84.6011 258.412 84.6077 258.406 84.6142 258.4 cv
84.6075 258.406 84.6013 258.412 84.5946 258.418 cv
84.635 258.381 mo
84.6398 258.376 84.6444 258.372 84.6492 258.368 cv
84.6446 258.372 84.6396 258.376 84.635 258.381 cv
.12549 .305882 .152941 rgb
f
75.2148 330.944 mo
64.2959 330.944 li
64.4834 329.947 64.6592 328.947 64.8067 327.943 cv
65.0566 326.244 65.3447 324.541 65.5019 322.83 cv
65.6357 321.375 65.6912 319.911 65.6914 318.444 cv
65.6914 318.444 li
65.6919 315.692 65.4977 312.931 65.2608 310.207 cv
65.0947 308.303 64.8936 306.396 64.7422 304.487 cv
64.752 304.115 64.7617 303.742 64.7715 303.37 cv
64.8526 300.383 64.9678 297.392 65.3487 294.426 cv
65.6894 291.765 66.3809 289.19 67.3017 286.672 cv
69.085 281.798 71.5634 277.21 73.3261 272.328 cv
76.2246 267.562 79.7207 263.166 83.7109 259.263 cv
83.7223 259.252 83.7335 259.241 83.7448 259.23 cv
83.7532 259.222 83.7623 259.213 83.7706 259.205 cv
83.7733 259.202 83.776 259.2 83.7787 259.197 cv
83.788 259.188 83.7977 259.179 83.8071 259.169 cv
83.8088 259.168 83.8104 259.166 83.8121 259.164 cv
83.8225 259.154 83.8324 259.145 83.8429 259.135 cv
83.8437 259.134 83.8443 259.133 83.8451 259.132 cv
84.0669 258.917 84.2903 258.704 84.5156 258.492 cv
84.5166 258.492 84.5173 258.491 84.5183 258.49 cv
84.5279 258.481 84.5376 258.472 84.5471 258.463 cv
84.5501 258.46 84.5531 258.457 84.5561 258.454 cv
84.5642 258.447 84.5723 258.439 84.5804 258.432 cv
84.5853 258.427 84.5897 258.423 84.5946 258.418 cv
84.6013 258.412 84.6075 258.406 84.6142 258.4 cv
84.6211 258.394 84.6281 258.387 84.635 258.381 cv
84.6396 258.376 84.6446 258.372 84.6492 258.368 cv
87.5599 255.655 90.7495 253.276 94.0986 251.138 cv
93.584 251.704 93.0781 252.276 92.5869 252.86 cv
89.9697 255.966 87.6387 259.312 85.5478 262.793 cv
83.5488 266.124 81.7451 269.578 80.3184 273.194 cv
77.1465 281.239 75.3525 289.904 74.7061 298.516 cv
74.6942 298.676 74.8312 298.769 74.9684 298.769 cv
75.0346 298.769 75.1008 298.747 75.1504 298.701 cv
77.5957 296.401 79.1328 293.341 81.332 290.832 cv
82.5088 289.489 83.6699 288.131 84.8496 286.79 cv
85.6045 285.933 86.3369 285.056 87.0166 284.14 cv
85.7851 288.12 84.4267 292.058 83.0332 295.983 cv
81.6231 299.956 80.1895 303.919 78.8525 307.917 cv
78.1904 309.895 77.5058 311.874 77.0352 313.909 cv
76.6035 315.778 76.3291 317.679 76.1562 319.589 cv
75.9765 321.58 75.9531 323.578 75.8047 325.57 cv
75.6709 327.368 75.4473 329.157 75.2148 330.944 cv
.796078 .243137 .0392157 rgb
f
169.914 306.81 mo
169.813 306.434 169.713 306.057 169.611 305.681 cv
169.069 303.682 168.472 301.696 167.728 299.762 cv
166.961 297.771 166.039 295.841 165.102 293.925 cv
164.284 292.253 163.439 290.601 162.578 288.952 cv
162.559 288.915 162.54 288.878 162.521 288.841 cv
162.54 288.878 162.559 288.915 162.578 288.952 cv
163.439 290.601 164.284 292.253 165.102 293.925 cv
166.039 295.841 166.961 297.771 167.728 299.762 cv
168.472 301.696 169.069 303.682 169.611 305.681 cv
169.713 306.057 169.813 306.434 169.914 306.81 cv
169.936 306.609 169.958 306.408 169.977 306.206 cv
170.09 304.995 170.184 303.782 170.269 302.569 cv
170.401 300.683 170.51 298.795 170.626 296.907 cv
170.626 296.908 170.627 296.909 170.627 296.91 cv
170.512 298.796 170.401 300.683 170.269 302.569 cv
170.184 303.782 170.09 304.995 169.977 306.206 cv
169.958 306.408 169.936 306.609 169.914 306.81 cv
.054902 .219608 .121569 rgb
f
166.573 291.095 mo
166.573 290.59 166.386 290.077 166.186 289.628 cv
165.998 289.21 165.776 288.806 165.533 288.415 cv
165.535 288.417 li
165.778 288.807 165.998 289.211 166.186 289.628 cv
166.386 290.077 166.573 290.59 166.573 291.095 cv
166.573 291.095 li
f
169.914 306.81 mo
169.813 306.434 169.713 306.057 169.611 305.681 cv
169.069 303.682 168.472 301.696 167.728 299.762 cv
166.961 297.771 166.039 295.841 165.102 293.925 cv
164.284 292.253 163.439 290.601 162.578 288.952 cv
162.559 288.915 162.54 288.878 162.521 288.841 cv
161.904 287.655 161.193 286.242 161.286 284.866 cv
161.863 285.182 162.412 285.545 162.936 285.944 cv
163.427 286.421 163.895 286.923 164.322 287.457 cv
164.858 288.129 165.364 288.837 165.758 289.603 cv
166.026 290.125 166.311 290.72 166.311 291.322 cv
166.311 291.36 166.31 291.398 166.308 291.435 cv
166.308 291.436 166.308 291.437 166.308 291.438 cv
166.308 291.438 li
166.307 291.5 166.392 291.559 166.458 291.559 cv
166.491 291.559 166.518 291.544 166.527 291.506 cv
166.559 291.371 166.573 291.233 166.573 291.095 cv
166.573 291.095 li
166.573 290.59 166.386 290.077 166.186 289.628 cv
165.998 289.211 165.778 288.807 165.535 288.417 cv
165.547 288.431 li
167.695 290.93 169.301 293.867 170.626 296.907 cv
170.51 298.795 170.401 300.683 170.269 302.569 cv
170.184 303.782 170.09 304.995 169.977 306.206 cv
169.958 306.408 169.936 306.609 169.914 306.81 cv
.796078 .243137 .0392157 rgb
f
161.867 288.894 mo
161.277 287.722 160.597 286.343 160.596 284.98 cv
160.596 284.829 160.605 284.679 160.622 284.53 cv
160.626 284.531 160.629 284.533 160.633 284.535 cv
160.459 286.04 161.213 287.594 161.867 288.894 cv
.054902 .219608 .121569 rgb
f
172.619 330.944 mo
170.101 330.944 li
170.131 330.664 170.165 330.382 170.19 330.101 cv
170.369 328.134 170.42 326.157 170.372 324.183 cv
170.194 316.959 168.766 309.797 166.856 302.848 cv
166.397 301.177 165.907 299.516 165.393 297.863 cv
164.909 296.313 164.385 294.809 163.703 293.334 cv
162.991 291.794 162.213 290.283 161.563 288.713 cv
160.992 287.336 160.498 285.892 160.355 284.4 cv
160.447 284.44 160.533 284.487 160.622 284.53 cv
160.605 284.679 160.596 284.829 160.596 284.98 cv
160.597 286.343 161.277 287.722 161.867 288.894 cv
161.867 288.894 li
162.776 290.702 163.684 292.505 164.547 294.335 cv
165.426 296.199 166.289 298.078 167.006 300.01 cv
167.706 301.898 168.269 303.831 168.782 305.777 cv
169.086 306.931 169.388 308.088 169.683 309.248 cv
169.67 309.443 169.655 309.638 169.649 309.833 cv
169.649 309.835 169.649 309.837 169.649 309.84 cv
169.649 309.84 li
169.649 309.967 169.773 310.091 169.912 310.159 cv
170.557 312.737 171.153 315.328 171.637 317.937 cv
172.01 319.95 172.306 321.979 172.473 324.02 cv
172.596 325.531 172.599 327.04 172.651 328.553 cv
172.661 328.841 172.685 329.272 172.685 329.751 cv
172.685 330.135 172.67 330.549 172.619 330.944 cv
172.619 330.944 li
.796078 .243137 .0392157 rgb
f
71.4561 175.925 mo
71.4629 176.72 71.6133 177.49 72.1836 178.08 cv
72.7773 178.694 73.6533 179.146 74.4639 179.384 cv
76.1729 179.886 77.9609 179.313 79.3301 178.248 cv
80.5566 177.293 81.6465 175.903 82.0078 174.368 cv
82.2891 173.175 82.2451 171.809 81.707 170.693 cv
81.2666 169.781 80.4082 169.126 79.415 169.171 cv
78.4346 168.867 77.2139 169.122 76.3203 169.445 cv
74.8066 169.994 73.4951 170.936 72.54 172.24 cv
71.793 173.259 71.3535 174.514 71.623 175.754 cv
71.5303 175.755 71.4551 175.803 71.4561 175.925 cv
cp
.0627451 .294118 .619608 rgb
f
78.5615 169.595 mo
79.6709 169.612 80.4189 170.488 80.6602 171.521 cv
80.9307 172.684 80.5039 173.903 79.8887 174.883 cv
78.7041 176.768 76.3398 178.608 73.9883 177.829 cv
72.8945 177.466 72.1738 176.517 72.0898 175.372 cv
72.0039 174.2 72.5342 173.153 73.2578 172.271 cv
73.9336 171.728 74.6494 171.22 75.3799 170.767 cv
76.3223 170.184 77.4199 169.579 78.5615 169.595 cv
cp
.219608 .619608 .819608 rgb
f
72.0146 176.747 mo
72.5176 177.59 73.3789 178.176 74.3486 178.388 cv
77.0303 178.975 79.6289 176.848 80.7344 174.558 cv
81.29 173.407 81.4961 172.059 80.9365 170.868 cv
80.8018 170.581 80.6299 170.322 80.4316 170.09 cv
80.5068 170.05 80.5361 169.95 80.4473 169.842 cv
80.3262 169.715 li
80.4756 169.797 80.6162 169.896 80.7441 170.022 cv
81.1543 170.422 81.3867 170.96 81.5195 171.51 cv
82.1367 174.078 80.7275 176.623 78.6426 178.077 cv
77.3496 178.978 75.71 179.421 74.1875 178.852 cv
73.582 178.625 72.9033 178.273 72.4668 177.781 cv
72.2021 177.483 72.0752 177.124 72.0146 176.747 cv
cp
f
46.2471 184.931 mo
46.5322 186.407 48.1152 187.364 49.5449 187.382 cv
51.209 187.405 52.7002 186.153 52.7305 184.448 cv
52.751 183.244 51.7266 181.973 50.5264 181.548 cv
49.6406 180.585 48.291 180.99 47.4414 181.795 cv
46.6152 182.58 46.0225 183.772 46.2471 184.931 cv
cp
.0627451 .294118 .619608 rgb
f
51.3789 183.82 mo
51.416 184.458 51.1367 185.118 50.5635 185.433 cv
49.751 185.88 48.6621 185.478 48.0986 184.821 cv
47.4404 184.053 47.5244 182.861 48.4453 182.358 cv
49.1367 181.981 50.1162 182.085 50.6758 182.616 cv
50.749 182.684 50.8721 182.75 50.9814 182.732 cv
51.209 183.051 51.3555 183.429 51.3789 183.82 cv
cp
.219608 .619608 .819608 rgb
f
46.749 184.441 mo
46.7705 184.038 46.8926 183.64 47.0762 183.27 cv
47.0605 183.492 li
47.0488 184.206 47.4346 184.889 47.96 185.351 cv
48.7705 186.065 50.1416 186.459 51.1055 185.799 cv
51.8145 185.313 52.0234 184.398 51.8408 183.594 cv
51.7422 183.163 51.5156 182.764 51.2061 182.45 cv
51.0732 182.315 50.9229 182.201 50.7617 182.102 cv
50.6797 182.038 50.5928 181.979 50.502 181.927 cv
50.5576 181.91 li
50.9873 182.11 51.374 182.416 51.6729 182.772 cv
52.2539 183.465 52.3994 184.314 52.0869 185.162 cv
51.5908 186.513 50.0029 187.185 48.6553 186.796 cv
47.5723 186.484 46.6846 185.62 46.749 184.441 cv
cp
f
31.7149 242.865 mo
31.9473 243.376 32.3144 243.843 32.8301 244.084 cv
33.1181 244.939 34.1074 245.328 34.9092 244.969 cv
35.6826 244.624 36.2714 243.891 36.7216 243.198 cv
37.1758 242.499 37.5527 241.72 37.6338 240.882 cv
37.7324 239.854 37.4463 238.803 36.6914 238.07 cv
36.0859 237.482 35.1611 237.058 34.2978 237.159 cv
33.878 237.041 33.4219 237.039 33.04 237.189 cv
32.3819 237.448 31.9658 238.065 31.708 238.696 cv
31.1914 239.962 31.1455 241.607 31.7149 242.865 cv
.0627451 .294118 .619608 rgb
f
33.3916 244.242 mo
33.9268 244.303 34.4863 244.145 34.9287 243.841 cv
36.2158 242.958 36.6289 241.073 36.4336 239.609 cv
36.3545 239.02 36.167 238.416 35.7939 237.946 cv
36.0967 238.115 36.3701 238.335 36.5928 238.641 cv
37.5781 239.998 36.9717 241.718 36.1357 242.967 cv
35.7451 243.55 35.252 244.173 34.6064 244.487 cv
34.375 244.598 34.0996 244.671 33.8477 244.588 cv
33.6611 244.526 33.5205 244.39 33.3916 244.242 cv
cp
.219608 .619608 .819608 rgb
f
32.3174 238.612 mo
32.5518 238.167 32.8975 237.735 33.3906 237.572 cv
34.0029 237.37 34.4941 237.692 35.0566 237.876 cv
35.2246 237.845 li
35.3213 237.932 35.4131 238.029 35.4912 238.145 cv
35.9023 238.753 36.0195 239.516 36.0039 240.237 cv
35.9756 241.502 35.4561 243.161 34.1699 243.676 cv
33.6963 243.866 33.1318 243.892 32.7129 243.566 cv
32.3047 243.25 32.0918 242.73 31.9639 242.246 cv
31.6582 241.089 31.7568 239.678 32.3174 238.612 cv
cp
f
19.8438 281.847 mo
20.0762 282.36 20.4434 282.827 20.96 283.067 cv
21.248 283.922 22.2363 284.311 23.0381 283.953 cv
23.8115 283.607 24.4014 282.875 24.8506 282.181 cv
25.3047 281.482 25.6816 280.703 25.7627 279.866 cv
25.8613 278.837 25.5752 277.787 24.8203 277.053 cv
24.2158 276.465 23.29 276.042 22.4268 276.142 cv
22.0068 276.024 21.5508 276.022 21.1689 276.172 cv
20.5107 276.431 20.0957 277.048 19.8379 277.679 cv
19.3203 278.946 19.2744 280.59 19.8438 281.847 cv
cp
.0627451 .294118 .619608 rgb
f
21.5205 283.224 mo
22.0566 283.287 22.6152 283.128 23.0576 282.825 cv
24.3447 281.941 24.7578 280.056 24.5625 278.592 cv
24.4834 278.003 24.2959 277.399 23.9229 276.929 cv
24.2256 277.098 24.499 277.318 24.7217 277.625 cv
25.707 278.981 25.1006 280.702 24.2646 281.951 cv
23.874 282.533 23.3809 283.157 22.7354 283.47 cv
22.5049 283.582 22.2285 283.655 21.9775 283.572 cv
21.79 283.509 21.6494 283.373 21.5205 283.224 cv
cp
.219608 .619608 .819608 rgb
f
20.4463 277.595 mo
20.6807 277.15 21.0264 276.718 21.5205 276.555 cv
22.1328 276.353 22.623 276.675 23.1865 276.86 cv
23.3535 276.829 li
23.4512 276.916 23.542 277.012 23.6211 277.128 cv
24.0313 277.737 24.1494 278.5 24.1328 279.22 cv
24.1045 280.485 23.585 282.144 22.2988 282.659 cv
21.8252 282.849 21.2607 282.875 20.8418 282.549 cv
20.4336 282.232 20.2207 281.713 20.0928 281.228 cv
19.7871 280.072 19.8857 278.662 20.4463 277.595 cv
cp
f
14.7285 324.165 mo
14.9609 324.676 15.3281 325.143 15.8448 325.384 cv
16.1328 326.239 17.1211 326.627 17.9228 326.269 cv
18.6963 325.924 19.2861 325.191 19.7353 324.498 cv
20.1895 323.799 20.5664 323.02 20.6475 322.182 cv
20.7461 321.154 20.46 320.103 19.7061 319.371 cv
19.1006 318.782 18.1748 318.358 17.3115 318.458 cv
16.8916 318.34 16.4355 318.339 16.0537 318.49 cv
15.3955 318.749 14.9805 319.365 14.7227 319.997 cv
14.2051 321.262 14.1592 322.907 14.7285 324.165 cv
.0627451 .294118 .619608 rgb
f
16.4053 325.542 mo
16.9414 325.603 17.5 325.445 17.9424 325.141 cv
19.2295 324.257 19.6426 322.374 19.4473 320.91 cv
19.3682 320.32 19.1807 319.715 18.8076 319.246 cv
19.1104 319.416 19.3838 319.635 19.6064 319.941 cv
20.5918 321.297 19.9854 323.019 19.1494 324.267 cv
18.7588 324.85 18.2656 325.474 17.6201 325.787 cv
17.3896 325.898 17.1133 325.971 16.8623 325.888 cv
16.6748 325.827 16.5342 325.69 16.4053 325.542 cv
cp
.219608 .619608 .819608 rgb
f
15.3311 319.912 mo
15.5654 319.467 15.9111 319.035 16.4053 318.873 cv
17.0176 318.67 17.5078 318.992 18.0713 319.176 cv
18.2383 319.145 li
18.3359 319.232 18.4268 319.329 18.5059 319.445 cv
18.916 320.053 19.0342 320.816 19.0176 321.537 cv
18.9893 322.802 18.4697 324.46 17.1836 324.976 cv
16.71 325.166 16.1455 325.192 15.7266 324.866 cv
15.3184 324.549 15.1055 324.031 14.9775 323.545 cv
14.6719 322.389 14.7705 320.979 15.3311 319.912 cv
cp
f
170.496 288.114 mo
169.898 286.662 169.19 285.281 168.373 283.939 cv
166.653 281.115 164.628 278.502 162.572 275.919 cv
161.578 274.671 160.604 273.399 159.806 272.014 cv
159.012 270.636 158.348 269.174 157.659 267.742 cv
156.309 264.931 154.965 262.104 153.235 259.501 cv
152.331 258.14 151.333 256.82 150.183 255.656 cv
149.056 254.515 147.783 253.537 146.493 252.59 cv
143.797 250.613 141.148 248.56 138.359 246.712 cv
135.502 244.82 132.46 243.151 129.28 241.863 cv
127.682 241.215 126.008 240.666 124.293 240.438 cv
123.605 240.347 122.913 240.322 122.223 240.343 cv
122.14 240.472 121.923 240.467 121.768 240.365 cv
121.138 240.404 120.509 240.479 119.885 240.584 cv
119.857 240.741 119.667 240.738 119.512 240.648 cv
119.284 240.691 119.057 240.737 118.831 240.786 cv
115.668 241.473 112.558 242.563 109.507 243.631 cv
106.662 244.626 103.854 245.728 101.115 246.988 cv
95.6152 249.519 90.4238 252.742 85.9111 256.793 cv
83.4785 258.977 81.4375 261.481 79.6094 264.185 cv
77.7939 266.871 76.0547 269.636 74.4111 272.43 cv
70.9482 278.318 68.4307 284.721 66.9082 291.38 cv
66.1426 294.728 65.5879 298.167 65.4463 301.602 cv
65.3008 305.112 65.7295 308.607 66.0732 312.093 cv
66.4004 315.418 66.6641 318.792 66.2539 322.124 cv
66.0273 323.96 65.627 325.771 65.334 327.598 cv
65.625 326.806 65.9541 326.032 66.3516 325.273 cv
67.8174 322.472 69.7393 319.94 71.1768 317.123 cv
72.6885 314.16 73.9346 311.072 75.2197 308.007 cv
76.4873 304.987 77.5098 301.862 78.875 298.883 cv
80.4287 295.493 82.4512 292.326 83.915 288.893 cv
84.0039 288.686 84.3701 288.873 84.3047 289.064 cv
83.2461 292.199 81.6494 295.075 80.2178 298.046 cv
78.7734 301.047 77.7539 304.222 76.5049 307.304 cv
75.2549 310.389 73.9883 313.481 72.5371 316.478 cv
71.1436 319.355 69.3154 321.946 67.7236 324.708 cv
66.8896 326.155 66.2295 327.628 65.7422 329.224 cv
65.5684 329.792 65.4014 330.37 65.2236 330.944 cv
64.1377 330.944 li
64.1055 330.382 64.1299 329.816 64.1758 329.255 cv
64.2793 327.986 64.4746 326.725 64.6934 325.471 cv
64.9004 324.276 65.1357 323.083 65.292 321.879 cv
65.5068 320.225 65.5254 318.542 65.4727 316.875 cv
65.3604 313.339 64.8438 309.833 64.5996 306.305 cv
64.3574 302.815 64.543 299.365 65.0576 295.906 cv
66.0781 289.065 68.2129 282.326 71.3066 276.139 cv
72.8301 273.094 74.6436 270.231 76.457 267.355 cv
78.2031 264.585 79.9814 261.819 82.1348 259.342 cv
86.2012 254.666 91.5225 250.988 96.9717 248.105 cv
102.405 245.231 108.194 243.11 114.054 241.29 cv
115.762 240.758 117.503 240.236 119.269 239.918 cv
118.939 236.804 118.57 233.691 118.354 230.566 cv
118.129 227.296 118.067 224.029 118.225 220.754 cv
118.382 217.464 118.681 214.183 118.819 210.892 cv
118.958 207.607 118.91 204.313 118.826 201.027 cv
118.78 199.231 118.735 197.417 118.515 195.632 cv
118.298 193.882 117.929 192.132 118.046 190.36 cv
118.06 190.152 118.372 190.266 118.378 190.43 cv
118.434 192.041 118.771 193.611 119.05 195.193 cv
119.329 196.78 119.434 198.378 119.519 199.986 cv
119.691 203.238 119.761 206.519 119.669 209.774 cv
119.576 213.067 119.283 216.349 119.093 219.637 cv
118.902 222.933 118.869 226.228 119.031 229.526 cv
119.2 232.966 119.507 236.396 119.828 239.825 cv
120.39 239.739 120.952 239.676 121.518 239.642 cv
121.004 236.889 121.155 234.063 121.143 231.276 cv
121.127 227.913 120.995 224.551 121.007 221.188 cv
121.02 217.815 121.199 214.45 121.144 211.074 cv
121.087 207.667 120.92 204.264 120.761 200.861 cv
120.584 197.08 120.323 193.258 120.532 189.474 cv
120.504 189.29 120.841 189.375 120.852 189.542 cv
121.062 192.921 121.146 196.311 121.311 199.693 cv
121.474 203.039 121.651 206.385 121.736 209.735 cv
121.821 213.114 121.706 216.476 121.646 219.854 cv
121.586 223.19 121.704 226.526 121.766 229.861 cv
121.825 233.083 121.56 236.428 122.146 239.618 cv
122.843 239.604 123.543 239.636 124.246 239.73 cv
127.679 240.19 130.919 241.775 133.956 243.357 cv
137.039 244.963 139.912 246.929 142.701 248.996 cv
144.036 249.985 145.366 250.979 146.707 251.959 cv
148.011 252.913 149.3 253.897 150.459 255.025 cv
155.147 259.59 157.225 265.889 160.296 271.499 cv
161.873 274.378 164.192 276.779 166.091 279.441 cv
167.956 282.057 169.76 284.78 170.892 287.806 cv
171.084 288.322 171.257 288.854 171.439 289.384 cv
171.391 289.628 171.348 289.875 171.312 290.122 cv
171.021 289.459 170.769 288.777 170.496 288.114 cv
cp
.0588235 .309804 .231373 rgb
f
68.7119 221.288 mo
67.7099 225.668 66.4443 229.987 65.0391 234.254 cv
62.1953 242.893 59.0987 251.447 56.248 260.083 cv
54.8145 264.427 53.4287 268.788 52.1386 273.176 cv
50.916 277.339 50.1934 281.6 49.2578 285.83 cv
48.7959 287.917 48.2666 289.994 47.5674 292.016 cv
46.874 294.021 45.9209 295.896 45.0908 297.842 cv
43.5166 301.538 42.4345 305.395 41.7178 309.343 cv
40.9278 313.696 40.5927 318.126 40.0498 322.514 cv
39.833 324.262 39.6553 326.025 39.3018 327.751 cv
39.084 328.813 38.8447 329.873 38.666 330.944 cv
38.0049 330.944 li
38.0586 330.601 38.1201 330.258 38.1846 329.917 cv
38.4072 328.731 38.6962 327.551 38.8653 326.355 cv
39.5107 321.802 39.8457 317.212 40.3828 312.648 cv
40.8525 308.642 41.6534 304.683 42.958 300.863 cv
43.6211 298.922 44.4131 297.034 45.293 295.182 cv
46.2432 293.181 46.9795 291.09 47.5732 288.957 cv
48.7314 284.791 49.374 280.503 50.4072 276.307 cv
51.4883 271.915 52.9521 267.6 54.3584 263.305 cv
57.2285 254.545 60.3271 245.865 63.292 237.137 cv
64.7549 232.834 66.166 228.513 67.3223 224.117 cv
67.8701 222.031 68.3926 219.929 68.7793 217.807 cv
69.1416 215.814 69.416 213.786 70.0068 211.842 cv
70.2617 211.001 70.5986 210.175 70.9824 209.385 cv
71.0322 209.282 71.25 209.413 71.208 209.512 cv
70.4472 211.327 70.1094 213.314 69.8105 215.249 cv
69.499 217.274 69.169 219.29 68.7119 221.288 cv
f
75.9424 267.415 mo
72.8643 267.451 69.7627 266.646 66.8154 265.832 cv
65.4199 265.448 64.0342 265.026 62.6387 264.64 cv
61.416 264.301 60.1904 263.966 59.001 263.522 cv
57.791 263.07 56.6094 262.495 55.626 261.65 cv
54.206 262.48 52.2998 262.379 50.7324 262.23 cv
48.9121 262.057 47.123 261.678 45.3409 261.282 cv
43.041 260.769 40.6943 260.173 38.6748 258.913 cv
38.207 258.62 37.7627 258.29 37.3535 257.919 cv
37.0703 257.665 36.8095 257.338 36.4521 257.184 cv
36.414 257.17 li
35.873 258.684 35.3222 260.194 34.7441 261.691 cv
33.3389 265.333 31.7149 268.889 30.3994 272.566 cv
29.0693 276.282 28.2148 280.097 27.7207 284.01 cv
27.2217 287.961 27.0244 291.941 26.708 295.909 cv
26.6729 296.357 26.6299 296.806 26.5918 297.254 cv
27.1152 297.403 27.6338 297.571 28.1465 297.75 cv
29.9531 298.379 31.7275 299.031 33.584 299.503 cv
35.3926 299.962 37.2871 300.374 39.1631 300.332 cv
40.0313 300.312 40.8965 300.217 41.7646 300.193 cv
42.4492 300.172 43.2276 300.151 43.876 300.409 cv
44.4951 300.655 44.9072 301.169 45.2881 301.691 cv
45.7803 302.364 46.3047 302.92 46.9902 303.402 cv
48.4903 304.455 50.2588 305.117 51.9942 305.668 cv
54.0029 306.304 56.0752 306.763 58.1689 307.008 cv
59.291 307.139 60.3945 307.126 61.5205 307.064 cv
62.5498 307.007 63.666 306.877 64.6777 307.134 cv
64.8096 307.165 64.9531 307.414 64.7373 307.425 cv
63.7754 307.475 62.8174 307.469 61.8545 307.548 cv
60.873 307.628 59.8994 307.695 58.916 307.609 cv
57.0107 307.442 55.1191 307.101 53.2754 306.594 cv
51.5117 306.111 49.7383 305.519 48.1143 304.668 cv
47.3633 304.275 46.6397 303.824 45.9951 303.271 cv
45.4053 302.764 45.0068 302.148 44.5244 301.55 cv
44.0039 300.906 43.3955 300.786 42.5928 300.767 cv
41.7275 300.748 40.8633 300.836 40 300.884 cv
38.1455 300.987 36.3018 300.696 34.499 300.28 cv
32.6465 299.853 30.8486 299.287 29.0635 298.636 cv
28.2197 298.33 27.3877 298.046 26.543 297.823 cv
26.2461 301.182 25.8799 304.537 25.4561 307.882 cv
24.9433 311.922 24.3486 315.953 23.6914 319.972 cv
23.1162 323.493 22.2021 326.995 21.9571 330.561 cv
21.9483 330.689 21.9483 330.816 21.9424 330.944 cv
21.2832 330.944 li
21.333 328.126 21.9434 325.318 22.4707 322.566 cv
23.2149 318.686 23.7754 314.765 24.3154 310.853 cv
24.878 306.781 25.3594 302.697 25.7422 298.604 cv
25.7725 298.286 25.7959 297.966 25.8233 297.648 cv
25.1367 297.498 24.4375 297.392 23.7119 297.354 cv
22.0723 297.267 20.4375 296.958 18.876 296.452 cv
17.3223 295.948 15.793 295.23 14.6035 294.088 cv
14.2676 293.766 14.7578 293.517 15.042 293.79 cv
16.1035 294.809 17.4971 295.443 18.8808 295.898 cv
20.2842 296.359 21.7617 296.65 23.2343 296.754 cv
24.0117 296.809 24.7754 296.836 25.542 296.994 cv
25.6533 297.016 25.7627 297.044 25.8721 297.07 cv
26.1631 293.6 26.3653 290.123 26.6943 286.657 cv
27.0733 282.669 27.6621 278.689 28.835 274.85 cv
29.9863 271.08 31.5821 267.468 33.0723 263.825 cv
33.9912 261.576 34.833 259.296 35.6504 257.008 cv
34.8359 256.965 33.9482 257.248 33.2119 257.408 cv
30.2519 258.052 27.3281 257.433 24.4502 256.687 cv
24.1377 256.607 24.0068 256.062 24.416 256.167 cv
26.9942 256.833 29.7558 257.522 32.4248 256.984 cv
33.4775 256.772 34.5489 256.386 35.6367 256.476 cv
35.831 256.501 li
36.3096 255.154 36.7812 253.804 37.2558 252.456 cv
38.6162 248.591 39.9805 244.715 41.1416 240.786 cv
42.2011 237.195 42.7784 233.491 43.6172 229.848 cv
40.9785 230.407 38.1397 230.304 35.669 229.149 cv
35.2353 228.946 35.2949 228.323 35.8281 228.524 cv
37.0293 228.977 38.25 229.32 39.5371 229.408 cv
40.7549 229.491 41.9824 229.388 43.1768 229.144 cv
43.3926 229.099 43.6045 229.046 43.8164 228.994 cv
44.2373 227.265 44.7226 225.581 44.9746 223.813 cv
45.2226 222.074 45.3955 220.318 45.8652 218.62 cv
45.9746 218.223 46.0947 217.827 46.2471 217.445 cv
46.3496 217.187 46.458 216.778 46.6944 216.624 cv
46.8447 216.524 47.1319 216.682 47.124 216.868 cv
47.1191 217.001 47.0215 217.087 46.9668 217.205 cv
46.8847 217.27 li
46.7666 217.546 46.7002 217.935 46.6387 218.132 cv
46.5059 218.56 46.3965 218.994 46.3027 219.431 cv
46.1171 220.293 45.9951 221.168 45.8799 222.041 cv
45.6553 223.739 45.4941 225.452 45.0527 227.11 cv
44.9052 227.662 44.7685 228.216 44.6357 228.771 cv
46.5185 228.213 48.3028 227.373 50.0518 226.475 cv
54.1875 224.355 58.1983 221.962 61.9815 219.261 cv
64.1025 217.748 66.1943 216.155 68.0889 214.362 cv
68.2119 214.467 li
64.8408 217.882 61.0937 220.805 57.04 223.368 cv
54.9912 224.663 52.8858 225.866 50.7403 226.993 cv
48.7159 228.055 46.6475 229.061 44.4317 229.649 cv
43.751 232.635 43.2109 235.652 42.4902 238.63 cv
41.542 242.545 40.17 246.371 38.8545 250.174 cv
38.1006 252.356 37.3496 254.542 36.5752 256.719 cv
36.9336 256.885 37.2461 257.129 37.581 257.445 cv
39.3242 259.093 41.707 259.856 43.9883 260.417 cv
45.7607 260.853 47.5595 261.249 49.3672 261.509 cv
50.4659 261.666 51.5801 261.772 52.6914 261.725 cv
53.6045 261.687 54.5771 261.554 55.3535 261.036 cv
55.5 260.938 55.6923 261.031 55.8037 261.136 cv
57.5947 262.829 60.2402 263.437 62.5439 264.079 cv
65.3057 264.846 68.0391 265.713 70.8418 266.324 cv
72.5088 266.686 74.1914 266.952 75.8857 267.143 cv
76.0215 267.159 76.1348 267.414 75.9424 267.415 cv
f
37.8262 194.702 mo
37.3965 198.078 36.7295 201.419 36.1445 204.771 cv
35.8516 206.453 35.5684 208.135 35.333 209.826 cv
35.1025 211.486 34.9991 213.167 34.706 214.817 cv
34.2266 217.513 33.3457 220.11 32.8935 222.802 cv
32.5518 224.034 32.1113 225.239 31.7461 226.464 cv
31.332 227.855 30.9326 229.251 30.5156 230.642 cv
29.6817 233.429 28.8525 236.218 28.2031 239.056 cv
27.6172 241.617 27.1709 244.209 26.6289 246.781 cv
26.082 249.38 25.502 251.974 24.8916 254.56 cv
24.2852 257.132 23.6318 259.692 22.9873 262.255 cv
22.3525 264.785 21.7276 267.319 20.9834 269.819 cv
20.2588 272.249 19.2637 274.584 18.4561 276.986 cv
17.6426 279.402 16.9336 281.865 16.2393 284.317 cv
15.5303 286.818 14.8926 289.342 14.4307 291.902 cv
14.085 293.816 13.8164 295.774 13.7627 297.728 cv
13.2344 299.935 13.1836 302.252 12.9072 304.5 cv
12.626 306.79 12.417 309.09 12.1445 311.382 cv
11.875 313.644 11.5303 315.894 11.1797 318.145 cv
10.5195 322.374 9.83792 326.652 9.82126 330.944 cv
9.42972 330.944 li
9.4844 330.316 9.52931 329.687 9.56443 329.057 cv
9.64256 327.663 9.68945 326.266 9.78614 324.873 cv
10.1445 319.694 10.7392 314.527 11.3593 309.374 cv
11.6612 306.87 12.0186 304.369 12.2862 301.86 cv
12.4131 300.667 12.5283 299.466 12.582 298.266 cv
12.5938 298.007 12.6045 297.748 12.6113 297.489 cv
12.6446 297.231 12.6777 296.974 12.7129 296.716 cv
12.9131 295.245 13.0059 293.763 13.1826 292.29 cv
13.5039 289.617 14.1572 287.005 14.8838 284.417 cv
15.6104 281.833 16.3321 279.249 17.0234 276.655 cv
17.7256 274.021 18.545 271.438 19.416 268.857 cv
19.8379 267.608 20.252 266.356 20.6465 265.099 cv
20.7519 264.764 20.8574 264.423 20.9541 264.079 cv
21.6064 262.859 21.961 261.441 22.3155 260.115 cv
22.6875 258.723 22.9961 257.316 23.2979 255.908 cv
24.4336 250.613 25.7168 245.345 27.0225 240.089 cv
27.6933 237.389 28.3907 234.695 29.1367 232.014 cv
29.791 229.662 30.4922 227.309 31.0185 224.922 cv
31.6514 223.648 31.9727 222.166 32.333 220.804 cv
32.7305 219.303 33.0752 217.79 33.461 216.286 cv
34.1552 213.579 34.6552 210.85 35.0342 208.082 cv
35.413 205.315 35.7334 202.537 36.2666 199.793 cv
36.8008 197.046 37.5508 194.373 37.6524 191.558 cv
37.6905 190.525 37.5186 189.367 37.8994 188.379 cv
38.1582 187.708 38.6972 187.419 39.3184 187.375 cv
38.6142 188.134 38.4248 189.271 38.3154 190.265 cv
38.1523 191.744 38.0147 193.225 37.8262 194.702 cv
.898039 .486275 .145098 rgb
f
41.6455 286.747 mo
41.623 287.521 41.8692 288.417 42.7598 288.54 cv
44.2392 288.746 44.4951 287.021 44.7207 285.964 cv
44.8946 285.148 45.1826 284.361 45.3926 283.553 cv
45.543 282.977 45.6826 282.353 45.6611 281.746 cv
45.9834 281.784 46.3105 281.774 46.624 281.698 cv
47.2851 281.538 47.9092 281.014 48.0644 280.333 cv
48.2343 279.586 47.9668 278.749 47.6621 278.074 cv
47.5049 277.724 47.3233 277.385 47.1064 277.068 cv
47.0489 276.983 46.9541 276.82 46.8427 276.701 cv
46.9219 276.416 46.9834 276.125 47.0283 275.82 cv
47.166 274.888 47.2431 273.776 46.7978 272.911 cv
46.4688 272.269 45.7138 271.871 45.0498 272.082 cv
45.0488 272.014 li
45.0293 269.117 45.7852 266.268 46.3203 263.439 cv
46.9345 260.191 47.5713 256.882 48.6855 253.763 cv
49.7646 250.742 51.1972 247.862 52.2041 244.813 cv
53.253 241.637 54.1143 238.401 54.8105 235.13 cv
56.1778 228.709 56.9024 222.17 57.2685 215.621 cv
57.6426 208.958 57.4785 202.3 57.5908 195.634 cv
57.6475 192.29 57.7383 188.85 58.419 185.564 cv
58.7266 184.079 59.2119 182.633 59.7939 181.234 cv
59.9355 180.893 60.083 180.555 60.2314 180.217 cv
61.126 180.6 62.2881 180.036 62.9014 179.362 cv
63.6358 178.554 63.7578 177.439 63.4551 176.421 cv
63.1719 175.472 62.5791 174.687 61.7979 174.089 cv
61.1104 173.564 60.1074 173.077 59.25 173.476 cv
58.4375 173.855 58.2403 174.853 58.1777 175.68 cv
58.084 175.759 57.9951 175.842 57.9121 175.929 cv
57.0537 176.833 56.5723 178.078 56.1953 179.246 cv
55.6914 180.805 55.3096 182.413 54.9619 184.013 cv
54.1269 187.863 53.6934 191.784 53.5635 195.719 cv
53.4248 199.93 53.6104 204.141 53.7236 208.35 cv
53.836 212.537 53.8252 216.708 53.4697 220.884 cv
53.1328 224.832 52.5937 228.765 51.8155 232.652 cv
51.041 236.521 50.0273 240.341 48.7675 244.081 cv
47.4795 247.901 45.9756 251.632 44.8281 255.502 cv
43.7002 259.309 42.6836 263.222 42.1836 267.167 cv
41.9521 268.992 41.9424 270.772 42.1006 272.601 cv
42.2031 273.779 42.2862 275.009 42.666 276.139 cv
42.4873 276.012 42.2451 275.97 42.2021 276.202 cv
42.0928 276.786 42.1895 277.457 42.3105 278.031 cv
42.4267 278.582 42.6397 279.164 43.0723 279.543 cv
43.0547 279.59 li
43.0078 279.916 43.2246 280.257 43.4385 280.521 cv
43.2803 280.875 43.1338 281.224 43.001 281.597 cv
42.788 282.196 42.5762 282.793 42.3808 283.398 cv
42.0322 284.477 41.6797 285.605 41.6455 286.747 cv
.298039 .286275 .145098 rgb
f
60.4336 179.761 mo
60.8232 178.879 61.2139 177.999 61.5361 177.089 cv
61.4277 177.028 li
61.375 177.114 li
61.4326 177.003 li
61.7891 176.269 61.8809 175.385 60.9639 175.042 cv
60.1953 174.755 59.3594 174.925 58.6699 175.331 cv
58.8887 174.715 59.1611 174.06 59.7969 173.909 cv
60.4971 173.742 61.2305 174.22 61.7305 174.661 cv
62.3184 175.179 62.7266 175.837 62.9121 176.603 cv
63.1162 177.448 62.9375 178.323 62.3496 178.975 cv
62.0615 179.295 61.6758 179.542 61.2686 179.682 cv
60.9717 179.784 60.7061 179.808 60.4336 179.761 cv
cp
.219608 .619608 .819608 rgb
f
44.6289 273.487 mo
44.626 273.681 44.6035 273.875 44.5645 274.064 cv
44.5615 274.075 li
44.4473 274.065 43.8086 275.768 43.3594 276.431 cv
43.1289 275.868 43.0078 275.26 42.9199 274.661 cv
42.6846 273.055 42.5371 271.386 42.5938 269.765 cv
42.6572 267.917 42.9561 266.083 43.3164 264.273 cv
44.0703 260.488 45.0733 256.753 46.2666 253.084 cv
47.4483 249.452 48.9092 245.92 50.042 242.271 cv
51.1533 238.691 52.0411 235.042 52.7168 231.355 cv
53.3897 227.682 53.8515 223.974 54.1445 220.252 cv
54.4551 216.298 54.4404 212.341 54.3321 208.379 cv
54.2236 204.371 54.0498 200.36 54.1582 196.349 cv
54.2607 192.54 54.6426 188.744 55.4053 185.008 cv
55.7451 183.342 56.1435 181.681 56.625 180.049 cv
56.9687 178.885 57.3838 177.689 58.1181 176.708 cv
58.4678 176.241 58.9043 175.812 59.458 175.6 cv
59.8535 175.449 60.7802 175.261 61.1113 175.636 cv
61.3623 175.92 61.169 176.546 61.0821 176.86 cv
60.9541 177.316 60.749 177.748 60.5742 178.187 cv
60.6611 178.302 li
60.5352 178.527 60.4073 178.75 60.2851 178.981 cv
60.169 179.198 60.0625 179.417 59.9541 179.636 cv
59.7959 179.638 59.6904 179.791 59.8047 179.932 cv
58.6446 182.344 57.8877 184.88 57.5547 187.554 cv
57.1367 190.908 57.0488 194.292 57.0283 197.668 cv
56.9883 204.336 56.9082 211.006 56.4385 217.661 cv
55.9668 224.335 55.0869 230.997 53.5107 237.505 cv
52.7304 240.726 51.8223 243.945 50.6016 247.029 cv
49.4131 250.032 47.9952 252.954 47.1885 256.093 cv
46.377 259.252 45.7911 262.454 45.1484 265.648 cv
44.6377 268.187 44.0674 270.911 44.6289 273.487 cv
1 1 1 rgb
f
43.7344 279.892 mo
44.6885 280.101 45.5332 279.083 46.0732 278.332 cv
46.3594 277.935 46.5674 277.52 46.7227 277.084 cv
46.8662 277.413 47 277.747 47.1201 278.083 cv
47.3105 278.623 47.5303 279.254 47.4639 279.842 cv
47.4902 280.112 47.4521 280.406 47.291 280.625 cv
47.0859 280.904 46.7461 281.052 46.4219 281.145 cv
46.0684 281.246 45.6953 281.279 45.3301 281.227 cv
45.1318 281.199 44.9326 281.138 44.7539 281.044 cv
44.5703 280.948 44.3291 280.804 44.2656 280.593 cv
44.1738 280.517 44.0859 280.436 44.0059 280.345 cv
43.8887 280.212 43.8145 280.051 43.7344 279.892 cv
cp
f
42.3262 287.273 mo
42.3076 286.853 42.3818 286.435 42.4639 286.025 cv
42.6729 284.98 43.0195 283.963 43.3799 282.963 cv
43.6016 282.345 43.8818 281.731 44.0391 281.094 cv
44.1982 281.21 44.3682 281.314 44.543 281.404 cv
44.7754 281.523 45.0254 281.617 45.2832 281.679 cv
45.1719 283.145 44.4775 284.519 44.1484 285.944 cv
44.0176 286.507 43.9131 287.152 43.5449 287.619 cv
43.3271 287.893 42.8213 288.125 42.5352 287.935 cv
42.3926 287.84 42.3369 287.5 42.3262 287.273 cv
cp
f
43.0732 277.087 mo
43.1777 277.277 43.458 277.367 43.6182 277.207 cv
43.7803 277.043 43.9121 276.863 44.0313 276.675 cv
44.5732 276.199 44.8936 275.483 45.0488 274.791 cv
45.1953 274.139 45.2314 273.43 45.0791 272.771 cv
45.0693 272.656 li
45.3672 272.612 45.7041 272.569 45.9121 272.698 cv
46.1289 272.831 46.2559 273.194 46.3193 273.477 cv
46.4961 274.267 46.4072 275.133 46.251 275.917 cv
46.1006 276.672 45.8535 277.291 45.3994 277.913 cv
45.0449 278.398 43.9893 279.899 43.3486 278.99 cv
42.8848 278.332 42.9141 277.464 42.8789 276.683 cv
42.9395 276.82 43.001 276.956 43.0732 277.087 cv
cp
f
15.4101 290.812 mo
15.8691 288.581 16.4492 286.375 17.0791 284.186 cv
16.9072 285.305 16.75 286.427 16.5234 287.537 cv
16.3144 288.558 16.0635 289.61 15.5694 290.537 cv
15.5195 290.63 15.4668 290.722 15.4101 290.812 cv
.0745098 .32549 .203922 rgb
f
28.6515 278.633 mo
28.7872 278.024 28.9334 277.419 29.0905 276.815 cv
28.9531 277.424 28.8087 278.03 28.6515 278.633 cv
f
21.7607 269.876 mo
21.9013 269.422 22.0387 268.967 22.1688 268.508 cv
22.041 268.96 21.9073 269.409 21.7687 269.857 cv
21.766 269.863 21.7634 269.87 21.7607 269.876 cv
.0352941 .231373 .156863 rgb
f
28.5032 275.995 mo
29.059 271.724 30.7927 267.548 30.7745 263.204 cv
31.0176 262.664 31.29 262.138 31.6064 261.635 cv
31.6933 261.497 31.6113 261.289 31.4512 261.252 cv
31.045 261.159 30.6397 261.065 30.2334 260.977 cv
29.4717 260.813 28.6439 260.618 27.837 260.618 cv
27.5069 260.618 27.1805 260.65 26.8633 260.731 cv
25.8702 260.984 25.2148 261.79 24.7354 262.651 cv
24.3477 263.347 24.04 264.089 23.7578 264.833 cv
23.3594 265.888 22.9444 266.937 22.5244 267.984 cv
22.2741 268.609 22.021 269.233 21.7687 269.857 cv
21.9073 269.409 22.041 268.96 22.1688 268.508 cv
22.2006 268.396 22.2319 268.284 22.2627 268.171 cv
23.294 264.424 24.25 260.65 25.1537 256.866 cv
26.9565 257.315 28.7765 257.677 30.6121 257.677 cv
31.4753 257.677 32.3422 257.597 33.2119 257.408 cv
33.8971 257.259 34.7134 257.004 35.4798 257.004 cv
35.537 257.004 35.5939 257.005 35.6504 257.008 cv
35.4446 257.584 35.2372 258.16 35.0275 258.735 cv
34.6028 259.345 34.1736 259.952 33.8076 260.597 cv
32.9658 262.079 32.4599 263.786 31.9668 265.409 cv
31.5594 266.747 31.1402 268.088 30.7674 269.438 cv
30.0603 271.219 29.395 273.016 28.835 274.85 cv
28.7188 275.23 28.6083 275.612 28.5032 275.995 cv
.0745098 .32549 .203922 rgb
f
46.611 216.693 mo
46.33 216.659 46.0498 216.617 45.7715 216.568 cv
45.7483 216.564 45.7253 216.559 45.7022 216.555 cv
46.0041 216.61 46.3079 216.655 46.613 216.691 cv
46.6123 216.692 46.6116 216.692 46.611 216.693 cv
.0352941 .231373 .156863 rgb
f
32.9646 224.685 mo
32.9646 224.685 li
32.9654 224.685 32.9663 224.684 32.9671 224.684 cv
32.9663 224.684 32.9654 224.685 32.9646 224.685 cv
32.9606 224.684 mo
32.9234 224.684 32.8822 224.67 32.8431 224.647 cv
32.8822 224.67 32.9234 224.684 32.9606 224.684 cv
46.611 216.693 mo
46.3299 216.659 46.0499 216.617 45.7715 216.568 cv
46.0498 216.617 46.33 216.659 46.611 216.693 cv
46.611 216.693 li
.133333 .431373 .301961 rgb
f
30.3972 257.177 mo
28.673 257.177 26.9394 256.804 25.2683 256.385 cv
25.5479 255.209 25.8224 254.032 26.0928 252.855 cv
26.6875 250.265 27.248 247.667 27.7763 245.064 cv
28.2959 242.509 28.7539 239.946 29.3994 237.419 cv
30.0381 234.922 30.7735 232.451 31.4834 229.974 cv
31.8379 228.738 32.1924 227.502 32.501 226.253 cv
32.6328 225.719 32.7344 225.179 32.8291 224.639 cv
32.8337 224.642 32.8384 224.645 32.8431 224.647 cv
32.8822 224.67 32.9234 224.684 32.9606 224.684 cv
32.9619 224.684 32.9632 224.685 32.9646 224.685 cv
32.9646 224.685 li
32.9646 224.685 li
32.9654 224.685 32.9663 224.684 32.9671 224.684 cv
33.0205 224.684 33.0644 224.655 33.08 224.584 cv
33.8476 221.129 35.126 217.787 35.6084 214.266 cv
35.7314 213.361 35.8261 212.452 35.9258 211.542 cv
36.5342 212.531 37.5547 213.281 38.5234 213.874 cv
39.5908 214.527 40.7373 215.041 41.9111 215.469 cv
43.1397 215.918 44.414 216.32 45.7022 216.555 cv
45.7022 216.555 li
45.7253 216.559 45.7483 216.564 45.7715 216.568 cv
46.0499 216.617 46.3299 216.659 46.611 216.693 cv
46.4308 216.878 46.3367 217.219 46.2471 217.445 cv
46.0947 217.827 45.9746 218.223 45.8652 218.62 cv
45.3955 220.318 45.2226 222.074 44.9746 223.813 cv
44.7226 225.581 44.2373 227.265 43.8164 228.994 cv
43.6045 229.046 43.3926 229.099 43.1768 229.144 cv
42.257 229.332 41.3176 229.436 40.3781 229.436 cv
40.0976 229.436 39.8171 229.427 39.5371 229.408 cv
38.25 229.32 37.0293 228.977 35.8281 228.524 cv
35.7556 228.497 35.6919 228.484 35.6369 228.484 cv
35.2878 228.484 35.2943 228.973 35.669 229.149 cv
37.2015 229.866 38.8754 230.177 40.5556 230.177 cv
41.5841 230.177 42.6153 230.06 43.6172 229.848 cv
43.2238 231.556 42.888 233.278 42.533 234.995 cv
42.6992 233.808 42.8208 232.613 42.8838 231.409 cv
42.8916 231.267 42.7588 231.15 42.624 231.148 cv
41.1943 231.137 39.7402 230.751 38.3369 230.518 cv
37.5342 230.384 36.7295 230.256 35.9199 230.173 cv
35.5654 230.137 35.1969 230.099 34.8316 230.099 cv
34.5921 230.099 34.3541 230.116 34.1221 230.16 cv
33.0273 230.367 32.6748 231.72 32.4121 232.639 cv
32.2022 233.373 32.0429 234.119 31.8799 234.864 cv
31.7002 235.683 31.4356 236.468 31.1972 237.272 cv
30.5049 239.609 29.9883 241.996 29.5645 244.394 cv
29.3164 245.799 28.9824 247.169 28.6543 248.557 cv
28.3037 250.036 27.9648 251.545 27.8936 253.068 cv
27.8399 254.21 27.9658 255.406 28.9278 256.157 cv
29.813 256.849 31.028 257.016 32.1618 257.016 cv
32.1944 257.016 32.227 257.016 32.2595 257.016 cv
31.6422 257.128 31.0204 257.177 30.3972 257.177 cv
40.3407 245.859 mo
41.1442 243.474 41.8995 241.069 42.4902 238.63 cv
43.2109 235.652 43.751 232.635 44.4317 229.649 cv
46.1956 229.181 47.8663 228.448 49.4956 227.632 cv
48.59 228.404 47.723 229.219 46.962 230.137 cv
46.3506 230.876 45.8086 231.671 45.3682 232.524 cv
44.8076 233.61 44.4453 234.782 44.0342 235.928 cv
42.8428 239.254 41.6063 242.562 40.3407 245.859 cv
.0745098 .32549 .203922 rgb
f
48.5089 216.808 mo
48.5078 216.808 48.5068 216.808 48.5057 216.808 cv
48.0317 216.808 47.5575 216.786 47.0856 216.743 cv
47.0845 216.742 47.0834 216.74 47.0823 216.739 cv
47.5469 216.779 48.0135 216.798 48.4801 216.798 cv
48.548 216.798 48.6158 216.797 48.6836 216.796 cv
48.6777 216.8 48.6718 216.804 48.666 216.807 cv
48.6143 216.808 48.5626 216.808 48.5109 216.808 cv
48.5103 216.808 48.5095 216.808 48.5089 216.808 cv
.0352941 .231373 .156863 rgb
f
48.5089 216.808 mo
48.5089 216.808 li
48.5095 216.808 48.5103 216.808 48.5109 216.808 cv
48.5103 216.808 48.5095 216.808 48.5089 216.808 cv
48.5057 216.808 mo
48.0316 216.808 47.5576 216.786 47.0856 216.743 cv
47.0856 216.743 li
47.5575 216.786 48.0317 216.808 48.5057 216.808 cv
.133333 .431373 .301961 rgb
f
44.6357 228.771 mo
44.7685 228.216 44.9052 227.662 45.0527 227.11 cv
45.4941 225.452 45.6553 223.739 45.8799 222.041 cv
45.9951 221.168 46.1171 220.293 46.3027 219.431 cv
46.3965 218.994 46.5059 218.56 46.6387 218.132 cv
46.7002 217.935 46.7666 217.546 46.8847 217.27 cv
46.9668 217.205 li
47.0215 217.087 47.1191 217.001 47.124 216.868 cv
47.1259 216.824 47.1112 216.781 47.0856 216.743 cv
47.5576 216.786 48.0316 216.808 48.5057 216.808 cv
48.5068 216.808 48.5078 216.808 48.5089 216.808 cv
48.5089 216.808 li
48.5089 216.808 li
48.5095 216.808 48.5103 216.808 48.5109 216.808 cv
48.5626 216.808 48.6143 216.808 48.666 216.807 cv
48.3598 216.994 48.0663 217.2 47.8067 217.452 cv
47.1074 218.129 46.6768 219.031 46.4043 219.954 cv
45.8047 221.981 45.8056 224.129 45.6494 226.22 cv
45.6386 226.356 45.7749 226.485 45.9095 226.485 cv
45.9332 226.485 45.9567 226.481 45.9795 226.472 cv
48.4071 225.546 50.8249 224.59 53.2098 223.559 cv
53.1681 223.941 53.1243 224.323 53.0786 224.705 cv
52.8992 224.858 52.7185 225.009 52.5368 225.159 cv
51.714 225.609 50.8855 226.048 50.0518 226.475 cv
48.3028 227.373 46.5185 228.213 44.6357 228.771 cv
.0745098 .32549 .203922 rgb
f
28.3789 279.627 mo
28.2837 278.405 28.3469 277.196 28.5032 275.995 cv
28.6083 275.612 28.7188 275.23 28.835 274.85 cv
29.395 273.016 30.0603 271.219 30.7674 269.438 cv
30.6621 269.82 30.5604 270.202 30.4639 270.585 cv
29.9444 272.647 29.5591 274.742 29.0905 276.815 cv
28.9334 277.419 28.7872 278.024 28.6515 278.633 cv
28.5648 278.965 28.4742 279.297 28.3789 279.627 cv
35.0275 258.735 mo
35.2372 258.16 35.4446 257.584 35.6504 257.008 cv
35.5939 257.005 35.537 257.004 35.4798 257.004 cv
34.7134 257.004 33.8971 257.259 33.2119 257.408 cv
32.3422 257.597 31.4753 257.677 30.6121 257.677 cv
28.7765 257.677 26.9565 257.315 25.1537 256.866 cv
25.1919 256.706 25.2303 256.545 25.2683 256.385 cv
26.9394 256.804 28.673 257.177 30.3972 257.177 cv
31.0204 257.177 31.6422 257.128 32.2595 257.016 cv
32.494 257.014 32.7244 257.005 32.9472 256.993 cv
34.123 256.927 35.3213 256.731 36.456 256.384 cv
36.0724 257.221 35.5534 257.979 35.0275 258.735 cv
39.5966 247.789 mo
40.7242 243.554 41.9263 239.327 42.533 234.995 cv
42.888 233.278 43.2238 231.556 43.6172 229.848 cv
42.6153 230.06 41.5841 230.177 40.5556 230.177 cv
38.8754 230.177 37.2015 229.866 35.669 229.149 cv
35.2943 228.973 35.2878 228.484 35.6369 228.484 cv
35.6919 228.484 35.7556 228.497 35.8281 228.524 cv
37.0293 228.977 38.25 229.32 39.5371 229.408 cv
39.8171 229.427 40.0976 229.436 40.3781 229.436 cv
41.3176 229.436 42.257 229.332 43.1768 229.144 cv
43.3926 229.099 43.6045 229.046 43.8164 228.994 cv
44.2373 227.265 44.7226 225.581 44.9746 223.813 cv
45.2226 222.074 45.3955 220.318 45.8652 218.62 cv
45.9746 218.223 46.0947 217.827 46.2471 217.445 cv
46.3367 217.219 46.4308 216.878 46.611 216.693 cv
46.611 216.693 li
46.6116 216.692 46.6123 216.692 46.613 216.691 cv
46.7691 216.709 46.9256 216.725 47.0823 216.739 cv
47.0834 216.74 47.0845 216.742 47.0856 216.743 cv
47.0856 216.743 li
47.1112 216.781 47.1259 216.824 47.124 216.868 cv
47.1191 217.001 47.0215 217.087 46.9668 217.205 cv
46.8847 217.27 li
46.7666 217.546 46.7002 217.935 46.6387 218.132 cv
46.5059 218.56 46.3965 218.994 46.3027 219.431 cv
46.1171 220.293 45.9951 221.168 45.8799 222.041 cv
45.6553 223.739 45.4941 225.452 45.0527 227.11 cv
44.9052 227.662 44.7685 228.216 44.6357 228.771 cv
46.5185 228.213 48.3028 227.373 50.0518 226.475 cv
50.8855 226.048 51.714 225.609 52.5368 225.159 cv
52.073 225.543 51.6027 225.92 51.1318 226.295 cv
50.5821 226.734 50.0321 227.175 49.4956 227.632 cv
47.8663 228.448 46.1956 229.181 44.4317 229.649 cv
43.751 232.635 43.2109 235.652 42.4902 238.63 cv
41.8995 241.069 41.1442 243.474 40.3407 245.859 cv
40.0937 246.503 39.8457 247.146 39.5966 247.789 cv
.0352941 .231373 .156863 rgb
f
53.0786 224.705 mo
53.1243 224.323 53.1681 223.941 53.2098 223.559 cv
53.4298 223.464 53.6492 223.368 53.8686 223.272 cv
53.84 223.546 53.8104 223.82 53.7799 224.093 cv
53.549 224.3 53.3149 224.504 53.0786 224.705 cv
.164706 .215686 .0980392 rgb
f
53.7799 224.093 mo
53.8104 223.82 53.84 223.546 53.8686 223.272 cv
54.3401 223.065 54.8106 222.854 55.2793 222.64 cv
54.801 223.147 54.2983 223.628 53.7799 224.093 cv
.556863 .752941 .678431 rgb
f
22.126 330.944 mo
21.9424 330.944 li
21.9483 330.816 21.9483 330.689 21.9571 330.561 cv
22.2021 326.995 23.1162 323.493 23.6914 319.972 cv
24.1298 317.291 24.5403 314.605 24.9173 311.915 cv
24.867 312.822 24.8034 313.728 24.7051 314.631 cv
24.3448 317.941 23.6641 321.222 23.0976 324.501 cv
22.7285 326.64 22.3808 328.787 22.126 330.944 cv
21.2832 330.944 mo
20.0781 330.944 li
20.2393 329.309 20.4423 327.679 20.6728 326.054 cv
21.2129 322.242 21.8984 318.453 22.5517 314.659 cv
22.8789 312.757 23.1992 310.853 23.4864 308.945 cv
23.7216 307.375 23.9356 305.816 24.2598 304.262 cv
24.5371 302.928 24.8311 301.511 24.5752 300.151 cv
24.3564 298.989 23.6153 298.123 22.5469 297.649 cv
21.6123 297.235 20.5996 297.008 19.5898 296.838 cv
19.708 296.816 19.8259 296.791 19.9433 296.764 cv
21.1755 297.086 22.4422 297.287 23.7119 297.354 cv
24.4375 297.392 25.1367 297.498 25.8233 297.648 cv
25.7959 297.966 25.7725 298.286 25.7422 298.604 cv
25.3594 302.697 24.878 306.781 24.3154 310.853 cv
23.7754 314.765 23.2149 318.686 22.4707 322.566 cv
21.9434 325.318 21.333 328.126 21.2832 330.944 cv
26.194 301.467 mo
26.319 300.253 26.4355 299.038 26.543 297.823 cv
27.3877 298.046 28.2197 298.33 29.0635 298.636 cv
29.4902 298.792 29.9177 298.942 30.3465 299.087 cv
30.1666 299.077 29.9852 299.071 29.8038 299.071 cv
29.0362 299.071 28.2681 299.185 27.6094 299.583 cv
26.8895 300.02 26.4788 300.713 26.194 301.467 cv
33.5567 299.43 mo
33.4276 299.42 33.2986 299.408 33.1697 299.395 cv
31.4625 298.934 29.8182 298.332 28.1465 297.75 cv
27.6338 297.571 27.1152 297.403 26.5918 297.254 cv
26.6299 296.806 26.6729 296.357 26.708 295.909 cv
26.8258 294.431 26.9271 292.952 27.0336 291.473 cv
27.1998 292.284 27.4093 293.085 27.7012 293.861 cv
28.1182 294.97 28.6787 296.09 29.4746 296.979 cv
30.5595 298.188 32.0586 298.841 33.5567 299.43 cv
25.8721 297.07 mo
25.7627 297.044 25.6533 297.016 25.542 296.994 cv
24.7754 296.836 24.0117 296.809 23.2343 296.754 cv
22.4747 296.701 21.7138 296.597 20.9624 296.446 cv
21.65 296.17 22.2869 295.778 22.8301 295.265 cv
23.5664 294.57 24.1016 293.687 24.5039 292.764 cv
25.3731 290.765 25.7842 288.586 26.207 286.445 cv
26.3358 287.1 26.4388 287.76 26.5368 288.421 cv
26.2942 291.302 26.1138 294.188 25.8721 297.07 cv
.0745098 .32549 .203922 rgb
f
21.9424 330.944 mo
21.2832 330.944 li
21.2832 330.944 li
21.333 328.126 21.9434 325.318 22.4707 322.566 cv
23.2149 318.686 23.7754 314.765 24.3154 310.853 cv
24.878 306.781 25.3594 302.697 25.7422 298.604 cv
25.7725 298.286 25.7959 297.966 25.8233 297.648 cv
25.1367 297.498 24.4375 297.392 23.7119 297.354 cv
22.4422 297.287 21.1755 297.086 19.9433 296.764 cv
20.02 296.746 20.0965 296.728 20.1728 296.708 cv
20.4416 296.636 20.7055 296.549 20.9624 296.446 cv
21.7138 296.597 22.4747 296.701 23.2343 296.754 cv
24.0117 296.809 24.7754 296.836 25.542 296.994 cv
25.6533 297.016 25.7627 297.044 25.8721 297.07 cv
26.1138 294.188 26.2942 291.302 26.5368 288.421 cv
26.6076 288.898 26.6757 289.375 26.749 289.852 cv
26.8324 290.394 26.9235 290.936 27.0336 291.473 cv
26.9271 292.952 26.8258 294.431 26.708 295.909 cv
26.6729 296.357 26.6299 296.806 26.5918 297.254 cv
27.1152 297.403 27.6338 297.571 28.1465 297.75 cv
29.8182 298.332 31.4625 298.934 33.1697 299.395 cv
32.4461 299.321 31.7246 299.214 31.001 299.141 cv
30.7868 299.12 30.5678 299.1 30.3465 299.087 cv
29.9177 298.942 29.4902 298.792 29.0635 298.636 cv
28.2197 298.33 27.3877 298.046 26.543 297.823 cv
26.4355 299.038 26.319 300.253 26.194 301.467 cv
26.0898 301.744 26.0024 302.028 25.9228 302.311 cv
25.5644 303.589 25.3818 304.913 25.2529 306.231 cv
25.0693 308.121 25.0224 310.02 24.9173 311.915 cv
24.5403 314.605 24.1298 317.291 23.6914 319.972 cv
23.1162 323.493 22.2021 326.995 21.9571 330.561 cv
21.9483 330.689 21.9483 330.816 21.9424 330.944 cv
21.9424 330.944 li
.0352941 .231373 .156863 rgb
f
37.7832 330.944 mo
36.8027 330.944 li
36.9433 330.134 37.0752 329.323 37.1934 328.51 cv
37.8886 323.749 38.2852 318.946 39.124 314.207 cv
39.5136 311.999 40.0068 309.812 40.541 307.636 cv
41.0469 305.572 41.5508 303.422 41.3272 301.284 cv
41.3154 301.167 41.2558 301.067 41.1367 301.032 cv
40.9009 300.963 40.6619 300.907 40.4206 300.858 cv
41.0606 300.816 41.701 300.764 42.3421 300.764 cv
42.4256 300.764 42.5092 300.765 42.5928 300.767 cv
42.7285 300.77 42.8587 300.776 42.9839 300.787 cv
42.9752 300.812 42.9666 300.838 42.958 300.863 cv
41.6534 304.683 40.8525 308.642 40.3828 312.648 cv
40.0728 315.282 39.8301 317.926 39.5562 320.565 cv
39.0236 323.08 38.4867 325.6 38.1211 328.141 cv
37.9863 329.073 37.876 330.007 37.7832 330.944 cv
41.0321 313.897 mo
41.2243 312.373 41.4437 310.853 41.7178 309.343 cv
42.1971 306.703 42.8399 304.103 43.6839 301.565 cv
44.0901 301.701 44.4902 301.85 44.8849 302.013 cv
45.2246 302.458 45.5571 302.895 45.9951 303.271 cv
46.6397 303.824 47.3633 304.275 48.1143 304.668 cv
49.4942 305.391 50.9821 305.927 52.4802 306.368 cv
52.7905 306.547 53.1041 306.72 53.4219 306.886 cv
54.9404 307.679 56.5342 308.241 58.1914 308.547 cv
57.7588 308.571 57.325 308.582 56.8915 308.582 cv
55.8952 308.582 54.8991 308.522 53.9131 308.407 cv
52.8467 308.283 51.8027 308.069 50.7617 307.808 cv
49.8652 307.584 49.0284 307.342 48.1806 306.966 cv
47.4603 306.647 46.665 306.252 45.8773 306.252 cv
45.5309 306.252 45.1861 306.329 44.8496 306.521 cv
44.2891 306.842 43.8857 307.382 43.5195 307.901 cv
43.1504 308.423 42.8428 308.988 42.5713 309.566 cv
41.919 310.951 41.4323 312.411 41.0321 313.897 cv
50.5104 305.163 mo
49.2732 304.708 48.0631 304.155 46.9902 303.402 cv
46.5932 303.123 46.2503 302.819 45.9363 302.482 cv
46.4459 302.726 46.9465 302.989 47.4395 303.268 cv
48.4862 303.861 49.4949 304.518 50.5104 305.163 cv
38.8917 300.335 mo
38.2712 300.335 37.649 300.287 37.0292 300.207 cv
36.9296 300.173 36.8305 300.138 36.7324 300.099 cv
38.9112 299.27 40.8584 297.953 42.3965 296.185 cv
45.4131 292.716 46.7676 288.126 47.8594 283.753 cv
48.8603 279.741 49.5859 275.568 51.1367 271.712 cv
51.103 272.502 51.0535 273.291 50.9883 274.078 cv
50.785 274.819 50.5906 275.562 50.4072 276.307 cv
49.374 280.503 48.7314 284.791 47.5732 288.957 cv
46.9795 291.09 46.2432 293.181 45.293 295.182 cv
44.5088 296.832 43.7944 298.512 43.1788 300.232 cv
42.9043 300.193 42.6217 300.182 42.344 300.182 cv
42.1469 300.182 41.9522 300.187 41.7646 300.193 cv
40.8965 300.217 40.0313 300.312 39.1631 300.332 cv
39.0726 300.334 38.9822 300.335 38.8917 300.335 cv
.0745098 .32549 .203922 rgb
f
39.5562 320.565 mo
39.8301 317.926 40.0728 315.282 40.3828 312.648 cv
40.8525 308.642 41.6534 304.683 42.958 300.863 cv
42.9666 300.838 42.9752 300.812 42.9839 300.787 cv
43.1869 300.805 43.3768 300.836 43.5555 300.889 cv
43.5161 300.976 43.4762 301.064 43.4365 301.152 cv
43.3653 301.309 43.4199 301.478 43.5918 301.535 cv
43.6225 301.545 43.6532 301.555 43.6839 301.565 cv
42.8399 304.103 42.1971 306.703 41.7178 309.343 cv
41.4437 310.853 41.2243 312.373 41.0321 313.897 cv
40.6329 315.379 40.3199 316.888 40.0146 318.375 cv
39.865 319.105 39.7108 319.835 39.5562 320.565 cv
43.7855 300.375 mo
43.5917 300.306 43.3876 300.261 43.1788 300.232 cv
43.7944 298.512 44.5088 296.832 45.293 295.182 cv
46.2432 293.181 46.9795 291.09 47.5732 288.957 cv
48.7314 284.791 49.374 280.503 50.4072 276.307 cv
50.5906 275.562 50.785 274.819 50.9883 274.078 cv
50.9005 275.139 50.7842 276.197 50.6397 277.25 cv
49.5427 285.235 47.0542 293.021 43.7855 300.375 cv
.0352941 .231373 .156863 rgb
f
52.4802 306.368 mo
50.9821 305.927 49.4942 305.391 48.1143 304.668 cv
47.3633 304.275 46.6397 303.824 45.9951 303.271 cv
45.5571 302.895 45.2246 302.458 44.8849 302.013 cv
45.2397 302.16 45.5901 302.316 45.9363 302.482 cv
46.2503 302.819 46.5932 303.123 46.9902 303.402 cv
48.0631 304.155 49.2732 304.708 50.5104 305.163 cv
51.1604 305.576 51.813 305.985 52.4802 306.368 cv
43.5555 300.889 mo
43.3768 300.836 43.1869 300.805 42.9839 300.787 cv
42.8587 300.776 42.7285 300.77 42.5928 300.767 cv
42.5092 300.765 42.4256 300.764 42.3421 300.764 cv
41.701 300.764 41.0606 300.816 40.4206 300.858 cv
39.2914 300.63 38.1163 300.569 37.0292 300.207 cv
37.649 300.287 38.2712 300.335 38.8917 300.335 cv
38.9822 300.335 39.0726 300.334 39.1631 300.332 cv
40.0313 300.312 40.8965 300.217 41.7646 300.193 cv
41.9522 300.187 42.1469 300.182 42.344 300.182 cv
42.6217 300.182 42.9043 300.193 43.1788 300.232 cv
43.3876 300.261 43.5917 300.306 43.7855 300.375 cv
43.7091 300.547 43.6328 300.717 43.5555 300.889 cv
f
53.2691 266.625 mo
53.287 265.585 53.27 264.491 52.8487 263.537 cv
52.5945 262.96 52.1885 262.561 51.6953 262.306 cv
51.9662 262.322 52.2415 262.331 52.5181 262.331 cv
53.2888 262.331 54.0681 262.256 54.7796 262.025 cv
54.6388 262.451 54.4982 262.878 54.3584 263.305 cv
53.9966 264.41 53.631 265.517 53.2691 266.625 cv
54.4794 265.539 mo
54.8843 264.264 55.2949 262.992 55.7102 261.721 cv
56.6765 262.527 57.8253 263.083 59.001 263.522 cv
59.0742 263.549 59.1475 263.576 59.221 263.603 cv
58.8693 263.545 58.5149 263.509 58.1605 263.509 cv
58.0285 263.509 57.8965 263.514 57.7646 263.525 cv
56.2893 263.645 55.2583 264.458 54.4794 265.539 cv
58.9319 262.983 mo
57.8096 262.554 56.748 262.003 55.8788 261.206 cv
56.0015 260.832 56.1246 260.458 56.248 260.083 cv
56.6571 258.844 57.071 257.607 57.4887 256.371 cv
57.417 257.542 57.403 258.717 57.6084 259.875 cv
57.8116 261.022 58.2707 262.065 58.9319 262.983 cv
52.1498 261.736 mo
51.8623 261.736 51.5748 261.727 51.2876 261.711 cv
51.8716 261.307 52.4348 260.874 52.9707 260.409 cv
55.4658 258.246 57.3428 255.341 57.7471 252.105 cv
57.7405 252.526 57.7244 252.947 57.702 253.368 cv
56.8059 255.98 55.9176 258.595 55.0476 261.216 cv
54.3302 261.587 53.4881 261.692 52.6914 261.725 cv
52.5109 261.733 52.3304 261.736 52.1498 261.736 cv
.0745098 .32549 .203922 rgb
f
53.2461 267.824 mo
53.25 267.564 53.2559 267.304 53.2607 267.044 cv
53.2635 266.906 53.2666 266.766 53.2691 266.625 cv
53.631 265.517 53.9966 264.41 54.3584 263.305 cv
54.4982 262.878 54.6388 262.451 54.7796 262.025 cv
55.0752 261.929 55.3592 261.806 55.626 261.65 cv
55.6539 261.674 55.6819 261.698 55.7102 261.721 cv
55.2949 262.992 54.8843 264.264 54.4794 265.539 cv
53.9822 266.228 53.5877 267.027 53.2461 267.824 cv
55.0476 261.216 mo
55.9176 258.595 56.8059 255.98 57.702 253.368 cv
57.6745 253.883 57.6375 254.397 57.5967 254.911 cv
57.5585 255.396 57.5186 255.883 57.4887 256.371 cv
57.071 257.607 56.6571 258.844 56.248 260.083 cv
56.1246 260.458 56.0015 260.832 55.8788 261.206 cv
55.8536 261.183 55.8285 261.16 55.8037 261.136 cv
55.7255 261.062 55.6074 260.994 55.4932 260.994 cv
55.4448 260.994 55.3971 261.007 55.3535 261.036 cv
55.2546 261.102 55.1524 261.162 55.0476 261.216 cv
.0352941 .231373 .156863 rgb
f
59.4639 263.646 mo
59.3831 263.631 59.3021 263.616 59.221 263.603 cv
59.1475 263.576 59.0742 263.549 59.001 263.522 cv
57.8253 263.083 56.6765 262.527 55.7102 261.721 cv
55.6819 261.698 55.6539 261.674 55.626 261.65 cv
55.3592 261.806 55.0752 261.929 54.7796 262.025 cv
54.0681 262.256 53.2888 262.331 52.5181 262.331 cv
52.2415 262.331 51.9662 262.322 51.6953 262.306 cv
51.4307 262.169 51.1409 262.074 50.8359 262.014 cv
50.9878 261.915 51.1384 261.814 51.2876 261.711 cv
51.5748 261.727 51.8623 261.736 52.1498 261.736 cv
52.3304 261.736 52.5109 261.733 52.6914 261.725 cv
53.4881 261.692 54.3302 261.587 55.0476 261.216 cv
55.1524 261.162 55.2546 261.102 55.3535 261.036 cv
55.3971 261.007 55.4448 260.994 55.4932 260.994 cv
55.6074 260.994 55.7255 261.062 55.8037 261.136 cv
55.8285 261.16 55.8536 261.183 55.8788 261.206 cv
56.748 262.003 57.8096 262.554 58.9319 262.983 cv
59.097 263.212 59.2745 263.433 59.4639 263.646 cv
f
28.5303 273.093 mo
28.5566 272.904 28.582 272.714 28.6084 272.525 cv
28.8682 270.615 29.1406 268.701 29.5869 266.823 cv
29.7568 266.109 29.9531 265.398 30.1885 264.701 cv
29.9649 267.537 29.1445 270.306 28.5303 273.093 cv
.0745098 .32549 .203922 rgb
f
36.1777 209.479 mo
36.1811 209.455 36.1845 209.432 36.188 209.408 cv
36.1845 209.432 36.1811 209.455 36.1777 209.479 cv
.0352941 .231373 .156863 rgb
f
48.9219 216.156 mo
48.9219 216.156 li
48.9221 216.156 48.9223 216.156 48.9224 216.156 cv
48.9223 216.156 48.9221 216.156 48.9219 216.156 cv
48.9171 216.156 mo
46.5384 216.155 44.2607 215.617 42.0297 214.79 cv
44.2605 215.617 46.5385 216.155 48.9171 216.156 cv
41.9606 214.764 mo
41.9494 214.76 41.9384 214.756 41.9271 214.751 cv
41.9384 214.756 41.9494 214.76 41.9606 214.764 cv
41.9047 214.743 mo
41.8649 214.728 41.8249 214.713 41.7852 214.698 cv
41.8249 214.713 41.8649 214.728 41.9047 214.743 cv
.133333 .431373 .301961 rgb
f
48.9219 216.156 mo
48.9203 216.156 48.9188 216.156 48.9171 216.156 cv
46.5385 216.155 44.2605 215.617 42.0297 214.79 cv
42.0068 214.781 41.9835 214.772 41.9606 214.764 cv
41.9494 214.76 41.9384 214.756 41.9271 214.751 cv
41.9196 214.749 41.9122 214.746 41.9047 214.743 cv
41.8649 214.728 41.8249 214.713 41.7852 214.698 cv
41.7852 214.698 li
40.7139 214.29 39.6592 213.814 38.6924 213.194 cv
37.7383 212.582 36.9912 211.817 36.2441 210.974 cv
36.1924 210.916 36.0986 210.877 36.0019 210.862 cv
36.0556 210.4 36.1123 209.939 36.1777 209.479 cv
36.1777 209.479 li
36.1811 209.455 36.1845 209.432 36.188 209.408 cv
36.2713 208.831 36.3641 208.256 36.456 207.681 cv
36.8916 208.454 37.3867 209.192 37.9551 209.88 cv
41.5469 214.225 47.1846 215.133 52.5244 215.229 cv
51.8057 215.556 51.0342 215.775 50.2939 216.045 cv
50.1475 216.103 li
49.959 216.117 49.7695 216.134 49.582 216.142 cv
49.582 216.142 li
49.3614 216.151 49.1413 216.156 48.9224 216.156 cv
48.9223 216.156 48.9221 216.156 48.9219 216.156 cv
.0745098 .32549 .203922 rgb
f
33.6953 98.9419 mo
33.2793 98.3511 32.6113 97.8755 31.9941 97.4507 cv
31.6563 97.2183 31.3066 96.9976 30.9531 96.7827 cv
31.0283 96.7837 31.1426 96.6704 31.0498 96.6362 cv
30.5459 96.4507 30.1191 96.1704 29.6982 95.8726 cv
29.2832 95.5796 28.8574 95.3101 28.4014 95.064 cv
27.3584 94.5024 26.2559 94.0142 25.1719 93.5122 cv
24.1309 93.0298 23.0488 92.5679 21.8867 92.3374 cv
21.2813 92.2183 20.6611 92.1968 20.0439 92.1382 cv
19.5322 92.0894 18.9678 91.9448 18.457 92.106 cv
17.4551 92.4214 17.6797 93.353 17.8789 94.0259 cv
17.9639 93.9927 li
17.9766 93.6636 17.9473 93.3267 18.0059 92.9995 cv
18.0957 92.5005 18.5029 92.3511 19.0459 92.394 cv
19.5771 92.437 20.1055 92.5103 20.6377 92.5552 cv
21.207 92.604 21.7598 92.6997 22.3057 92.8394 cv
23.3545 93.1089 24.3369 93.5327 25.3037 93.9644 cv
26.1895 94.3599 27.0898 94.7388 27.958 95.1646 cv
27.2422 94.8208 26.5107 94.5015 25.7568 94.2065 cv
24.9707 93.8989 24.1963 93.6704 23.3535 93.4966 cv
22.3906 93.2993 21.3818 93.1304 20.3818 93.1362 cv
19.7549 93.1392 18.5762 93.2173 18.5381 93.9644 cv
18.5303 94.1274 18.7881 93.9917 18.8213 93.9077 cv
18.8604 93.8062 18.9668 93.7466 19.0859 93.7075 cv
19.0908 95.3687 19.4277 97.062 19.8584 98.6616 cv
20.0801 99.4849 20.3457 100.298 20.6563 101.098 cv
20.8135 101.502 20.9873 101.901 21.1738 102.294 cv
21.2939 102.547 21.4092 102.818 21.5566 103.069 cv
21.4287 103.115 li
21.2715 103.196 li
21.1357 103.276 li
21.1221 103.283 li
21.1221 103.285 li
21.0674 103.317 li
20.9873 103.417 li
20.8535 103.546 20.8076 103.726 21.0381 103.774 cv
21.4355 103.857 21.8848 103.761 22.3115 103.643 cv
22.29 103.693 li
22.2305 103.854 22.2129 104.024 22.21 104.19 cv
22.377 104.157 li
22.3975 104.007 22.4297 103.851 22.4951 103.713 cv
22.5488 103.615 li
22.5654 103.587 li
22.5723 103.578 li
22.5801 103.567 li
22.7139 103.527 22.8447 103.489 22.9678 103.457 cv
23.3955 103.345 23.8232 103.234 24.251 103.123 cv
24.1963 103.208 24.1572 103.3 24.1279 103.394 cv
24.0918 103.512 24.0684 103.631 24.0566 103.752 cv
24.1602 103.81 li
24.2822 103.708 li
24.2959 103.595 24.3232 103.485 24.3604 103.377 cv
24.3975 103.27 24.4561 103.168 24.4707 103.065 cv
24.4707 103.064 li
24.915 102.948 25.3584 102.83 25.8018 102.707 cv
25.9033 102.676 li
25.8848 102.826 li
25.8809 102.917 25.9063 103.013 25.9395 103.099 cv
26.0977 103.132 li
26.2168 102.987 li
26.2158 102.862 li
26.2178 102.847 li
26.2217 102.821 li
26.2314 102.76 li
26.2637 102.644 li
26.2783 102.589 li
26.2861 102.566 li
27.9473 102.075 29.5234 101.452 30.9639 100.542 cv
31.7441 100.048 32.376 99.4204 33.0898 98.8638 cv
33.1992 98.9604 33.3086 99.0571 33.4199 99.1548 cv
33.5459 99.2651 33.7842 99.0679 33.6953 98.9419 cv
cp
.345098 .172549 .113725 rgb
f
30.4727 100.336 mo
29.5166 100.883 28.502 101.354 27.4395 101.713 cv
26.335 102.088 25.1865 102.374 24.0547 102.67 cv
23.5635 102.799 23.0703 102.924 22.5801 103.055 cv
22.4082 103.102 22.2236 103.155 22.0361 103.199 cv
21.9248 102.805 21.7012 102.428 21.5371 102.051 cv
21.3701 101.667 21.2119 101.28 21.0605 100.89 cv
20.7549 100.107 20.4922 99.3101 20.2725 98.5024 cv
20.0527 97.6938 19.8662 96.8755 19.7168 96.0522 cv
19.5713 95.2544 19.4717 94.4487 19.3203 93.6519 cv
19.3711 93.6431 li
19.7383 93.5894 20.1123 93.606 20.4795 93.6284 cv
21.3848 93.6821 22.2783 93.8384 23.1553 94.022 cv
23.9238 94.1831 24.626 94.4019 25.3555 94.6626 cv
26.8057 95.1831 28.2129 95.772 29.5488 96.4819 cv
30.2529 96.856 30.9492 97.2466 31.6045 97.6821 cv
32.0742 97.9946 32.4912 98.3413 32.9014 98.6997 cv
32.041 99.1831 31.3311 99.8452 30.4727 100.336 cv
cp
1 1 1 rgb
f
21.2637 93.8765 mo
21.252 93.9214 li
21.2637 93.8765 li
cp
.321569 .533333 .780392 rgb
f
23.0049 96.5659 mo
22.707 95.5386 22.2109 94.5854 21.3994 93.8052 cv
21.2607 93.6714 21.1123 93.5405 20.9287 93.4604 cv
20.5869 93.312 20.249 93.4009 20.0361 93.6851 cv
19.8711 93.9038 19.8291 94.1772 19.8076 94.4399 cv
19.7197 95.52 19.8779 96.6558 20.0479 97.7192 cv
20.1943 98.6431 20.4385 99.5435 20.7725 100.422 cv
21.0762 101.218 21.3721 102.371 22.1758 102.889 cv
22.3828 103.022 22.6689 103.081 22.8984 102.972 cv
23.1699 102.844 23.2715 102.541 23.3213 102.268 cv
23.6543 100.467 23.5088 98.3091 23.0049 96.5659 cv
cp
.168627 .176471 .176471 rgb
f
21.7041 97.2661 mo
21.5244 96.5474 21.2373 95.8755 20.7813 95.3188 cv
20.7031 95.2241 20.6201 95.1304 20.5186 95.0718 cv
20.3301 94.9624 20.1465 95.019 20.0352 95.2134 cv
19.9482 95.3628 19.9307 95.5522 19.9229 95.7339 cv
19.8926 96.4839 19.999 97.2759 20.1084 98.0181 cv
20.2041 98.6626 20.3525 99.2925 20.5498 99.9097 cv
20.7285 100.468 20.9102 101.274 21.3574 101.648 cv
21.4727 101.745 21.6299 101.79 21.7529 101.718 cv
21.8994 101.633 21.9492 101.424 21.9727 101.236 cv
22.124 99.9897 22.0088 98.4858 21.7041 97.2661 cv
cp
0 0 0 rgb
f
21.6855 94.2583 mo
21.374 93.8853 20.7295 93.9702 20.4336 94.3452 cv
20.1357 94.7212 20.1982 95.2153 20.2881 95.6284 cv
20.3291 95.7886 li
20.3584 96.0386 20.4121 96.2896 20.5059 96.5249 cv
20.5898 96.7339 20.7109 97.0005 20.9502 97.1108 cv
21.2764 97.2622 21.5996 96.9858 21.7529 96.7534 cv
21.9785 96.4116 22.0713 96.0034 22.0664 95.6196 cv
22.0605 95.1655 21.9971 94.6323 21.6855 94.2583 cv
cp
1 1 1 rgb
f
22.373 97.9976 mo
22.3799 97.9204 li
22.334 97.814 li
22.291 97.7915 li
22.291 97.7905 li
22.2715 97.7622 li
22.2725 97.7378 li
22.2803 97.6528 li
22.2676 97.6577 li
22.1475 97.5464 li
22.043 97.5454 21.9443 97.6108 21.8965 97.6899 cv
21.8223 97.8901 li
21.7881 98.0728 li
21.8037 98.2749 li
21.8389 98.4204 li
21.9609 98.5024 li
22.1465 98.4653 li
22.2959 98.3286 li
22.3145 98.1812 li
22.3223 98.2153 li
22.3184 98.1489 li
22.3408 98.0708 li
22.373 97.9976 li
cp
f
26.209 133.776 mo
26.2431 133.752 li
25.8984 133.813 25.5673 134.346 25.7441 134.585 cv
25.3496 134.921 24.2559 135.083 23.9326 135.158 cv
22.8955 135.398 21.8428 135.578 20.7891 135.721 cv
19.8652 135.848 18.9834 136.057 18.0683 136.227 cv
16.4346 136.53 14.9268 136.201 13.3808 135.657 cv
13.2373 135.607 12.9824 135.842 13.1465 135.958 cv
13.8457 136.451 14.6592 136.957 15.5078 137.14 cv
16.3232 137.317 17.1992 137.27 18.0117 137.097 cv
19.0937 136.867 20.1436 136.542 21.2364 136.338 cv
22.4444 136.112 23.6631 135.918 24.8399 135.553 cv
25.2607 135.422 25.7021 135.278 26.0693 135.026 cv
26.2139 134.927 26.3457 134.813 26.4502 134.67 cv
26.4961 134.601 li
26.7002 134.501 26.8555 134.305 26.8896 134.083 cv
26.9053 133.985 li
26.9668 133.586 26.4112 133.621 26.209 133.776 cv
.345098 .172549 .113725 rgb
f
28.6878 135.339 mo
28.6107 135.339 28.5385 135.321 28.4853 135.273 cv
28.2989 135.106 28.1367 134.942 27.9951 134.735 cv
27.8897 134.581 27.7763 134.432 27.668 134.28 cv
27.5693 134.141 27.4658 134.005 27.3526 133.877 cv
27.252 133.767 li
27.2198 133.736 li
27.0654 133.599 li
26.9414 133.498 26.8067 133.409 26.6738 133.32 cv
26.4746 133.2 li
26.3614 133.141 li
26.3938 133.158 26.4048 133.164 26.4042 133.164 cv
26.4028 133.164 26.347 133.136 26.3349 133.131 cv
25.9756 132.98 25.583 132.919 25.2715 132.715 cv
25.0625 132.579 25.2774 132.285 25.4404 132.223 cv
25.6947 132.127 25.9742 132.082 26.2589 132.082 cv
26.8599 132.082 27.4833 132.283 27.9366 132.633 cv
28.5742 133.126 29.1553 133.89 29.3281 134.683 cv
29.375 134.896 29.2324 135.09 29.0703 135.211 cv
28.9829 135.277 28.8273 135.339 28.6878 135.339 cv
.643137 .403922 .25098 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 24.1.2%%For: (interact_natcha) ()%%Title: (ii_nu_ai_july07-34.eps)%%CreationDate: 13/7/2566 BE 17:58%%Canvassize: 16383%AI9_DataStream%Gb"-6l#L$!OtJ^IORJ9@@l5UhBgT'XeRR2>CGg$'<>n`bX_Te2Z6YMUd/j=c!(t601!`&_II;)1!@/;N6nNhV6Bsr",0i3Rq===o%J,$q<`S:!Je+6Xf(OuJFh#$6scVj"K+6?kUHjm>Gr8F8C^KOt$CUXsL.qm^]C.fU2g.psr]loic;7[fR*5?p.4MU^_lJd&6ID(,M%G&_['a8,_H`VKFi`@Lc/@fATYB4i#FcM,U"a5>5BYkpP4HZXSB4M&%KZacEi*=#dGQ<jN:/UaEVrX<iGpA#Z$]NF%GaJ[.4V=>YA%qU=<tl\*?O:]C(<o%!!tc.1h9o]#f+5*_GGc\k!]`U\&CFEs)Z:OYKi?d91Jh_!]Vh<570X&ef3Rnr5<K`>ieQV.mmfr<&.4F`n"%khgcW#ik*9a8]2bmf*TC%eDYUI*J!b*oIc!Ip^tnAbg2IpATX+ItEaBls3n%^0+]hJ,T#I6as7cD_B?O2bRHK;"IFna6<FrPZF8e%el.lr]mA!d\[aVJ<gqdB4ifSFS<W/AfEn]=mBbLtb9'KG5Q5[%:Wp`!nk/Ypma]R?e,PNKpT<kJOO?82][L)$qYRJQSh7/FH@C/b%6OY)[?.pqa:6oP@CO4.Nfn):sD;t>/D=I5XlIGGppA;h^>:f+_k;""QX$=@IoD.D%')U;H$iY1W4TG9;?hgb[V7=ucV4Yl"aHUf"%\uGC(kJ$[9@s3:eK+NF#\$i_2lj\1\Si0nRAa-sorV`(`doWI1J$b9<hu;m*oOPAmCR@'Z(WWf0f)FRIs7M"Ulo-lHEuTW?hsQ!!%G';Zd(GFj/LZ^&^(N6MhfCHC63Afo>T$Arpl0kK6o/G+rmA57ps8MDX0;S:*3M&8.1OmlfrUT<Wr9@'Z(N1t!T7;&>qdfH^ioP4[%0?`CFM^qr[PPJQlrk&*ie+k@Rch"?D(<>tGq>8ZRB5r7nl.3nsi3&AerMB/I?cRX<mk%%836nP9;@h*'=Irf'Y!#h?4oW)IcPG]%%X#]Fnj$#^+6%6/%kug.\%@9$24Q2.&-SAskp^B'koCOUDepd;eMdF&CoCCo-o_Qi)jE8V3MlW>rj0Rj*GLnds-VVI:A*gb,q;0ZV%ldta30.tONO1k4eBh"%T.bandhXMmRSH%\UrpY6_S#jH^2[R[T5/5Qj9mnq57t19+jW45VZa8+^=,Y8RVoP95Zf1Z-qpp8krl[,_%4?4-'ot[9Vg?-A8MjrbYT:`j1IaZt]rm$hm-eHhrorkEIJAEXNg[jp1mnV1t[a&6m4hY"$k31gL-1nkGMq<m1,nKldq-nYXr`5i1%3hLoqCmO41kA*uR:KNI<;\:.%S:C+]oCKp?iUF%0o]b^+#r6M7G;B'Mm/NY;rC8[H(L;&aIYt2/\Lp+YDU7^^6[.U^pKke:r$5Ws%'qM5Fc`Z0sqsngdO+Ibf+N.DR+bp\Fkjl&!p;0*T$qJ^a&7\Bg`tE0(Z,aPf*tR@>4A%7%'N7UaPuL[X]4iqcVh9)YNj>/9OCM$'%s4#hEc[0q%+693VMD([AOp_2&V3g#D-U.jtYT/q'lDh%]`gUYFV:O@8YIepq<qkoG4fh/J&\7%.OIt0'bH3U8dou'S\*^U%G/4,"%[\J#!foQf$*kQf-cX#DY7G[1uc`HTXcX,LqT*+mLPb4_"[-MmHJp%6GUAQ;9jB_T*h9$gb&%_2gT0<"Ts3CD+rTWL\ILc0pKV(EJ%+3u$sjOo#iXX."Hf+T['\>!J-GAU%bA6!bXa3#a$\[&fT>hL!]p2F3j&>H6Yf!]R8GJh.t0%\_4=lHX*>\1(CT;=4nF0gS/A^5a.%kJDAmQ.E?,S5pTpS[mV(K):L"^+V_:Msb0(D_F0f*io;(]$I7M5J4>lX/4.CV72`)^%R5ip7.i0[.N%;^._27>'sV)>P"JmQK*Y`%8rg;!/'51=/*Wpr`&V\`3Sg<&lKskde%0nh]S>+nOk$kpQ^-@=Q<hLjQ!@ZhrR(5+Z)0<_;GPU\=*:pJX/!=2eZl9(X-Mf#qQ[Ib%/hWI!E-]L?f(H_i_Q,P#?Y-;p<nc,NG%\(XjgO3P#C[Y<*r=W,q18P@'d)YkI_t^jfCl!-8F4I+>r`kYE_UZ2h39G8U3fbJ$MNFN%?K_k54u/>HGA)R0H`e7T39"7;Z@SJ2Z$l$m:ECZ++_AJ%fg1oU!u>i()^NLrW&%T,]lke3+(Vp_/FQn0ODbYM;N%'h?/`7_EcRoD%TIPl6[s,Wq4?>Ma4?>IU5M?c'gh$@^fqJ3i*C\q=rl?*$*?H7C*:=p:$*Wd&`Tgklb]5Duj;`nAJ*7B&%Ls!Z%e^G,KW"R4m)43H%%e;nHL^2nS+1V9ErPSSdrVc[X@0V.pm8m_8Gs;Tc%3fZFhU13=hSJ'_I+,6G=d/;)ns)e\2=1.lSeD-E.%_#^!h%JJ3)p0JAS=pF%k]`S6fL+?+q_IA@)1%JQ.'hlsm/A+T_9'5IV"i[H9C-\@WZ7`a#:dmgq<$b>*Qjf)Qd`DoB;EZA(7F57k;17Pp!q1+4d>3gQUTPl%V.d.W7@#6b30R;0Mp"Vr=pM?FHa7Ztf!!4GAm*;*.k:7>3YH=N+C&JRf"0%^='>8K4=?"#n]A`p9W>7lrL*/P?.gMup.CH1P@WhZ%iF5P-e"L`gIG%W4ZF?:hYp)7]L%o`@El1Kj[+U4?aZVSP<q6?o,F3?C`-$IE.dA5'50,4r)NH,64adc.MYZ3.d=7^p]X=37-_JO/%Y3,'QS]PS'BCBmcFZ!_^e,0a6mTkZh!k^.t\T\OJ(UH>R]11JcSpC:ho\8X!niPg]_fQg:dF7HYH&*D5-;`g?EEGrb%u-+Kr_r3^%g!B)^.bn#>DV56#h8ETHa!t1?KgYg2<<#$L5`fi;T60sC[V*ol[mT.U462to3Z0&qX.PgX&'pO.#;LNI>*PAE>&;-4o"HMjW:J.q%$;t#Fq48eN@TST2iSK\:R4*iga?f*3V!u^Hro%[#:\/($@bOjYAJ%H/h"TH_CV</63=o,&:R8)?qGKbAaeI'K+/\3bI?Qnl9Mq.H%51`P]Cq$['p@%o`FjWAOm#l4-qmUH-h2I&H,jU=.hD&Vt4el<Wm=E0D=l69kF0KS_5&)Lp\#n_6F/c5Y8b^J>5'X1'YTRh!FF1Ce%@4,U>pq+DU%RnnV_UOGs\<TgU>2c6t]YM7GJLLsWKFbl<P`^7TX^l$OB?JScV1GU'>Lb*@^diY-di\8HQ=&M__B!hm_BdI`Nm*84%E;;k8U8;Mt,%Q`pr6"md#+GJ+d:UB?EbciC_d1jiJK?2OfBqW7UVh"C(7h"GLpDV(rZF+s80n!uW%CH!5PSPiiud@H=W`p`:'di&%^@&m%P$_==K)\P+Mg,Zo/<=WfCoBMe\P\<S`]p9e_Xu`)9B^bZ8,YPqPr?dcZmMurm*3Q:c,T+p`pCsim#al^4r\S;OU6GH6JIl(%DF)cA*(T?DD"/^(HR_.Eh:6QC>\<c6DkG3W9^'AVmNWDAQ'ougSN3i5)VfaB_[8N+k%\!'VA7;`k&(06A3_K3%>l+L#\+A6BG2er%5UN/J'p,s98JB2+DC:H)>6C0$dNO08B2E3/g^fr@e%l/u.PRE,8L]7jNX.?]B7qo=>m:B`Mg6H[[T(>r'8VZ:.M\d"#iuZoQkqAe%B]Q8hF[U5BE]Tb*%?'P]nDT!]0\cZf-@C'H2Qr-5C7P2]!)n(N+[4[@Z2"0H%j)7Vs"6?K8ADE1S^N)]mgblFOC=^*8lhuXnBl&m%kU6X?%Jr:BbW"/W!pEXH0W$Ll@7#WC9G9oFP%M=6eP;fjg]&6WnoM&6B6LZ^aNr]f5J+CSAp4POrK3_\rF^:Q+8I@Hr8cTsZ_P0n%_@.Dr+>GAt`mC(ZO'*V]"-^9LQHfc[$ts7'1O[,6#<jpTRMA:J:musa(fE/B]@+K`!S7aqAd-ird)I#j]#&:gE\jqh1`Pr/"Q0[o%B*I9'(rq/s2-=_rEs#i&/^IVsY6/J:io&l<4D?1dHQ\i:LqXQ?^X\*AbeprQa(LO^pU$-VgAbeo<?!-p])DmWH8k<<QIiIhrqZKO%a)h5krl<\>J$V,WJ,=?efq1\[ci7GIfo+<<QY4Lh`6J<;],`^'bsD\CM,GNiE"*dr"fB1%32'cVc6qg8r:srK[L.]ck+2G3J&i`2%>t@3&T]]\+s7UAKINmik^7+Qq-aV,U'^HiRo?ZJ*jhDdn%!sjp#N?b)e+)PZCjC*.jO\nWnia_]DEKC=rlor:m_u/SGs(tEDu,Rc%^@tclcfK04X)N!ID"-Xb2n[3nrKRSCiA(A%Ol\lQL^uW'^3'R.*\;1EZ6):MJ!\E2^RZEU2ATB_o^C[bnbJe1:6liKq2b,Crr2'H%>^lWfEH?2DqXX$uo(l;<F4,1)l>#kT4Q6H*J$%8kldN2(X6$n#$1lK7bKNYp`P6<I+^bPirT*u@^]*q^`RXWGb&MbO:Hs>O]BKia%ZaZ\]kgp?PKDM[olq=L"rTui6m(>Gl*4p^;jN&U\=PitDe+!,@Xge:bhfatA(Zu<Wo(r.,/rm\RSigS#UZD_argu2s^NK0E>1_6B%bHp;/2ZBI%q4HoEs7(jl+*BF=NH[+3GPq12k2OX(bK54DIJCkK"gfDn4CK7+h2]8F\R9U(n)dRJ=#d&.hu3=3QH$]00t9D/4oWdQ%Mk=SDnkO>1bs2)?\N&?L`_TdqhjX@qgq"=T5!1`nf?;WEYFiZaVO#!a^n0ZOGG82KNt(I3;o\It[iS9P3UDD1+5M*)St=`MI`dbR%iGUe/=e36aM_2hlH#Y'T_<9#1DDXBA.3lI^kBER$OSQT"G^FSGA;]bmXosQZqQ3!@c15Id,!+,trJpk5^Z5>R0bE=n]5+N'q953/%6>.`31;:K4S:CM6m@0I6kN=59^WXCTJ,3&I4);M+h#$mMI5&3PrqYROeQZQQIX,piUnN:jE#<(&kPoRB@Wkoq8*o=-FQ^rS]"Yhe%RGP$@2iI"jQ'AB-n\s23SOSODe!8Xlqg?-Tp?#i`e`-F;M&ac%NB*@\/+`5U`J2$MHS^/J\PIF<pA*h0Ed9OW5(3%rN6mnL.65F2%btalaY&7QP/?Vb1a3;[!o!md`DhKsTLYIRZeZ`I(D>A5+"hqnjVl!s@p(umV/?W>RK7<GKTDn,`!VluT4n5Xi_mm*(?X>=fQWHC&%k?fnBI`'sJ`QQ`:e!kPcQgjYD!nlN&e0Qi6gRK6*E-&EH^V3so#s<Ya"$&N,oj$5f\jcA=QHPJqTFCbAlEK+DXW3T2Ig61lp<-82%p;QU`o^/.D.V\e;f$<TY'4kn)ZJ.>L2tIbtj7DmuN9?,\p$6=AC[1rb2;0:d><VuVp?#72q=["_9mtSJF-5&P/a)6bml(n)\NT^N%b-8;4Dg<$DlHYTj<H[p%VFck:H$4MJSDVCo\DOTn[9T6ZSBcfn/;sm_'%2ft$#A#grU09P[qB>`_Z*%g#uq^XXu>mRgCj5!o'Dta%2q%HlMrVbo(?M""h^"2Z[^,Xn=3hE.>H\#&CKQ^DldP"SqW@)&qapeE=*Z-[>(6(riSQ:AY&<`\h.t\5fDiL2GQ4nL^ZG7WoMWs]%D#V0W7sKa1&_=k%M1G7O=56?mIUF5pr8lpSEIPRZ8?[6J*/FFNLZR&4_"J62i81FCC]<#TMuDhb><Z.16e.BDs7%32qYu$9rSRTu%r:BsepN83K<8G=gp%cFO)JQ]/j`H8A,j<fC@7Wq9p2Dn2)*O2"/l1U_DF@mt';kO&,<#Gh`RThCrn\:45Pt&kc)k?V/bb1B&'HW_%T&#pZjR4"Z]\Ye5)m?k4VgX#CZ'rQ*krDi5igL1[:ZFQG/i%GT\%-q4+A[!mG&b;Ep:@u\I,7%FdCsIlYLYX0c0K,_iKl3V%=P*R%']sc.]BAn"d<P9+`rl/*^YIL>lYg<d/MHa?5ORsWmZ$ilFsp][GUW$aphKdm>H.4drVORWSP.A(6p/.dNLuha\(UHKVjB'uZbO9R%eb>Yi%ptitD1@qo@7\W0NNSR&&_B[7iTdR\HFN:'n7r,OljH=MFiB=i!-\&8\9Nk#nG.r/hGt>p:(M8&pX"eG4c,=`Or2O"-@YEs%I,c8e%lRY*plTuFb:1,=[]spI52k)Uh4*]qS$SY!I2$=Aq\l3:2-X2o>FJli]Fh;oG5gPu\3,''R0ooh%6*[sbKDDOp@(`&`a3DK%8C'X:\_D!2;eRUBe7p!Ho'N,OVl105F!eKCdoqV?Z1"`9HcrJ?le;agg>#`6"HrqnP@X-Qb[8)R+'aZrFnNP96ML(ok(!C?a*4EH%iC<.>[H17%hgK^^I'hSm43d2q2Hs%jhp0D?QIi%<cI_ElY`1`X1rNnY'A;m7]@4)V\>Z^Fl^+M.D\e\#Z-cdVE.>*)=$&BbgKPY)%SBFgf^m*\2"LO\`LmP&[[\`BAaj.j?Pb>DjI&Q"J_NeJ8>lBFpmKZom?Whm0L(1r-^=q8Oj/gK9CYJ(9<nF(V0?:C?D>1sA0jYr/%SfPRmQj7>pj7DSR4'1.kLi#4QRYSp2X)te[I!d!:h3MuoI.cY!S`Mj_K5Fj/Xf`7cZYd=[PqqCM+kY4B[eJ&2c#d-4_Ifs0VS^%j%1iK^ic(FeE`oeR`Nit&f+)(cslr<V:8"*_c76j$0;BQu5(K]3m<c'\q@<64YisC]`eqWg!gGSe(*c0(NI()?#$&rl3c0X=@G:kMO%[r<iU3-kC?"48L"+5a8<p"eBoj!U6ZG<TEH#'9]SNT"ah^%ucu*3ZQT*<S3*S=a0DCjk7rPE4V61S4NdoiHXsRm0-m0><eD/F<.e%F@5\,P=_6sS@!j9GC$u_2m'gRio]oWc&ncI9IZ0^*b(!&o(J@n6+1YLHdjWPk[(mic>Rl$c7Z<7]3%#Q2Jd&4^=D5n9eoAuqXTZ3%HN2c-n!l%</V%nZD$4ocB(pU5'=ls[o4Y\eZ<O-P9B%7Y]MB6,oAplA\7p1h=*F\`#JNg3_Qu*rEmq@$h0mkOO4OP=*Nr2,<M"@3%p6)cTj6P0`jYh:7k?YiN\P;5/irBfHDIEiI?uoDY<8('Q,"h.f>nf5u(hiaaeO,[-F>NL,j"8+RWhLu-G:34niaCS1Gf&+bRr@)7%[iYPBH?jIL9LsE'?,&H^Y$(JIJbsh7I5<"Mk6GdLCr"\<bYO&Mir$`Vn86geG5<1Z3,h3+U3GR6VqZ,foDO)EV7iJiXoT6L3+#qi%lYBq]01>9AO0)-kro2oBq<bZ.%:7p\V=(e&?G9m2e2tqCU@@C?6q$&1g"BT04Vq2kT7B[Qg;0/W0+X)WrVGgObno#IO#KMHg#qZ^%gARR(RLW]L;k*3WmI>%cnC@*[g;e(l%AW%!nT`^j:]6*Q<_VY>Y@!4[SYL)(Lu5bZ)=qXEM*(b-p%!KZ]te[3*h-Yf5,FiYMZaJs%^:;2OX@D6ddGuq7RK)rKc]rueZeMV&^:SVO^D'6u^GqjD*eiM@,P7D-(8p?edrT]%YO.6tR*09CroZ&,q99)7F1e$8&u8jXcPGm@%%aNYEjlP1[Z$N+Hh]BPPf02D`TU!6;QG-GX-?CQYAUa1*l>'.ukAS\]7nUhI"5=Ec*tp195/'(kgoe,IeMn1"oWQH)W-J786EBG@%F;lbmRSLB`j.F+"d<k31_ks:s:QWf^R[[\`_o+Ph^AQLZq"Y9>g@G(V2o=X/?U*CF4cjW@Z0jYR&3Ssq$eYeiD!C3ZRmO]pkmhi_%mOp3C974>+VSYLPJ[JWN)B\Oh`VILCl`5q&,3aP=f1=T,r&s,HjU!,2hOtMVb"_?6^@?nj29VI6;<,C-M0XKOn:K32rU]:LahoUa%3ldD]YIiOJlZ]i3keg?'mJAe9iS%@N<h5iK`I;W8p/h+bs7:E=)X^(+BKEd/,*1fSKr+foEV9:Abh0YbS>b3.rP6'`pO5=\Y".<e%gCC&#`96=(EiNY:ekb=LQMSC:[L!6NSA7i\LUGZV?X=/Il2B1A'(\n-*kTHo(G?R`>0($^V'kZZ[6:kMW7sgfq[hU)jEBWNk3'YK%dP[l\.Ef8OEIL5Zp,RN_Vr+$Tg]%S,DbCYX<^(PNT'dZ^7h=1jQ$ElKBTi3Q&Ga"cs#.mRguV%%Lr4L[Tf96lZusBm/K`hP%md7?%<UP?BrkuM?3*-]79*@'6j66t`Xj`maEC#U;QBD#]ec,MBa4"!-gLe6km]sp9p56F[1"BW,_4;*YfG;]<<E7RU?a#0m4aq58aM??/%gF>2QD2Xl0j(HXRVe8e%9uYE9,^d;fk4hHO6k>=MM!\!Xiq0>24qDNG*;ARZhj7tb^4*QH&1t:EI-1.#M=p>$7LR!m(V=42*Z26Q%cXOR&+LCU3?el'+\79k->V1D0GNFc"J$HY42;KK4a/(Gu@YX=)g8e3AgNgiLi8j<k-59oF^NQpora#EVLGfZ'O3IFG?d:iDgU[?+%rqZAK_+lp.1/nfMouFVOrDqW%EoV+!c!L\q,9Q^Jbfu:!rlpM1\+8SB#F[!SP8r&oCWX)camHGH\mrU,c9=-%d`JZP%ph'l;()lB%!&UbUWCcZpV4HgrT0E^_m<!Wjr!fTMa#WUBRf/8m+lQ%eZGYZgc]F/`,At3bXmc&C$>=E,U#OGhN7;1F=)'<RotJTd;@Q7aeY.3]%4#M+D1!*XQ[Qd]*oR0QrBGohu.rEX*(c6LJH\WW.VNtMt!GO:aW3jpOd;g>r&hYXpf&"*#QF6@@Q>ssS^sV56i)<HUW%nINPq"T*%h@V'%31_=hNS.Lt_VP`sM>HY/"+0d5&:>AaY"mQ8e/1R(Q6l@"1`;VPc7Kr/[`:5me4WbUNO#9NF4i(G8$4&u_H!rnZ=C,HD9cAI%C^@F/*M\s(Ms+IE:<GaLbm/)%G2s0*^KgW"b*Fea7HTIZKBEZ.,^UsSV%mfZd[HNq[W22-0qOPPC2<P)/TD#\,4"<,*DlJ@Zmt*.%D9R9$+Y'nn`8)W<S7H.sC[r2p%3"CL(LiXD[5Y%Ec]j^9c!%]QA*c1*qWcYb\[o0PMn0p^.[r&FW'bC6A1LXTYVHF36Y>eGl_Dnl%*G*2T/NZu+[([I?Va.:EdAB7-Wb8*7=DcLW:A19mAR"iO.5*b3KrhY7RN\J,3Fe`(;&+i*c9gmo6.g[`C;Z?B1g8GU.2[5/>/WGa%?BKLCr1N1_=(Mj\1nKgVK9bP!>&31._IH4&2JM`m(p$R":-agTBr,h%i#G=4RdBdcai,l-h,_/2'Q@Vpq?lp<W^P!t:8H!2addr0%q_UdT74*m*+MC'XKjQ)Mb?tFga[WUk<P$8I#Ye>]lN:^neJu!'XBf^[.7:&%YEnRp1FFGV`d"g+hE=$+af]#a+0j.NRKC!km%PNM%$IQ&VY%Q*"ju2FIUIGc@#JZI.0WIM93MD"BP;C9ReEe,f18BsO"LI-rYAAnTAh7T/3HSC7Xu6%kS.Fj3DbaVO1%n:9*ho1W`_@p^%iTU@pANa5&YGk6lK[:nncKSGg**Va#_(BKG>(X\S^WP0>EL.[Bas?-)6'7#Uq22K'/s',pCH=qT4AMg[XUC2nR'.e5Z$7-loH#kX%ot<\W':tHBaa69gKae-MW[b!7;NrL1N7d!'(kk\J)Vo(0,<s5$V8d*X9\F*riH;^F6i\&rPU0+rMjhFX)P<D4YeAI_MJSWaO`f;C%D=Rs/3DI#20?KBta=ja67m]+;"+(_B.AP#YmYjl$hSJS=#ZfAmJ3iG2p^)0;$(DWt*!c:am9=+R2H")h[Ba_9:"7fW5s/PE,[ghC%:ncj[Rr/m:''*$_brAh\&gHHG77re]l1!4@><4+-7(e/#Abg+t9#V6'd^$(eXO14&&;Oq=/X;0ih^qNoPm35Jf+hb+E(_;1e+kl<%41Y4YIAL"c@'Hiq>ZGNlkS9NlYfIQ@n^['sAl4<(?U42!9XJlqacW&_-:\a_Ho@d1K>b\R2NKR[EnIkZqq8Ae9./#Dm')AZ)0%o&%/emBHTP!*:j+)r9#e#%UC8<d!8`<tad/CaFECbIl\fEn/WGGfJBl"`\['O^!H#0kt-8K%jlHdnV<8EG;N-MaHh?k=>D-WWP"8k>K%kL;kpYEl)uUbqn;//uIdfqj=ZM5IP18uUHJL0aS>%aVu-_L[ekp3QGo89]Kkm)5P:6BjueG<jhg#VqMC+thOfPragXl:PImhB;`5%E;m#1Lg22U-_f258WsU@Jsqol3S1E4*na]i!U:P;B1uLr.e$X)5*:n^RAuk"g*4-qf<>AmQZAO2P<i;m8oJ.2U0"!nSO>'>71Dl,%]f<#b#_s`WJuiY`lAD".g+HtE=s4&>$Un_PWJ5rO<'H:I-6+;1_Ll&Jk"7/We>a?hf%sB'W0E->U='P/e#D]W\I6K=e"M#D+Xhi3%>S-cj$mcLn&G<q&jC1rc*)`sr-3lQ3MHQs>>/YhHP-CFQdlmIg=@;bKDIGQR3E*9(@""[%60LZ>Dc&S(^D"dZ'mSEr8Pb+TSS#C)%QE',^PkbLi<D/P-cLNtYJh!itN$>I'_bi9'cApVAFuX`D+f7Zre^'P6i%nFlikj0iQD2;#)Ekq_W&K$m>#B@Fm@XGe&#"2t_SYc-%KBmMrfs78glSGJ!:96-3&UOqY#d"^CkJkol*P@Ns>UKW8%i;d5.q45,\X&^?"^)YiACs`MNMBGk).%Id58)-hDjHZN8V_8Cb2!t?%_2+6T.2trM'Ytn&,l>RFGGGsY!K5t^>;5%f$;GbYW[b5`e`DnO/Maleo?AIO`1$'cCFX&'"0k5H3OVMiW(s=tQfZ]Z<-Da/>NDj\%0`aBNX5`6W?2(c]SH;/EBX1ig<CJNsWXBFr9V58nN6j7i>0*m@%2>M0;dHI82;M$neB=O"\P2s%KLU\]'ie*V72tAYD:j\IP9cHW%fbPG0R>6r2NPmF<%+k9s]M5hK^ha?XfER_,g;#>)"sMOA<gLFOQS]]7C6jm8hX-<VC:9GI)N'Yl,amt5Zu4G<J-\[Tr(/fR=*m-A%Wr"L)1]W,X,j.-cM$"/73jn$qYq'W%8AfQCbhdj_*41^`jQ&5&G)gqR8jJ"Y],8\dd^%<:59Sk24,XT.;aj,.NH[<:DHV!?:0g(^%e,o,=O_-JM74fUT1'<:K*62YBH^k+MjXHVf*&>95:3JMDNlk=OLb9h]e#niu";o6qLI'f"7@"E53[sdNJ3S`GloLU267l\+E;s;[%:iTBN8s@^+FqH-Yr3X/1%"eXN*NeZR`A=0FqilgMc>Sa$JtoN*[[Ph]di3/,>bk)UKPA8g0uShOA]!<JdkX?Hf0C&Sfb4C:<)'_T%;]L$O'93VP(dupI`dk:;CSMj\C-djdEN,P?:/GA).nWG_Hhe*8Wq35li&#O5UkRMc:#Q<=:K/H&60,SdO)uDg^>"V)I3R.+KGDE_%,]dmBp\=ONS$+Hq"8<8A4$`',/DQ=E_jq'H'Sid,$Y/1E"YrsMeNiDMgpscnn\/-S'%_aFY(:("&18-.e'J,ZE"\_YCI3r=\3km?%+*@dWke&r4&E6+J0\\Q$>cC+N$M#bD!TGtSoG#e5(^rck[flYB5Yl!jbLWXI&%KQ!Tk'(lWd6ZaB]FB&]pNjH$7B@SSK\W>b"D8O%Q30T>?l<BbTpXUL)/2'd9GLcXYeOd8>1(g_+`cq]7I)QU?Sc(U4nQ`7jCmP3kiO4EL<2'T1,qbJ:klf))Lsu)1Hd\&K+T*iM(6)e%+LjPL%C`*a'T,pF&5Dj<H(mhRfT6GbGt1mdU[J<!'<B;%\4C*sSK(UN140t'd4ufqLtE.r-O36cLi6ZS6ol54#dH.R75CNB.`K%*%1t;dcOYKOlHpt"U]M,2kdSN-$5V!*.E<YWn-ojADVaMB1T(5q-\r0Rjo[G8l&f6Ze(cOG`l#1$51qAdJb/j"hm<R%l6rh.Ll(iIG%2"]p"bnr)?C<&U((5\M[dd%Jfnt]V@\k'a"i'>FSUQU]n,A&c!:rQOZI&57f"rnGh-nnRIFZI8:TGAeC<OJZrHFHQm\s/rSV!L]9%Y_^<>4U:2eK;ZiEfYRA'(6ff8W_;Vb.oN3bOl&ll4IY7Xe%fhLjB*f5"bi'0,b#:"&MP;qqV2[EEA\GYTI;-mj\P08%3;\g2N0%'%*1CWJE`AJ_I8TjH)GmOoj"AFW)g)<>;2okp6G5EI,L3/fX4@S>/Wl;c/!gEFbo,3>Cbej,lEG0*h9&1u<^lu:5nFa,oigC[-A3le%0J3TQZ:2hDA2B"hbmncFigs8'R3Jr;Wu<S*W.NWDm=*Dm)[3(GU?7Um`\L49pg99:6e>qL<eIg/oXL9O_:fo5h6?Gp@5:Z#YmhFX%[b`ctIHjN7$:mr!j0M,;#)_H@!8EO:.]MKD?bO>%].l$B^2hX2',M6s+6dL1Lt[aOdIu]rMlZueFOQnHJ]#h<7qZ"-MKCA#`C[.C%Z/Q[Td2R;%W,:i#2;#KZ\gu9m@\fHo=bN2(m+i4dn&eW)Aqk:aK=:jH9=jndV]U:O2Pe#)RLfp2!'=J;&NMRK9m7_6n@il%eR5no%m'/Sh5ui8Ukg**88!2DXVpaYbnOWSJc82'sXAZm,#u4=mVYq580AqQ0'655%,m".7J=1l%5Upk'd0npp1'@b^Bdis0Rto$&GQs0D%^4@]X^gq*_j!3VpZ_Ar!U54:G(`.QWCd:EHZ`Y("Xsr4`!VZ'>Yr+s#?0%6l@q&EM&Q:S_[@BmD0P+bVC5bu2k,,)@k\@rd"IpOZ%aI%9hA%is88+8Q+crdC/]&?pD.(0.l\/?p]=8SHuV*^On%?u@SUt?WR*WaIp7d#teDn[_P".U1?_J]b[.)LVRo^j('qaJXO&NlR3%Ka5j1+T/pgoHKDM(*7%]1k6MIB:F,MI<5TVA""ZL#PQ*]4cl?CRhTGR5ff,Q]uUcZh;D6T[O[G^JmJJ[&rq,(E@Nja9/bE\3?,Bm%q5OEJE&qhRTi0-lq9!t4L-sB-"YF?*5<UmWJIXc;964[%iQ+D?C]S=H;Z]!peQi@ogFJrB0c2qh!\o2?c*V%JP>,Sp6k;"c9r<BP%3n*I_8JgW$JY!rhe<[dlq]+CABV,A;N:ds+>R`)W":5]@cDhs('CcCm.[<rk$,k?pW&Lo,ZiWS"+UX]p8s;&D[*l7f_c8'FmL7k+%+T@rH;Q$Kqll`]NXoP9uL.Oi2&n4^I.D`Y&h@;TV8<655FG\B!@#uU\&<96]cu'h`P1ii22M'%EPX\)r4K[9X9t4Pd-UB^f;d_CJ%]e3#>'[,6Xg5ar#_VIViWA5>!pj5t(.&mk"96/,'>t>Q#<$oJa4^<0DV`(&>@bq<cb(jMM9Bf@'IFUms;")!+^-q@W**l"8?W[Jk%C,#/WVJ`@5Kq-FA#XU"<E&'B,Amc01%9=#+P%ns[i.Uls9MH#t6.VB5[<N-WC*k=$lQrVhVVY>E2)]>kYjJ5n,MU-cqhJ?-s%c7H%J;l_YN2iT\ZpGNs:Lu6s>C]FY0$R!8N"7C+(-ls+[[$;65][38Q)p_b]KTb,U@!8t$J]$kITP<\!?00+N?dX`$)5S^jP8gS%BuS!%_&)*'Xm4$9(_LH<C:-E]FkSo-F"omuF[TVGeJF3gB[CNCX_"cf?A5IVff[HSVEB/PlV5#GBM2^&_=ZS\.QOt[kKs0e6>GZ!NjO)1%5B'QK&2cs<iX"$6'Aa_YaUUJVcjEIHj1$U]b@W_,akiQ`!A[t%r1/^N"bI?85k/#X-NS%aC>_pH`1<TBGlrJbl?`5C2h=?!%jfN=%kYtrhnTiLSU<Y`h:8@p[?U^kP`I4C0qJ$4VR+,7N,^"boW6X.ji0mLpI,-XA<(D=,9dAjH%r8Xt%E<o=TPb0mjA:S`RR/)LehDUU%J3=a/4@(fMfgF51=l9fQ$(aFQ(e>pd##@RU_JGYFEk"\OJspc^$0rr(SV_<#pe8*P_XoEV-KGq4D`L[':e)(S0S^7O"!2&2[:D<T%k3:^ebCpn1..2q"Pn8r;dX^PmDVGS;[2.>&iB14/>qFCD;D=/eaF>.'F+kj7_/(85*2?@EGaQd<X1(29)J2?#"%*nBcb:PN?:1J!%k#;a6;Z@UG!O-em8M7G[rn/'(:j98ipOWR/+acUj/h;[1p_EAhlsQksi#"!kDVTnYQ#*+#<l7kC-eAg`]8`&'+<^+t#58^^qhW(:%`8EggE$$gENu6YB%.5>EpCW&TLr"MXi'(Uh+#19d(u.UimNVr1&VKt:_>UYVS7?H%B83I+eV$1K@Da^Mih41jVSbm=/_GC??UW<C%n.5fE831]f2/BJ%X)P4##4H(eW4C[DGDun3D7,A(\)?ohc=@p8,s)42=%b?6Pr&<H@fFFi`8XPc5W8a2M^D&Y)?V;#W8sf=M1fUV%K#0mO)]pLl1*78k6Z[n?jA$<N0W0R8.o8Ya-Oq?P>FH_Q:+9N]O/WGB891C.KY32fW6i\_[p['EF'"&B9R;jT$t^cmA+n"(`>Gj:%6fFV>H+^VNL'GA1H%m%Be<2(>0Ha+Z,7^QW)O4>\2\S$8G5F=7;0aH#+#@=jJ<Gd$+JC1HnU$FPBYTpf./aqs&cG9F,('A&iF*70%V<1f0s4EDbCttt7SbGn2reEQ25<"<4Hm#LGhZoM=oCiL^_c$U7pn&8IY8d!/qLS273q3'u89I107cAke+<3Ks1S^*M^G9;SA)?KA%5&cs.$G\NaU@/DRC]GG2KTV?mB]C5'A*",t7+%DPctXQg!-0#$1VKr#ij")+RgF5[aHo9=$ih25,;["gR0]`ecbh?ON!i<TZihq7%niHnNYYnC;I$,$PBZ9<31p%Lc1ea^u"Z98SMY\'P_\_bm:E_fsDi'mVAe-r?VE.b?&QC"F'I;L>&$#!tlu#4,JK?,7&MUCZb;Wf9%ZD67Y=@dMa3*6Y&(m'oB;Q2Y^0P?nZgn#-).oeP5Z^T&IZ]8_X,t^BF&`=lthNM@faH*J"87jP`d(m\d9?N`XI?Puck:"K,(4qhq%^hB`O^1&sW\>>DnG/^"&[+mLC#7cc+m8?_,.)DT+!+Brs[!.mnC(2Dn+Ls,X#%O&H-7;H*ULe7U=Ako&/X@eaUDmRhLQ3l`<iT#4%9QmMdG]U&XTmMD^eM>^#VMQ"+_CV1j!#6nCh96fcX])Dn*a0P=UEY=A.CK&8b,"2CLf@*dHjc/q_G!9<o`pSn6no`2qO=o-e^Q+O%CR#@?"#u;FS(:B\ZHe1:m!B.#-L(rc,:1F:>WR:$a=kl59]FUP<q+,#XJI78"9'^J)08HNVaP25F].KDd8;#9\OP$K]H3F#1n@Ji%?fDh'7$I5,'-r1NdK'Xr=HZN>=t_*hM-7/!&n8YG@Le#XP6j#X6qoCSS_jNK.oW]haIq!E7#WH0)atZTZ^d?@4l9P]#gF[FFT#ED%D\X#^gfbdn3,$,@^LLM&LH#\D,epD%@eE(WgJOS1\6Ef^:6];K8Ln>eUDLoWpro:mJ\(J9euG)DKuEfTLNEl8ZaA)]dR6r7#3Lq=%PQ$qKX3=\RC.O*AK8BaH>8beD%ou0>\XWj+9m$!SY):2'Z<<1*^mmMeKcLt/L6BF3"Y<Wi[kKtp>#IB>[+=0;oL-s)l#5iG_HW8R%-@-k13=fDnQ=c)=\r+H8?msa0@4kWND-(aVD83JfMjGYo<^6[kMdsJ*)GD]^"b@RTFP\.0:'CqsoH[(H/4l=.FHp8a[&+"?1(j\q%btkR$2NcDtK8tC\jebdd:phQQR*_;]"qQnR=/,H.p.<i;"'<pNR`QsWKCTW!&h$,-_tqrk0$rf+cr]sUK=6po@9=e?M.@AV;1uc"%D^5`1AC1B6)F):h=9>g&EZ,_O>[<__^;jt5k$Aaa0]h&CXrp9,N'^WLReg9d$:5K93Su!l(YYD42h#=#P[F\a-u*Z\aEiIYWoj.X%<3mua]K<-2;X&8SL@EC1eL7N8BVNAlgd:O_=Jkof9\6%L4:[4CX:=i9/Dh&JMDq:a9M?"L/XuRg]&G@kg_,hc]sAV.5p7,=H#6Q5%-$M-O>u6*+%+/f:@99'72q]TB,@`H,(`B3'R'Ur'=Z^h%%OS<3DY7k..6Kf+WA3*q\Q2W53U(7j\I<W)X.Vnn:a[.:bNNb%!U@92%H\j'I10u7U/`o+1X?kN7K=E]V=u7Sc[`G2%p>VgV6PEcDCD`L/Eo,0uPam^d:RJD5+WTQ(9mUW7&lpl*S/^Qo[!%8hJ^lhLe>l[2%+"ta2G;j`27j<C^U.ah]AZQQ\l3+.Y_kXnFQk>6_(E*XWRKCj1/"P&6;7*VF12\NiTk?1t@8U:aHAAZFmB"RJ>YV=^;i8hQGP(Do%G^ZOi2H9D@()+RlY<%k!1lI2FUV*#fcJgS@l>@doLZ\kZ+8*]"V4'RV#kk-'!c#CW>13W)!Y/_#9dI#+B;eRJoQDpNh&$P.P-L;(%dUgqI-^Tr2$NP!EXmSk]>S:%@,)cAl%$&>I7(C'ghZbBTLc\%i"/6/Z!b/(%'UicKoE5?"E"TnHlK%UMJOPP?M>H(\NMI"8$V1g9%*Op52<?7=\kZ2R+3d;$EA2TgP$t%F\6n$W]Tfa`@'\2=J)mg5F*n?L^b!CZZCCVCA(idQa3IO;V2j7$$_R:k;XC[1-5k+ud4_+P,%5#s2A'K'oc%^j\AW*9>s5VkJJWrKoOfijB$167>\-)hSJBA&kFWSZ$2KQ$*;CbR.J'b4RTVS^u?@(jB$WB<8RgTljCZIf7>)M>"C%1NY1#2)oOB<$!TKDe!&WQkIn5(!S#@LRKk)Ugdako2Bq!L[n0=`Aa9g%0$9#e(pePH4B,mcd_B,;q2"rACM0ihQkgHSLY4SM<]0b%@$\+H6p.Vs$&=+Q!05??\Djl:")%<3J7_iG@?lFAlG4(/+Vf0=2YUI.MS]A-lC6IBSTXp^nFU1d9V@D#0SHr32c#sA4Tp;6e7'u>%nm!oo4QIroY87t*&?8EbBd'bGkFhHC+3l82*/&hO4>*@3P-qAONKO;n*(65a-mJ6/ft2#=AJ]sK91#9ibN5^<'(jA"'g'#HO1;L#%ecHKEr3m#(1nOAH!Jtr75banN.M7LGIJF_Bpc]:HH##gB=Va4`+u)5@,*;ms^[$]o2BNNf<e9MeMb'B<ScTPr#Tir@,8.o?MF\.S%7&#CQ]MCq)h%5^Y4WlJ/TRauQCBPp:N*.^bD\\Bo$6+:lIFO(kn2lV#$q')uD>7E<M)skX,TtLW9g0DUkheTId9^lE+OOlg!Js`C%iU8fKdE6:>=$0r@hg!'rIp+sDS;bX`&<CLuVb`+=D"E#DLo(]g$rg;CU*C^9/[r`OMp72\XddN1IosI6mG+GA2]*+EQ(XA'fg]$<%jfT>%M/BKI;57((]<U3@ES>*7\1=YX$<l[p9f3V0V%F!$@#T+j_,s6S"ApDe)+2`("[2seHA,*4&9](9k+4M_i92P]WNW-2iN9>:%NjP[7P'!nT#7Mt/.QC7-Rm&YioSEW-i'c@EW(TXi1DF#n"iu;K/?&rA<YP9T_F_+n3:$67-Pqp&<(UK&XCs(?SFG#i)BBeWK,"S)%<J#tZP^"<)7i&3/Rc9gJM8:,udgs<*38l`amgk5A*k"[>hL\2eGVORa,95'-*Pe:VZ=&aM[(%4mh\!FtUOhPU=l$-4J7Orq#Ha;*%i?L'SD.l\Fj_@U_1Ifs>>GtsR<X4rL0G[@BksQbBV_BameY_OdhP7e9kV8P%KqYM9NaeTO]Eks&e(@-nrY2\@]Trq\M,9t4W_HLD%6'Sb<;$A4LJt^?'F@gjsnV/ps8.?E'Q$U8LG$Q0qhsH6n#i4W)CP\R:qA!&ZY%]@'MYIP4e6(2J/-%>l2[Nu2RBM`YSQJfhFZ/60%)/#A[2rQN1^4I8e9j,7;#McMgYsJQ?5X0LOM)G\mOEHZ9a%h2N4/cGMD/@UmNWD+<FfPKj)r:fhAXKF!)Kpgr5i&36#bMgR6XTrJ%.#ptIZA?u^c,C)ie7(aA@@PIL$G(ul67Hh8l\5"QK<CoA!OPF50Q=cg%P\(U<[Cq-pN_]IZtAi.d17f0n:Lb]5m7MKEJ447J5oLB%@Oei=0[_D!^S4OY>64jU<`V71Ope'SCJmZ-ld1kaA!`b"(%[+d>W!EB128TnK*nGY0RE((J.6C3T!XkA+G,;k';IL:2JN[d6l`0p%%Y.Ft&e'Ps.e*T4`\qf(b0Ehf1e<;P2s&?^L6Jt<mk:3D%_1fu*)1<*i_P@W0-^\\O_F=-WV!fZ-N=o5pj3DsTDZ+3<]GArs,tdj%,B.H^RXD4/H8Knq,apj>h`mRb_H&j&1c`HKmR37C0)tf:PHW#@I\:ZN^M\K+J(NkUHoh;i?U*mo93s+nq`#p,"NDC=*3uLLg^*!-%"s_OQ][Bb+n.Z%Em8Akk*BCe'^m;C]*]6WO[k)eh!]n4)lj._K2sP5Jj:En:+kQn'<@]G4<K1-p@Q=.j^^eO7YE`NdXP9n6Cdp+g%\bc^#kmm)tEqa?s&gDSM:PPf/M\B!&`8DKEa[p*_YR/g$n08.8Wj`<NU^OW#6IIP+6jdTu<`]fk$,W>YR@o9HipNaH"0>8R_@1*X%>#!p=M;UW-K_gp67!H:FC4uUd'uA7,K15:j.H3OO(bnGEe>\`n0di!M4GND&`_PG7*]&Q:8Ta^B8p#?7qJPeJDpBVQ1n#tlh)<&&%Kr/2[Ve._F=R@^o7&^k.Y"=%pqS]Am2,qq?S0q>FI$+#9X'2TJ"q2MP[c&[A]Fi_i&(Wi;AfKOD1=Xq@Xf/T2$0!![=/S%6:lQlt%DaX^)13ci<(3=ldBRM!]nTICf4r69m%EndkLi$Dh<I%.=_mT.)-.$ni&S\LSDjJlikaYi?QkRM.eK!)Wd."N!pi284459egR1g&X%3(M`ih,@CoX^m=A-^`"tU`iiu65IA&b6*78KkN@oC/_Y6@l;IE(Z.3K&bha#R(".TU^6XN)Ns:ulm+1Km1%SDl(`c+VDh"5*g8d6%MnR1SFkM_d\kC:,^*gc;if,><TZ('TB(jAa8.?IA9!=l#46jL[6AsXuh"7U7Jn?>"3UEaHUBldUEI_QK1gU6M3mc['o[+GNQ!h`j%+pon)'kTJ^'O1bB*>i:];%%QJiL,M;E-;lrUC<Vh.kB,"QL4AOW%d(AZ"5GccFXDV[<Lse-\6;.6[YZg/mO0H4!eUR,"f/q%4-D2%1+\#eDLA:T)TW2%LoKG!iYTJ!2"Umj:]pHd79ZasWPT"Y\@1q%b(f,Aq)`H@UfXiFO>lLJ,YcM1KS1,CGOs(B'PN$bC[]hg*!B=<%:YN+TY7J1^A)DT=3Q15(;Q40*MaBG.#Xbn7Q?c1<U5F%"lStmFaVrHZgu0q7'bPSGYMkePCuO9^#.*Yp)M-S@fWA2KW:S.8NU%oA%a1X!l-5BpfES&e#]na?[,:pYR11%u<pm]hL3%9"e'SE)W22j)#Li%Z?Ag\6%M*r1/P.`^VRrZWZn+>Tt,$q*KN_4,RSILp,WMXoc%KfS4@P(pIk=?%RY?$n3#nR]>KX<M7Sob[JK3+j9*\Zt05$q^h@2J(__eHTj<eJ+>rEf.gZAC@V=XM^B-i9M<69\1+j+t\4VpKbK/%"ef/>U,E*Z@JEc;ePbjF2MA4%_S3QAFXd6E\S/&YDS0E#%)8Kp!7)3k*rEQCBNhKjk&HH<?HQ2Sa=s2D,9hk?'!LnM38DSib6Tn'%aMuop>Ps:Ps+o$")P`>3OJY]0?m0!1#Ra1L2[&/G)63k._SWfhZ6Y.K1JVF63%R(.&h<,e-/\Fih7#i0mj=5kUXHIX/EU^,R+SC_%8p&?d0W3OmA;7YJSG'[c.eCAb?@k)4,qHmL'DmG;;O,K,W3Vh&II&3^LaQhDk.O]iKLt6WWCK^+8o0Sg:$6X$[7'r)#1:%SpsSXe%jg1sk*;hs7lo8G]-IL6]hZDt9:WCP2pCn@uXUNV*2<PB7\u[fpf:,MYll\-uWZsX:\44M#5?PR"hGPqsS2>s.7`<4V"p7T;$6q8G%',]+"!No!t1&0O\Dae?QW[QisSO%<(X@!sdi^nY)m1pH-rEP9blE-dKI&eU"5ci;RbEF9\iL8>b-O36gS;@&l4EV5)Q9;I%.T9IV%o#>KngIK0\.O+LF)"cAg"XlE1k/3>*X&QnsS_aa/KXtoi[L/R%;dO]+Cf_,(.V%sf`uV@eU8L>U/0K,IXumRZfYYGTSC:&k>qmpj%XolZ=<EFrC1)n[B/EN/34*;Kn^B_cJ,i03g'WB=rkQ37afWB6QW4.jM1hoQMopUU-9Jotd?-h;7$5/"G$,mr5;jQ%]nj6C-jfgnR%ap7F-DFZ2d+!CchL-DY5WQW9/2a".C&U#Kt<=I=od8Q:b=d,nWWnT!21n,01P3F1K[]--*RN_RGHrde;Hp0Yu"^ks#CfX^k6]Ddo%D7%fjj&%Xn(L]_E3fi=aXbhE7r@0f(2<OEdK:>hugMr+5.Ye<m#Mdj^G)$TW+Hn2.67mGf1t)PY&eNJ1SK4W"/ET8q8B\KQ2Z-.G%e&;I3giYG5HKJ]efWGQbiW;Ic%1"c>]ER5;,o)^-buaK`2=Dp'?WHKK(8oQi"gJq[:dWbQrg0@<Mm.o7[;^b%RS[Ub!Oa5$[Ygb8%Xu%p!<U@U?Z\W/INE24=gM!<WKtbBuSe/XTXXKoF[$6-%B#$)t6Hq5)KPUnGbWqO`WZ=F`:e_EpJ3F[SVTLRAC"ck&0pnIQC7ldW%Jg9*GBt<'fSgO0T\/R-=DJiZQQ4T(Qn;3+4Qr45l]M11A;Di>.aAW*oWsK#R[Q9o>k.7Ar]4A;Ui"+:!APf-\c^>/nICbr(2skTS%4+)MCN&H-(7N3CW[.Snd7Q\o6cXaBT_m%gcGTah/Wj5SlL'.meXM100mo<.59_hXNJl'8@]ilpc4i24.D%>\l&,Ta'8NnCd9O4pU%_@g.$UVrfHT$.Qrc'GNC)r&J7<?U3m](pRmkC?8HmAg@k\&(HgL+S7h-,l9%:l)9](es2/b/^d+CEU!`#$=ink>do)%>okUWZ6s5%dC8BK86hZ?Pd52KZVbXMKI<Tbdph=4(3^$$6UO13jqDYAY\&tod!Yp2I2]%^bL<VORdl-2o/&jt0HJ%Q$KLI:OO=OnJ-@7K+^jYp%&DkGXn+:(8MBXI9)O^dU`s>E%8XCUUR(5#OC1ACsOO>oRe-/"S4Xgei`u%n]*h]#-5&U<ijVCu`gq.+04tqkQpN$iJ!cbH,E%*F9%CW\SeGXMXXS8KG"Ja$3(K#n(HGH!)Anj;Is[qH=jQ:M9jU1MNSY'iPHfFIVD0]Z(O74Ci%VAXa:NtI_+)_bSq*5hQU]$E)?9lEX?%WqpD]L*hSIEa2__%plpWa?nLjE$<LDTZ:U9Ahr5B-,KM%9.F>>e<JMO<=],7XV_U':hSOY-J]4J<b%W+Qo9!;#mY_J8<+,P&tNn9%P4]#J!!Cn",iNXID5qXR_T9m$[&b2dlqRRlgpnJ]+i?V`?)^L+d%DN#9jqcK6'?X4*"i"&`:BS`Y#&W$npiPWK=$^jXllWbWe#mG%'dY/:Z!-=$,@j-+22lYZ>r@lO1qb1knd=nL%S*LnIS'1JF9#n)Z?&n`C4TmI*c93dlEjfb<f8^\9Q]Ii1n2IeV&bHF3*eEUVDkWC%mh?m!BG(^)J=6)A15q!B%+C(>6p6GMM\YMF*AP/i=%fXd5$;NbMLDq*Cul.OAu\nY/A<bOC+]dFd3n(Z;:VK8*2hX%Hd`kUD7%e=%^]g.Gh"6n?@(P0qCgP5$93S)GIk6"JDA`kl_Vu:\1XhjC;424GQ4;[V1T?:=W#:_&>HE$AMC<e\V:#@qS6*8=ASF1c+d"c.HSGZ8%ceTP?JTY9jNijEeA2a^X*6<5C<`^i:BKC_@3N6XqaE=)Kn.PtWkl`o"\Gt/2\q\"VAF;b'QCCA&X?Ha7'3Ph`WWu26dq,K*DkLeY%(u<eXP.'1.leOC@%a'`"/$NPL2*ki2dYdq0$%5i5"!'td-7q,MRXsKs&S^P!_rI+9V&.3c/]0NH2\gt3okNJN\7h1+=6><0j:PY8%A<LV*]ndF\MnMI#U:*tVR9#&4LReI>O4UW2YF9??(e0A6^QW)@"uV/&bV)@pZjm3iQSc-l2RQTrL"AnSWku[GD1)bSO+ndP)JM)`%-lPL28K5sZC0/=t#h*f1Po9jLI[?5pWp`?]e!3e7XkQKp[>)scX+.t0/TkZYAGCEAB`\Qn,oRcklG2(n*9Gkqh%f8@3b8_d:?/[U%mS^&ueU"^SL;NBVn-W@G#Q,U^7Yq>03([*j,PLL1"OKuZHb/DG;ORR>gR8'apYt&3l*UQH*Q[_5'_h^9pb&0/+S'OpU"P+[C]Ji@%iBeIaUeOD/#"344;$HR7"fkU)JuSmnZ0/,'\-<3g_]&*n@]"*!oY,(T?;m5bf/'Q7S\%UJm(7-bOk/F/B2)g=Gd4T7RC1%RnWmq-%LlseeF:5ug*P*o;1DTs'9/PlSA$Ih^44/'C@G9WU[86]ne0ST`4Z,kCNR8WgCKu:=9.=&G8#U#P5Y]ZD9Ot\qkuY_6ljSW:/JL5"%jj=A$1W;\f=0^K$0cWdoWLDQu3t*<UmAc+BSLA_=2/4$YN2hFG3maYe"peZ-p?JI/*PP:$U\n5@=:h@D^jB#i"(DRUZhUL1nNubS%o4&]0Q%!J*[f_8("$pCE2"%R^7mX%.3PZaX'ifiTTg"Mq@Rm*)-C'dN7VLpH.&BXmAIm)KU4mJS^PplOeLig;m[Ujfi?n">%cbk1%&Ve))&k\&aTg;_idB]Jt*_Kn0H5C3GRjPcZ7oZGu*t>JFh7uKiR2P%t$?8NSXLHDR;qjnRVB,lBp5'+`ERG=h2omVM!X_uqLLWB)%bR`),X:U"S7A0UQ)bea8N+ilu<`.-)(l*ZjfB]]X3HE/oZGkL;a":eqiKj@Q3/KOSH>^9HVMKd4Y+lFYVG44lq_"qocE5?/YYFPk%NIJ;4%_)ss]$1_uc*"fU0#GlY`;=Gm:%$+4Nm&#WBt^NgME+(ZV'O43@\jQ*%CI$L)"M5/o\i[m"#jC%%&^*T';O^$W]Jg&g]BER%Jbj*LV**L6m[hVS>ZjugJaU-L7SD9K/]:7qa]([eM+McLEBoq;ap80VY=NhuPghOA$>JU19&OM;R<b"@`p\_LRm=&ak&^,D">JSJ%Ot5(?+Z"2pH5?sj5j!;K>M5*"KR;kGZb6i0R;21JBk0J?eJXsJe:n-'k0ennLg_u(YduUrX1E3*L0t3&b$e.;M$T4nA#3E@At6.4%O.$^3!&^s&GOFp^&#CKLof!0&A^-+d8'5,b\,ro"*\;qsEZF!\`<'N3,=P$X]7i)AI$d>fE1r<)(ZkCR+Y-/_+b`gJMKQ6*MM8J]%ktsfP)@TY-MdUUAC`8IZ[*D91J?1)0A@7iQ4!?5>l9#HD36V:81!Sbdkb-0u;.]VY>m&K>A\-C/O3A$W[mLL>+,LlLO1aGO's3RA%e:XUsp/.BR_WkW((9u%`!\A&fWQaW`Q7ro7\Z-4Ql*[N.&gi2Rh82LHDW*F?<pd/d'bla?jsSP]<V9cT2-5Qqmmg$Q&IK-,e7m::%Z@tl>VM[PEXQ<i0Fu#'T8iQj07;7Wg`8&8+HCo3EU<%GIC'u2f7Y@Al;T_pT'2>VsH=S,LHISpE'iXJ2Y)Rao:j'Qh;D0q(YlrA/%/>/CW<2`GIfF52e>TkmirS^4E0N+?Mh.O9%-n/G,DWGT@0_VH2/4D^o5R@SH?Sn;[O^B>cf+!.1$fWq($N?Q/VhhaT$.hXZFhiUB%3O%FY:gsjOP*dJ$Q,ItZ)\1tb[R,mSR_iUG7oAEb&]lW//kb<N:s_<,Xr)6d'SLW2ru2;7BMEb37p.8W3V,SFT`1)[9mM!0`dNY/%70tG$3NY(BN0,Y/<L$4GP#7AX(%aIS_1MNQ#)FF6h-%#-W/`$s^eZ6e;m#c/m^:1[%Xb^.]`cL`W*5,rY#]2W4&^/4W*s52FIrah%<I=6i1)N#ipDO&0W)hO$=dg.7V%GiS9!bhi/s#k<Y(in]Fi_Cjl.o=S?&Pe7f"KU9Wh/gtDbPG@9QXHD%7@5EMT;3E"Of_JL;f4\%^c,r;=XF5I.r&]F/n%b&)mjplFdt&VX4+f3ALYX]Od;nRegOXnoth]$eWVV.<D^i#'kO5L?oBYFjeu(1)@13ph.u<+`^adJZ3Q$P%2XD.N@`f/09sjp\@u=_'c&*foC9Kg8[[@m@<o"bg6(HX>@Cl78e?3,IJ81osLl,kHV)_$t/I$.Q-okPE[sUbH!S0Nj0FAaQYu9lq%_b0/_Zhf`]371J!@_&dR/R?o<cSQ\598tM-c+J*0`hCZf*-'@-*N6qkkqjoi*8jQU7Vbq1JQ_Z[m:`p;Jg:slG3iuf%8GYNHpo*!%d[OHh[FWi=849\c/fHg40Og"s6W&ZtD1B088^OEUVKk&SiQcarc(Q?+Z;Z/lQ(T"\CRnrW_/*7A__Ktm"Drg"ZX(_0pLpE[U=,Q-%(5l%?`$nD6K>O:hE3.V2[t7I.iO<a=?*rHF=6qf`VPgEVK+m4&<dgIGM%pR1?6*$,&N/77>OqJUB<3=\IORq?fg2`@"rn3mKB'L9%j3Q3DZ8:0SR0njFb;N*A20>/:WM?qtP8_+Lmq6JK6W-cl7t^5Lp3X9cH+\+7=OF&IR/::#AX"M89SaO:LFOfW\'WlsBjBr>MDeo"%r"LQCSd-2C[FhF1+6D1^m<=ec.`SfNWpn9S's#>sOrY]V*I/<$<-u\Z=K=mVaqsYJTOaZ0pnu-J&Y_P$\,,b`9*BSqm:];fGn`R4%,J+7>&6#oUo0LQM@JkF!VJBZg3.#PcTQZI_171tk&uSkW]h,8%CD"VGF7UfJe#/(Q;<+"Yk_Sga?V9X+O>^u.0q/rl9<g#rXK4?q%$/#Gdd!Sp-4'8an:!s1kO36U83lZBq;,#VI80F1,p&9icC7tA`APecrKbl]HCgKD;T<2Pre2drE3PK%"+ToT!7W$g]hJ^gO.?j)!%4?Sc:H%<:(k&e.5e*MK66VDSWL%"&*K5Tr*6*Eu/%?P?Fl+f/EgF@5CXEQ>Y8"Q'YQlZt6Fuc8XS>Rq#TZdf_;]MXT@ieef"g@2a%.Si;sQ+27CZ"U.6_j$5=RTfdG.X>7)ALX]N).bdaPJ(0ojH2%Ma(S(dH-0[(RI$5`6`M.\ToPX<PfB._2W_Dj`t&oN6k!_`6_Udc%51)=3nV@DuIq#92$b:#*K$Y\V/as#a"NhVJ\,la,M]_jbl[,9?;/XB,I8_a?FY`TG3DQD;ZQJY89K:!m3d'">Nqq5%'">UQ"+a\V%D&]Xno]6@om[6S-(mMU\A+fNZiqAZ"-C,[\(@,ubXAcOEL)o-^Q>gq+=F#>kXk=TVG]@VDpleb:U_"b"7i$&3Y`DL:MtfZK&h9CR%j;Q7R:@)fuZeCFo!,/P4WH[?U)]lD6>-Zp8qo?jC=qm'BeBep:RYtq.nsUIXY<4Ra$L<Q6rTi;)KG*N]Ju7!XT`p^Yo%<u6@(p:9%Nn+bl/"8Jp_c;u6*Ip[+fcq3+N73F=3/,=/]@Kd-1[]K23?u8L?0"h]*J3FuR6t2OCUm1GX_<F>2%L0RdE&DjG%NQ;96cmmL*a47%<%.@gW`@PfgpWgMR+8L#RA6aX6Ase&W/ApCJ86Wp*9PD"0%LoBUIN!f)1\$cWJrO`%2>I]bmSR)-UC>LP)Bp2_bCJW3nqJ=BouAS%RM=.k<Qi7c(2@chm-%8K.9h4"7ai?H:aYu%'<=M9(&j5N%-k'c5L/;,;"!HKbKe$Ue-X]Ep:Lo-Pns-(C7VB7g/0LSd)1%;QUuV#%cN;UjNbc]IYLh)j6P3]Kck$@p"MKBn1$6TqEMGc^ZL>Gd"\='K!oojU3^Ban-Ch6'@+:pI]QaTX)(ho_::t=1+6Y:A-4ke9qJ')%%]pZl&6dUEc3^UJ6bH^PfcBN]EN$1KOe=_&$?m#q_U1h#*MSK<b`#Z3eX`buujfm)c"!OZ.`F/B>BWa.:%HtDCbshjUKE2]+oNJ9>%5Y,?TI#H"g+q+m&@RpkOYU@:!JI#e!X1qC_*GJ'hCfZIrf4[!%IG#R)3QS-CCE!o:@M6FW>#e3'V1g*rBk6_<<GfXU44&9C9W-9a%fF++$Pi7_I_.r%fM3O7UU7%0`j-DE46),B%Z]D1I1.KIP*,><n7p%*kY#b,VaAR_HjV??9kGpJ$(.eKl4!S<TjUk,8fgg@JAjfT%%5UHB!S1Ig#3QJ]3R[Z()1N,1f<h[sFDUi4"Bi\@Dn<>#eBQZr+;qH\.5<qNZT*W#$&\/N*kqWnn#-E$+1Z<2'c&Pj[%lu?'En6E*%dP*=R2ZU&'a\sWB?D_B@Uf](MVK)_*PZfY4ZrG0Oe/01%mSFt-.$k<tpE%<!;DoGA8IXSpNBSgrY]GfJ=8QfIL5[0?nK:.RTN*jF%J[T`5\DUCGBOKdM9h*F)61ZL0U_83#WjR@6/n!_h,%eEUs/rWP>#YFc)PNd(1ms`<W*W+F!K;>82=,3-3$^$q4Q,4&c^a:413$hJ%?lk-*()%D+3(I>E(d=qgaa,cE&Mc6F;Tc$V'\0:LblG.pAjk+X8_11+)W3#LV/qrJ99#)qY5n1,UW4!W!1*-\B9ml(>IkS?U)\;Z%:D)2sW0RNmF'!gD15abI$T!ATasW*.ZHt^#\R5WH.(!SLJC^ei+7&FE4FpmAX-FE1,O<B_7`&;F?7h1uBJ[8-$fu$oh>u+c0<D8t%ECX8G+`>ls<Z2tFggeiGW`A&$)Gr0;@>^fOD,]i'=BR_OaOP(]TJ^k)Km8`<_pRt6QT0lj1(Y*+>A%b'.Y%057E$E#>%J4%6CZ8]%*2p[-(K!m`:r>RB=pBtj^aPT_0<A!S'1@Tg/lYaOQ<.chPtDm=hO`n60Qjf?Q_rV][R9S-0Hl_4<Bl5T)VaK#9r9B&D:P,N"r2a,%?=TOOGFO"iZY%<pBrOYQOHnXA6]BLJ`D(,FWbUCuFtrYNIUZB+OKW86G>N%K>Xt2`%?gjq-QNU(TZ3/\:1K79];t[^eAgJuU]lYF%`fLia`#c;l^XoNap9c^B$*lBPX1`a.>0CCTXSQFtPp;r<T3[;n6FP%3>1S4DD9,gr:X5,?/8A-@jHPZ#naK.LXuFjD9]I]cAQ6`2%BOFA7$Qf_d.C5[Z#-:WELO>#mFA<dlMW_teY]Zp"FbHc/('KKt4/OqJ`G_h"%iTB/dY^BIH?[[;$m;DPlV3og"sBr@i$4J`V4[hK%KL)BGGm6-q&YnCB$:[%Al*kjAou>u@/CrrQ*Fj\o_D%^LTT"PXBr84=T2#nB&0D/DY?>59Kge.ibdR@a3[TET0meQ%;mKEY08ps4%/-_4F5[g>pS+!4U')JIC+#`)q%d"NoWtGikc8ACGX58"6E:lW(>5qph<We8Xki-5tj!0L6N3gpP9jj]5qW@16Ja0iNVQI!BYj5.2%C4iJG^q$P4k5f_*=@Me`7Jl#bAuHm])dBBK!j:#1A1m@/coVf`7%P4&N"?%4ija:WlFf_;X]6W:NB%I3.=-KD<ZgK;,\RBCC.&)`%:h543_:3m+(9?aLnA+sePHgEBC0I@e6M_:TA/3uE:7QX(eEb=fjp\=4FXn:]:%>"Z3(/nbGlgiD28p,hm^snM'$p7l;I]<8T^6VJ%(0!=]/GjN8'7qtGr2qYYB#$?X+$8f?0OG;E!!]d)5,F"Z'ppIngk28da21=fL?-[L=GKl"35g3p$83r:B^%r6DJ\ubK3hNP"o#Eh%',!-kKfVOlE-bLa;BBN7JYoiK.\NJQZl04l,<-<Tm_8C4lGNgjQTLA]W]eb"'.?MQ+kZ;1:KMc`3KaW-.8i!i8CMe#r$cehJ<nu&%3n*`h5$_6\28j,!2O]p)k4_9UOFVN\NA#4'IS%e4[+&lr5q?G%'[1_ppN2mYPqYY7?I($/kZ1k%$`U:t-H'n"Zu3\\=Ga'0/jM'!%Fr*W,UOmJ'$g+@#N*s%[:^SaJf7p=VM0NpBmhTNT;7l)0#,K1@(0onE=eli.Bhdd@$KP6-`iBk\e`02C`6:mX4h,$V2aaaFXk2-?%*kUDD&>$Vj2nEmm#Kql<MpVeK^XRM;$/YiMM9[A7Z`*$t7>?EuLr*':I"Y*mbHHRrUt&pnr/+L+%N:"-XLO_P*lUkH32;dfjrJJC%NADk4J;br/J8sjiQG?QZE)o?=e!.FKP1>gHHD(qSC`iJ\S3O?JRYL*ZLBPfN9=tIZp7^?*;47&fok/Zu;s/%@1#'JX.dQ=<9@J7A%);q5D\XBEd(5n.1FN^_G=p52Lp0-L;GL0Lsm&]I=aDn?e+>pC9Cjb$7C'Inkie3-lK$B&!b?6%;\bk*,,sUIOXt9@3k)Uf?[c97)%AjdiPY&UiT?IF/MTOs4g0m_\[B!!_:FsDr+Fi2uQX7)L9/8BoLVeAt9oQK6s8qpts_8*4A\VA87>5BdPCp.`JBF0Af_tHsZ4:NH?%]G7t$&7%e;.(.W&$U'Pc;-j8PWnGd?;)9c0IGJHeN8dpA=5.:4lFV<P6r@.7diPH`.UT.'ID^$XGj?=rLOP',p.fQO'KLh'PpZ7f%PDAJ]hEi_s8K*@\=\$u!(3lXlm44nB1jk=M.8OZ4fpSHZB8ZhNWUulSNOfY1Q$IV#;]1EYc4?Oi[Lclj0kHU%$GTG4&VU:B___$P%A#uoPC9\sXaeH\@@q<8]E>H`Eb<9(u<2lRsGeba%jANHD,?O1F;:hp>-_kDjA85:/S&)ts3Cj7],-+#16X&[*P*H_T=t(!t#HSmm%$;>,`+%/o/R]jqX@rFWOc3c.<2(W'_:omVceA;X(5su)HK/RsO@_)//V,;LZOt2FPC&rTo7e:dn/&9:>e:pUM=rUGQN56h\crmGn%'8J<JTIFg1f4sJX=>:_mkA)jGZ"[B!0B-Z2\'adqM9^q<A3?_X!u[<B:*TSAN8#,+nfklX]hB59QC)MB><T<[/F8ufTJo5aX(Gt<%FEeiMEGZ[g5RU;i9*?f@2\/54d4dS"=M7Ll2ZdYj0;pA/GRn7@i0k6L8u#9U=r>j6VD-A5"PY<ibs6a+]E[hWQDlusQ:LBL4FUXg%oW0#BpOFY_'mQ:?='F%ANHoT(^',\KeU%*)7=gpBC%k_`&2VUPnlDMKlOCEZfUC@XL[CQ-T_`["TaQfAE-VRc_AZ<AWd^6rHF&D.%WRZ-,),`@k0l)Vu^nQ]dBuqt8j/\Tbm9'+UNeYHs%!kKthA^C("*h<bRqI8[CX<^o0_^f5TO>CkN%cB<hPJj=$TPRdj6c0Fl<T$P%&9jtb7TeZA3&?kOFd4cn^^=]sP(YPZ/3h?Vb8TPE%2a%qK\P^u>lYF6(iERu4505Snq+E1RF/$PctX&df]]q\1crj!20kMGia%Lo%@F:+%$$rGYEBA=-g'fpd)DB).e@]"N(l@C8aQtWP:bP1PFsV?5[nrj7H7JktWo>]D,gDAhJN7;O&(!27:#GX?aad85l5&H'Ldd.O%^dsnIH8/s7XC<cRSAt/JYTSf3LSoP2lb-sCV0[Y1gh2)SNbIUS[kjL41boSr2bc2O\p>]9ZQ\A/\.f:[ncD?H($Ua,>RTeALCdK2%W/$!TOV[o0kP7<5mCf%cq'UYT5@;'+T$1PI/P]'-k;VuD5Fk#K/?&%a2ePCQ6f>&550-HDVG[$WVQ+Va_Yi2:n'qhJ*3poOpQiAk%00gc+NKH4g%eNKt?;`"`oZ`kn([DHK0/@YF'DsWnOl,E)-9]%s\/5`B6[c[m4G1B_gk%J'n_1r0]QWbg$oK*bo75I#_lJ!Z?XS;"%MdE?<'\[p)pI]@CHo``R(]toN*[3j[[e;W".=AT'p\AHO^:<uRH$jUS,3sjuLXjo7Sjq4m^^>M`eT,['`T$%Fo^C4?rlP0-o0:o;%If8*AeJnIP77k]fffclj\bpXFH2gq%s5N1sg%*nJ>IE#Y7\e$SSmXX6T<Om+OIU24c:tPPOP?VSYl8rSMs&V@NqIGnl80u95jt+X%V"[g9fhn]f<:peZ-?EmG_RR;npcJEp87UcGj)o`Cg$m59CN^G(O61KPj.[,>'%XRjbJI*i_3Keg!X.A?e.`A-`XLuZ)>T[+9;;(^%:J3RoSX6-rFjbra-p(JNXqi5.b%,p%Wbu..\?+8j;stpC:`B0;G,n:==/,M!f<>O?3P1_\.dJQ\e1%7u,Ktt>cEl.SN<7I%)t(51%WV7.u]pn3A!`0JD;MNXR`)4nsT`E2>L8es:1#+9=]^J90C;l7gJ0QSa`1c/AONf`/+9sJEiL9Sg6YTR'_q!^EBA=.g,-,g1;NX?4%X_$n;]A.J410.3?ZgoX8pfU+5gJ@CH(;!l<2g2R*Z&7SMW*e?1Rc`@1XaU2_Y1E55=0"YtGC6Oc(\"gN?MfZW>4[OD[>s!&5FAW3%4m6[(.$Vs-']+=S?J2>#??h)tYhOsk\qrA<736;DM*-to?Q2$^30]t:6YD&HGZY2C,.',c5Jil9JcW_LH;@Un12i,OEu:Z<0>L"Y%k.!%c+g>*KT[*HW3P=nfU>G9d=*c0k1-84=OR9JJrHZO92lT%9qVd-3CYs?d`qQ(uV0^t*hH4&d5-Y&ge9n]CU2>dKqWoa8Vl5[S%NDbDkL]R\F_rmqj46h=DZDSYGN6IZHr.j=kV]J8ceO9h.]'#HGQ2RA8=RBi,30`\Z!?_R;1p^MV#+:hJk1VZ$.;?MIFm`E6%Xu,S%>g:,\MIIik3E5WACUI.Q?,4M>FcC^V*Uj/PpVO#6C.F2>2SA2;El\,m4f6c&.58QP>I#+SC=m[':I]D?O5f0")HK]=/@`_>88Q";%%u#1',Lg=LX>di"*>,f1GY[4-A^"aRonR34,La2KjZBN:nNpBEJ4&rpFlo9.ga'j!d,5V^`u6e[&KZOo/VGCTl@Bik^5N&VQo1<6%dqeJ$HGb[G#D]JF[&]jPN\WVRiN/hmJjO<47,7MS/bC>Dg`DL-U7nU"DnHdDLS1%%g9U4N'#":5qEa)2K^Iq*cD1o#1[P8Jc@l#l%^mR1^[0((>D\tL`I_3[hq#6C3G.OuZ-9jM2VLIaM)?3?!cD:7AS8#`)i(Ws["jWA,%\0f`83\\FL<bCC&iddV;QHc/1=lj>V,\Oq%]F<,r;(#P`EZDsjok`PJZm93Z[%"Fs1)&:(+CnoEU9Iq(7?n&OC0(b!LLZPlX\T2qTMXWi+m2a!f`k]b_rq+OPWp:YKr=E8:\"MB%U++,;1PmZ$#5'$ej[Mr4?FPoUhGZW2,G+X_9sdp$77k8(IV%O;S>nMDb,J"J;GL6i<H>+:4O-H<Wd_jMWq>&B<42O#;l]WXT:/Zs%>iX^Q8sS@MmupY7//S>aj]%N@K/lq?LH"XaW-=:igc?5U9f&UI1qPSX<g]>EMDHM6%]=6C5c":QGP`9kGVbiNnO)S")bG/!l4don%'P9YkJtW.m3t"q.d:PpB/_u_he8G7Zhm>13?0FU82&$$B>';d1Qk3pfZ*o^"ABM,+YBs=140_?YPPr&NK*A(O($j/,]?hDlJo/PA%0mX,tU'o#"2g>[38jGHS^!2K`OB;:!F),21c`;jljcShkSUFfkbhh!'grUtafpHse+%T@X%CO:phLQ2Mh#p&_d>!X>IDu!ii\J$3%:m-AW&6t,?,rU/A2%T+eU\<=O6.oYKFAC3V1ombo/Mhq`3,VhdS*!Qg""oaS(0kY#.[`\*3JWhiNo2u+P]Z$O\9>bc<BWa?,dgj6%hL0pfX[a9AIC5Kpgi>Ip\W.at'!)uZ)oX"n:r^Rrh_i3<FK1"32mgD9#m2qP4nt>e5?lY+*J:nri%1bdd"6Q8g].Uup1>(BUHsHh%e[8^.PP_Yrf4/3!-m$IhooMdp6m/03\u'[:/u<1EJrW,BPX(6j%jf_.[tITZfqP*8G$`u/5eS&0bnB=,,3fHpTHBcU*7_pBN*F(6%b*s'uTbu-I"/Hn0DWjcr>%*;X<:(8%A[4*bqO9L>(ZqHVq2!9DRBSiSfbJ8=Laj:m23<#!oSH;;:7-OPU:\aY?A2u!,5=[O,6TU.%Gc\H1:5eRd?@uB<$n*k;&8]9TneglJTS<igeLh8!'Ou;bh$h<!_"Wq[)(Aj>GDO5<U\n%0!DEb/;t(,o:=Qh9)<j>"KkQc7ih2aL%hBB&%%Ylt-S0Zo+?o],g%k+Dmc-o2nb7?7OglmWLSU$I+LrF8,CJG6WiEjfLDeILEo5J<&nf##L<A-?*f["[&+E1<?J-#2Y;4,mK%#G](*[%u:4e7VOVO(hk3i"R#]6^[E&d!dfT)2jm;FKL`V/qaFCnKFKP<1e\VYh6?&7>kN"?Jf/\PY@YX8rZ8XEJmj.&g(8i7FS92%82GC!)o?YgCXKIX,$f%>"@c7NXqr9]8;1daButf2""h(9,1[eefX,Fm)mKCc_$1Xf>0J<6>K7X09l,a-?.<YU)C!gseX;Dch?d7d%.$ihSUXaK"^/;nH#,0JkgWE%k5lP\]ei?D_h*sJpi(dG`,I,aDe8NQWk<2cQc)5Fp3Qf_**%dcuUX<^$VFPuKWDW&EUbrUMdl9UI%bLWZ%h?/<alT/TS0C4'uQ+5*%k^Bnd_W&JoF*)!)gTmm+&KXo+5>p-:A9i%FML;=6Si_nBN&s50VW]7`M%3s+?g)p7Xm3<^N:-*Y%^^h/$F17ZuY'$TRh4kcqi%@u)hV>$'4b^;[_seSu*QDYg#s7QIepBs(j+G`98/<<8/c-D#D5M+))<+FF?aFN8;*hUX7jmMs4`G4\%"'?O9THmg3`[E9\b9Fh1=?*cK_g?ePGF\>*-a_N`$msO^;J9,`3%^6Z%)qTg>:J"a%1QgX'(V:.CXn<:gf4^aA(BfP";B6\d)bP3%o70QAnp?Vb2"sEX2ek&Sdi32Q)5G+8B&X0/X=b?1dSXaYnNJNG)+M!,6:_mU>`euiD\/R1JtgD"["baIX.dl8r(@&`^KsAF_j.]A%AEE\+=m^Z-f&YojAM^X/P`_6nRkh9?m<\*kdk\6.J+h`'ac^G_')Vh/6\s3$L1c8T3EplGgU'!G).NREp`eH+aOo073i_K<'XY62%fAl^M5@fsHbd.&R;6jL^_#I1Y=YBsD?U;d@qUL'0-*(UAX;)iTG@4s0r7<9+SH+oQM3,\4pKp2,no=]%6HCpcl+\,[X$p"aFbD<$%Zmo%DOQEPCM\<<4(ArLkZHgL'6<=!Y9ZVOdQiC>XQF#$>6pd2N`rAmA=\eAaEsZ!XV>++(Z7P_K-UO-&reDY-SWD*M/Dg-9Lld>(%>(eHM/lm6ds2u6^/.MTJ)-Q._J&TJi+9/U)XH.i[*K.?)+6Zh0RslM$CW+bg_WPB<SWEdN2V._[@q0q7%2l3qr4B5=guA0#An0)8%-oTY:p@5ncNV1&_6i,,+\ShFGZbBg?VUkRXNls<<g4tP>>XF-@PWA''RdhK@>V*1C*-KLjq;H):G*[(hS_f[mk@C`Fp3V;/k5+%'%$Hb$fF?b'=+4siuljZ0\n*!&T46-5T7">,U1[9IDs7iL!$G2XAe(aDeMN%hf',rQalq2=ik3hHefbEu`j+21GAEhPj]oemdh,,Xg%RIPK\U*>+B(3S8-`Qm+%MI?;m@uFV,r2V]oSbT\b\L43"RE`!@$9rfHE2t^^7s+V*.LtGd]*B>dXu&2YfH/sq4=OHAV"'Ft1NlH4%#CjBFK'iH0'.@H4g+\0:]b/!lff,C.Z-O7A+9$/6HXDh/q@-s$3Gb#$%LkujP!Bem0m4T/@^NE3ftfP_YN8kLqJPr!QEPb#i8ua^%*T-MFQ,.9,(.%1+N7$5?)7)C_a-[bDg0(1p<=i7Db27D"2MbVSfHkR@"/\F;:]0XtAnoBN=FBX[QEpbAJ_CmD*0GH]T%UBb'0eMY%T&FTR6%-mI\50PBT>*>s01gg*Q#_CdIi[0P"9M'fb671BH196OHo7B>cR@p@pX]u244%]thsUa_D(mMXENOW(#J)V9g\+FZcL^+b%aKVi)FXd6@nC:QDLJNL3A##gV5Q/AoD]PqD?GD&N0]s;Ug."VAg`b\OJZ-4r7W`hW#";?;EsQhM`Y*o,fC1=WFG_#**]%_.:^1ZE%;F>YAN-b0C)"Gp&/f$0L!4X/5.[`qc3X86#X_LOOg-He-l>cK"]HN`"md!X]s#7Hp4Mj&l,<T#ArPIU,^f'4ikheNq`!`cWmgU:M%L;.:Y,HqM,Ftm$VJmh28U_iIs'Ih!;=XO`a7[N2>Z$0WaiCA+0$jc--_gS1F<J8nS;\@n&h?P03*'6RDo.A1o"")SVa_2i/kFke8%%,ge3etM:aJCORd,cEnTO)?j6>E5$#XOhr87uA1a/j(l4kZ'`T#^O9O#]L!n:mqEt#"P,?..##Q#W9K@fj3)Ts35T_CkOohf+fKg%9j/>q>JFE6jeP/N#HY@KmO(K-*dC&CXtI\3Zn<4]rq:*=L,q:9d5gHn76l)%QQ+0n`_ks0RMIqC_P7[KZXGaASE3GL^U+lt.*t(F%DG=f./T)S-'dgHr1&)]aW<r#IR%)ecM@>/p)F@rFflUJoi4i5M3'5:[jol=Cbm^a^RQbqDEc?#AhXBsdJr^U)\:[-:2acn5.-@I%%`\9mK+ia4d(LE_<)I(gZ]*6tY4Ni3<?+LdLO0(K6qFW"Cg5M"]*+t8S-j?HDToF>s8I`uU3`pTfBa/poB\1$(%@_YQ=!6R@FOGI^%3a?m;16b.cAK2b81XcFdOgV<O$KAK_%^8ocp#.k[neE_jPhnGlf3kG`d-qq9/SadX-DSI=0`)EFT$E5p9jhbNYLftE6El=hOL<?b%YA(=XNR;CV)Yt_':lU`P&#[Z9.`QZ,=B:"SVIG_VX3'%;lr%BG#N!\)*()@-?:84s[kCO?`mPOV*#,:b+TXTH2NL?/.:8^;7_E>'%`Mj_t2-If\#cU>'h$b2'I8'I>4$b0\VLo>Z/lBS$jlm9\:&3XH3`b7CECQK<f3X%E4!hYBXf!)`H'm3k(tsWep1NQ&bFkj"F7Rr.%MNFDGBJ5lP33-',5tAHUoLG`8E+T@>14CpMMBXsbgWG9\L7I`bZjjUZR)k.$6eQ15.Dd$B'"&1N"#cI'a"DF,&l*tKqA(bU?ee%:%7b(K@;O1kHLIO74hX(n$Vko`=Rd-LDj<5t&ZmH._iR)WSJ=9P5M1u6i!"lu?iOc[ORck@T`E+*C]Gfns`iEAqiRO0e`ulUIj4bIU%&2:Q#.*5oUC+6sEqf-fk/T@e$FGMaP`&VeiqA$!f'/K/go!36okQ8A-NT0@Kl+7V`b@s)s/]S#s"qCK0,&EW6^S2*@k'E_-Sc4l;%pg/6@!PbqNY@?r6@Vu1*agh]#[uda3A;-SaHFnJR4)+>PgU]"+G?PuK>lEJ:;X+B%/4G(<;PC/ji"/?eJPbMM146^mXh76/eE@AQ%B0r^X2L:>,pM/=E-I%BDq]gGYcBt9<d<$"6ba$:,E3"#.FH_;Xhl-L)96o1:>EC;\eO)f*'Pc98nm+;R>:]dY:U^:[FI0)G16[mR%R76@qbo!N2O2$6CgD$JL9ol)(20m"$@G;Ag5^/$e=\>pU/>8YmE]Vqq)dF7<>8R3bO2ed+5)$3lIL`h#,^*Q,e85BcSbsCj`mjqD%XMml,BZ-9HYHU")A]<9G<q;:WDs2OmXS8BbG:&Pj\r:'*"j3LcZG*QK'sL.s`1,%I?-&HqUQ<+c2Q-_lU=$;R9pA9nBr`3=ZO11t%_S)-boXP#9EWisA$_A33:8>,a5s<HY471n)@05J#Cnb#\83g7H735OdC<NCIJ-$ecfdgEKUo:4)j(dpolBm+"3dI&91@`Y(^3E&Z%Gp8EK0cDq@C7o?OF::K\!!TqbN<:q%Zo=!SK3<0$j[_FAgVWO]Y4gk((>!VMF,Tm_<VYCrk#I=p:=k?UOep1?I<V**<?,J=gdOC`%7QhbE';^#Xe>p/s-_t(G\POMr5"?-13PrWCN7/$Y4*>iZ*O:*1<?L.#T_SkTiE3..$)mippl!,"Z_5HGFq]//+Ens?LcUOa(6/`3%P6<sXNC(-o9_\g^nO;XRNfjQ*W-?1p#Yk\oC4P2CXq1_Ze*/p*9PbbT0YR9k#?mN_3s]s`0Z#_,I:>d]iO(0iXtU]09WldUeiUD>%=816S6f.d4%ZSk]]_.O1TBrAF&B_h`50!<WgU_oN)CYl,Df%Z@L-TM6(`#`W+A2-FdT%.&UI?nrY!X4a2$Ft,Zk#t:JFmF>)UH-:%>^MisI,L!.9FYUWo^I+GZ,A"RO+g93TMK4&8?ll-B[E9JG,afcNaQlp@jK")>IBl3=Wm6_VC[ncX4XLDAS.WkG9#:!B6Mh5pTf5N%e*'OkL.+gnj+u-0!Q_:oTOR,aq?Sj&oKRiE,8gUkXqK%bBB:tEE8EQ!<T"bkc#YQE5Y2.JXYQVgq@^fdY)dD2%C3hq0bMn8<DgV3%(:X$Zp$dn+fhgjZZ4Ud%_#3@XOZ.]D#F&7c:S?hO+``R-cPbm,cU1!W&*)VD(MlPsn>V/kmI)Y@mc'_-F=G0G$0h4T*I:o<r*TF@%n'lRf/7d]?=.[5Z7`)cB$.!J&\?Z^#.F<qaG\"$4+'?k:W]A94X(.cuo;`4T9PcW1=fsf:6sZQual3NFie,PXd65u>O/R]\HIO:B%MO7Ct=Ht%,LufKNEa!ck#TR&=d2PR>oZ=r:cTSQ/M9gI'k(EMOkTYH(V1Z8jrB).#B^^/q?45P^4SH][O]jXb9GjUc+\.H6o*\U8%dFb6V#$Ga@'If"?k!C=07to=.)#%<:JlS/U=F<R,B<Ws.)E@D$Y9K"3'SI9H#fOO*XILBY=KR=S5,4Ap<j)D;1)nREY$a&eWu<LB%pV"(t]t:mC8Zk=i$mP^U,dFR[3j0%3:>#m/KRuB-Z/d_@MN_PUB91k_d03)Z,@>jDjIb*K[%?P%6lb<S-t1M#)<ojaiUs`GFQJsC%RS(3urluCb;?j1*kjOH\$uqPn!40c#YLS8_WqQ3G!)O^-21h9Z>Md)rRFDi@rqc>X#YT$1S<G`n\iAPc2D*,UahkfI^T-9\DSW^G%;,mu*A"iRK8FYn[g)lF*N/foAXP89,G';]em_-XcX3+h<(%Ukp,QX8l*tL.i4O9d$V,n6ur3g9HNE7t0U(IkIH\SJ61AgJ2c/N`q%@9`.;g:=GB')^p[jU;<WrU;K"n7NDBOBXX8WZs=9;,dj$iEoY[%'jGWRe?SqmZ]d%FnNOklIq)Vit6NmdE/s?-JVupQ,SX*8=.2*%GPg[e3-d?c;1ItD:3%Eq,j/6gc,IR@_,sX,UgbQa&[mrDUP2$Npt_;#GCG]P!<1s2$!:lM``JL-rA@g<SL'q6AC4[iYH0&u5$eTU%W5_rcEu:d$7]BEaldXAC8h4`9Lp'[q=Z$8V9493,4`>Q?C>&sb:/5VVa<6piq9T]mA!8lUL7oj/Ybjp@<??Jni^]#\P]Dh7n0YRR%'4Oo^?R')?0U\NZ99Zt$9&DHC2\kp<Z,E-O9YTeRFf=N_^,rVm#PJT<?Cj-L"Uo\7?o@J=`4AgC:mWTW>12.Y$>-7_6QcWfK'&i`%WtH$l#,dH$`N?CX.I1!-n@=<=fd5@(_JkDZ?.q,IR^=5uD:aXu[\\8VcFN7+n8@P#CS^QL&15&3[\H<&_^VAtrP[o^lPmp)Zb)HF%<D\?d$k(2eN)\afR#!5FBJ(WnE2?qO)n+rk@*4['_(h.Sa=cSKJ7G=(N1f#=0?nDIBbl-JVO)mH]h?$PAbc4aZ8aY>q07<H9?)=o%/2DZm,QPN21dRA9h9!bX38P7>*!."OaO0%fBAfm`r:safZ,j1u*Jr6a9Y*_f6&/bRl<_pt&8rp1URgmY`&r.Kjqs$#qtl!gY#(M0%VUCdEV5o\U_<'o"$T_IV5b9<HYU6ir:Q7P@bKt[$bf?!RW"95fojJc_e9QNCbpkn29dX_2/>UB^V^#*49d1eIUMn!I=Rd*M6IJ`@%!H'V._'b(FRWT!=dWF3jn^$$I-WXnSi4-s1K&a,V&+-:t]/``H89iu0oaY5=#;]q*Zk%<on4B`r!#*mQ)<bi);..TL#D>t&5#WU7%bBS]!.QMg(<ZtQYCphCV'+%U*D^B94ke\"ml=V?'eDj!hQkO[@G4Xo+gqtfq9J_BhrFI488CIGTfYnO@P2.gH9i:dU%(NkVkKfha%<HVO"E'$hI*YV)lF"a_r3MotY.2Pp=#p@7UcshN\,s)8L4i6I&d#J6FKKP8$?+Q]L+KZ/E(or=.LJ$:fW#YT%)$MQVEb.3"'S41_%hA:jI-(1Gg:tm-/!71_nm255bf,Op@%!W`Ir5]11.':!o9(:%N`9Bu+TJ8/i^hmU=!<BUIma8WkYm:/C1U<S\U/E"K;,L(mq!gXi%KdoACGqZWK2FP$gWW"l2fYAk+*agG/7kgnjY@)iuro321Hs%r,lA2/s.I%1*gbQqqMh4Ad2$NNk^=Nl#_$k\tHNjjrq5&8&=Ogo<%@8<$JRLmR4KdRS=qSZF@qm'43J3&GNEaAJc2MLNh'$'81Z6$poF!$gm"eHNUNWZ+H.6SkJ6I1Nt)?[9ZrAb$?Q[@5VB(K!9dVn2(%/XULm40Y4]`6BdSk29IeZPplLifg-j9;u!4WHbqcXAj-QQ\;MB)`DpA8ruNF!9RDW$kW$IO0Ot\Sbj12BW,oq2)YZJ*JhCgnR?Wg%@W%hf"omLe:(0i)l+0GW0,peHYdYEc,76BG0o`S.etOc9f3MU5?n6,_,N'Urgh%0fM=u7\=;\:o=,m#rYJ9p?[I?>Kr7)%O'O_#@%P7\q&Z4/7m9!iPq/6N"KcsOj&4*$)"bgUsI1_'PSH-VVS1"I(iN@E_93QNg&7N:m'*%OBDUBi9&FkV656@emVjZDbsnR<-apqTH7%"Yf,`D/e!5O('g3WGhU,GMOJR`TG*eo>LcN6#qnGNj(4YWKpm-:-H2GnsO?+o-bFg\UZhB)SacU+drRm]#F6-nn`QJY8!(<<c)^e%KM`FhMu7c4KE2LH)3`.J:p)"R@^*blk^F+s6&C5kTt0r//*EiY3;0H9dBt/Y)3Zb<b37Ac7t;Pc@s;&fq[YtoaP58*_(X0ZK-n3.%4FfHe$4./cm?%!Jr>]d^Y*6]Pq-k:8OP;9k0%,CLQY9BH\5cY7-J\r-5\T8<LGmZq5Xfp5MN:i.6).G4h-[iET>I;La=#!Se_`a%%@_LCMdJPTWNq7lkPOiDSFZF&1!JIr<U*Y=B-"da629VEAjS"<5Z0uk@?%nb6Y4D!8:Bo>X#5d,Whf!N`n.&JJ:6Z-e,'^-u_=7m.%3]K*u1W%bi-61$_H:R>=l33oMmt:r*n>u%t<;ce".`Wdi?')\j]h@MC:8b#ZD'0i.lE_W[D-@,l6rMtX':GO'hgKI+)>oJ=V\7TL%c8kR5:r/PpPu#pKg1$t+N]hm69CR?_F)HW%c9=EPPg3]3T0F%CmcMJV"M+Z6n,f)t;WVI&4#OC9:`hm0P:6pk'a'5$1+F[J:E:Hl%:m6r[Y`,r`&5-RINj]NAA@ht3UEAr8$pHYZ/>UJ*iP@+_417WT\7=mDmS,l,LRnsW`u]OtkQ,@6p2.14,YnWeN\/V@=(k1*JN67D%,joat%l_T_/E7sk,4]]bV@7ho;/6lANiI:^SPpZDi`=6rX=(f0B>iG649sqUTCK6bf(7gnPRRuYL&*BO"H#jl57$i=&(![9>5a7>%XH)N7-c]E1i+^"McXlVT6\A(e6!Wq8M@N(F@1_Ro^_*ejLY3paSG*B538>_ufQU%.`TSTC&t%%',qMKpb6&_SftB`"4dek6F>T_B%fK+>Li`p@j7rlg5_;"TdJ.9qPM&P.*H5*;3F:BknU<(g9c%l=froX"s@Q6l*nRfEAUb)k='!.Q(hZB9hD9]CH5>gRua4G4p%eDM:%Tkl+UMa2m%$IH98\H>52$j9j1(dq@<<*$90SRu`'FbJS'*nCui*SKKO(AKoXD/B)@?4IX'X+OfiDHIn/CS*<qZU.t.i,se3:gfGY%><t_9%%u@E\.c4[=`ZQ!)BZCb!]+u588D+eTOK9:hC7Z\)$3m(bRk$K8q0Qa%M/XI^XNmH+=I_Yjg!o,'MYaW[B!a^18`p1Ks99-%S./eO26Ldl2NJs]["mbT^cbpld*L!@!`B[hO3li:6?H("QVB/5HVB9N^kfQ7kS<C5!!H0K)hX(oM>NPXgnc`5'>=bQ=78#>0@\6c%MO,.n;m*F2lTa$S>>,I\1*fYVN;@($L(k6k3HgWbiOiL:]ASV^\r"p1(0.:Qc*kaP,MO-;Q^n-_EnJp<&l\"7LGh(Wel8A4='X)K%)Q:Q[CRZ:Pi%,%I)#(CS$Cc\a0rD(8kVVt?EMT`+<^Yj+G]\ikhkl84liiSM9Le,l&Vke'*fTsLe^YpR;^;dE0%N6A7L><VR[!j3%/?Tpi)<SrreFu4*QXWNK@TCH8Vh.g09]L)hj/IU=Y--9iO\dW52I23\Z-AWfC%(#q8F#k,IJ5<C7@g*UUIqtlT>_sN$btiJibuBF%nr(i_IZDgU4"o&r]rC7TS"(Bal\KgN744-<)Z<&d>,\JhN$7^MI'jSRK66L\Seh&10+apI/.i:G3j19!9/ek!GNYcjU:28]NlckQ%T0A>V(&eRPbd@lld%1:Zb3e'&6AaIG[(##/f\"1)fI?5,m!_*p[$-X2p-_7\+XAhc!"qF_#c]X5'"tm9\'SH;h5G+817&(ViQd\>%b@(s?e/>B&fj%[RYe2fRX$M].3A&Sb>fXM)HCLs$HP0E9+u#e+E<"4-I:=iGlA96;fFm>7Dsj!B]80Ua/HYKJ?JQ#;U,;]!!>Oq$%TOCc*?Cp>YB3<ZcqY#h;qhWY0qG="d)VA#Fi#&ptNjY5/g_^-,Pgj\D)B<YU#d=-0"m%%(Lj/:P*NDh$2't0Rpps=GS&\l!48Tkn%'"M*K7J1/J0nPGGY7ZkVJkC1)-UkF4N7VtV))^*5/?!ZOkB_P6"s5UpcoZmb(VbW:h;B.1(UA%6),c+b]d]D1Yq!%rUDW;%Yr;KM%.S-<o"ZY>O*R;jbX(].30]+FK;g'TB`nA-K-:3\HNPdorKiZ>2o'4RC73QT(#R[U7?%[<V6G]"n*ln'M.&Fam,=oGS-NOY89>H\H%ogtekO+G";L(*+8A0UltXVnJU@M3H>-oP+EI.qPo9EL))DE;`*XGdm7$+(GA_+AJV1qq*D17*<$*.u2MEM_No&b$<kG;ITQHLW@E%l"uF*B6!Uq';KG\2-Tae8r/`$fAI[>hNM.B7dFpu@3VPp`W]I_frktH&G?qP?K$Br*qC`]=t3SGN1G`A9ln!b-\9C81o.PnlnO<J%KNQUU&"l`IFer.2bP21?&8t:;$rG32;ES(,K?_$QZT0.Mk&WntO@@[=1h+#l^8^$_V)j#\ge*7k"=>dR1Z3,\,@L.he!)%c@'DMs%)AbFSn<VG9W%jRh/!&%KNp\]?W[G>6!/eCIqnREK'FaPqAT02Wked-]Fbo]9-jZnh4Q%bg]S#2coe%kZG-<dRQ15=9J!>EARZOHX%15'WUXkaU,!9(m('65PLe"*KPl&u`=@'W.1*7RERr.:_X3cua%="b?^0-NokA>kIgY#?/h.5Jh_N$*m0@sKN]h6<=K9jiUXJQ:9b%=RX^)R:4-sQ?s%"#1kUKH$3UJEAmD'>X61(ZL/0Q3CkR^pAsn$:,-%1Bk3@8KZp'q)tY+rpqJ@OcJZt>@ml<`[P>4E=TrHr]PhR&%Nl*s,-\8r;(j2*K&O*`23[i40r>0)`WK85V%:!fePbWtdn,*U)6)(1%r<l+LE3N$>?VI)c[b/WV)(sl^4Q[Ec*h-`BO2;#6D>.%T%nj$B"#dd4TQ=Z25KOS(*0]J\tHeh>Ta>.LE`AFQO'/oDFI12DSZ(h;P1ep_A.B@VB:J64uq_Ae_dg^QhkUQP.-Mk<"Yug$,mUenV%VhDmDUjrSXH\\)hZ[DYhU[&qKQI"GGqWrT&UPr^9'^e=]q^U+XfU;27(hX3)Z2j2cQ76d>Kp?V/+-sL:8+rHX`7$Df63U!QE^,_'%L+p&%_8I/#eSii.:/gVDW;T9!psMlYCNl@D@)R)!I_LSB'>A<F!2).&fbG^t\MG"VO-(R(n0&@($GE)]=EiCS!oI;mrt]2*JFlH]%nc?:3fcbHPF+mcCo[\u3IKN8-O8T+DaMP2fe2Kdq>tg9W1E^MOe5OXY`i(_CPF<TrEgum43NX6En(t<J'\:;qH4Xl*dU^0tErF(>%#`n<Jl<<AOh`4m(i9<ZD\$oGc#pp8CltCQ@#L7;u(Jkk&A.s9J&e1%jMM+pl=u:*go)PA'4,F!enR!i1b60H=C3e/CD#t!BK$-)r%h:"ZaH/j(FPTqW2-;"Q2O/rY_O+0JsYu]b*LW)N,V%(!8"0b1YH-1_q^B'k#D]B3"Eu'i<EH7gk5,1&_BmG7Ido@FmTWWF4pZ!qO%b)W[pYc1t-_-[&U,rRd'#Xl_c[`K4e@Y6oA(k'?W^7Amj@7@gG*/GKRs0g`.VHUI3#$kaV*]R;:U2V_X,[KB)L?8h&f*)_gBp?:j%NZG+\ii<q&iP*j$_H>^YD%s&b^ZI/D;JBmBhdXqRWi02j[m[>>Us&0&\aHLl!+NV3GGuW&Fo#Wc[drMCHb`Y/nnEcg*S-K]NF1IH%-N_$:^un"'S(LkFFT/YJ@Y3n6+^Pl[$hEEND%eJJ7KEmi@jig*/-[hX\">!kD\;c#B[k"g#YLHINm,rJ%?))b^RTMo<nTkg7/FK:%S.J/mmQJuN\L/Vd2,oS]67e-cs.^*V#"j#2T$#(S0\V_!!mE^Y4!9bQSQbf9$>83)o&A3K9)kD%U((L(TWCG>YXo8j#3,4YI!H=s%m])]1nUPgu!q\`5O?F,I$A>CGXREf\"VW]>W,??h5X;>oC_oYa!4iif#'r-*-=D:8"&9::>s5$<ac[jKAf2oQM\lgd(i9B@]9b$L%kfit-?&t(3rgYTW0r4Wi7G,h0\0V\#K>Y5:?37RaAgme+n\HG^csr/Z!e<Um&Y;Dp"p@!+k-+uW&hXbe/%2!%lRJAh"CHQ!2&lH9%bPu1cP5lqoCHP'*:DF]H^ei>iQI8EJn1-d;Dd,l]SOKO(Xl$c@CN,2mBkmB$ncNIciPQ61ApP\``$;TAe=c_C8\$0'"ptLNe<X7t%C)The9shn)%l#nHA8@+k'!Ee^A&;g"p#1_bH+4?.jb1_/;$fMdda^dd"K\#^OE<csQp,=S=YE?Vo7"8$DKhPuB*LQSOZh"O]ia3%%1-\Lj]6,&p=%V?J4NkHP1)'(WBM(64pKon21!5H*Xd_pbko`:kWcOrd.B<n.oH$a\Dm_mHM*`C6b7YM*GCsPN/co2g`+r3-m\ou=%5!Do__<QeT+k\G3qLc-fj&i(,&B<"1Y<_*E:]YJ2OPE*k+rcH%:FCOS7#TdTYQp3XS%-dcWU'Q>VukAJRT^9W,#94\P?,Nn=*"TS%UM&msb+`PN()c)gK+84<C5kG?m4WgKLoj\QAJ=]=ds.#AQ?"<]PMFnQff7`l:[\ij?cjY\BfU&rk,)]&7ZeZLA/)DI!ur\2B5Fg,%%>Nn\b6=_c`%Fj\%**$pc+SJ'"N#$;l=Qpho;I"0M(tZD\b*G;FOQ%DFY..nNjff;COaf//i;Y)=k]\]HFZQ:P9\"3F<N?n+g-bb%_!j6$B'h"cZ<74[Sg&RC#S8'`5rahmK4,S$,YA5nUiP0@cQh8'lKO,UR#0dH4On:>fk<;B4DMdlL"=*MK2rCS/3go1YF7\M&N#\!%)iBfn$S>k7:MjQ,$^3HG[1O>-*/R(Y)Eb8'/U03N3mnLub.(\^6$ShU0V^$:nbDR9(]u0*SW7VLlG^_g;O)#'#(fMiE6)\qb+a5U%JGFD3*=Ta"a[]/*aD"2+[%pN-Sl?]mfuc3/X&jY]SE$IN#O443LW9%:eBXk*0B$W93T!a)G8HN'aNtj.*L@F":RU#RiN]bh,AB4d%Yo`Dn^F==;@1T%Z4,(=LPCjd=3a/F]>"Ol!/nK1j"^-,FZ6N(;O<-$$dl6bXIt$'X2NOLCA>OmT)uEp_mr$8X:chr8mTCIdYU]&*%?C1<ZTq7"1$*E@8<[tS4SA]IgZoN]39pK41;6?-q!&F)83c@"n;!<FL%Cl&B=Da]_#4=H]SY2`9A-?YB8]Fe_5E#=4E"o432Z/!&%a$CbrVaN:.^OnU;4m1h^?+25'J04P6p.G8JkD/b"n)OHIVdJ`0J#Ajuo;)Co-i"'eoD:0Y2!=>Br"R*@$1%1=:f%?<b$[\!+=Vpq%I>0`C@&OJlQ,0MM#/p@kfZJ_M5=9s4:pC.#Q9rnQOBMj#942ZU5VBt%jaarOR[5/lEi<=L$I$;<3Qs/Z,\Fj2*9-`2$CTm"1LObu%_9AR@.Aem'IjQ#[*))g;:,@.[c[`)7j>B<EV@_GaCRZGeF6IKGo$+tc)/M87(hZ+p*3u)cRkkUt%[YIleXllp3E/)VFD&th*$h,l%aZkF'F)ZF0A'a*$3A<XJct?2PT7ZVu_tPsSs3CrO$$.48(h?<nN3\OB)fcQZ7[M20'c@#s@;=kVNh#t9R3[rX8TNNV7Sq3`/32hR%'0.Dud%jX1N09B'G;>=W_?S.S6Q*Qc,9g]PV3K\uOe>UX<5tq1fN/q^/#RH"]W[88QLW$O_HBK)9,VOPdk)f_jj^hoA+uCKQ]q,`%H=',D9F6=h[4nF"k%)GaeX2I@1R;Q@VbCfk3C,HrEb:Q^S/e!E82IjA:PbtfKf,X:VPMk'5+Bu:;aP@kh+]?43>jfO%KD)fS.Lf=%b&Tgcc:QA#><4!/VtB;6W1=R4F6[s9'$nY[5G=W\"SI_prY*<K-Y@`qTMMQ\)(@eDmcP;a9FN$U%ERW7;B^WsYTT&da@$S;Z%PeN%+]2T;72dp=LJ7CbQ%qna,SJ(Q9U?sNYK2ALE^>X`3[5<kaL!p)d>goW,Ei."og2PbO[O^FQRYQq9eu7&<$`iW;orQOEe0NMasE7!%ai%UOMo^8]R`P_I4q#sfl8H0]:9'ZP=]Qmdi5qd@1.e*Cr$R[7b2e5)-9Up'U*u3\b!h@(H)+,'kpM'UR5@j:i06hs-(7YuFAskJ%Q-)rMZ;nHN<MkG7$"j-0>3iL#=!lL`b'IV#@$sblVC.Z9O/2nhWK^O4HBsG`AL_GOg0,uKQHQaK6>r87gs;eV&rjHJ;KSmMh+tuV%&eVcU/MC&QbJa-QRD)AA0,+?.,m"`3_9[^cM(i?b@@/Pck)tOgG%)f'R#!IDWf<X8*HM8&9I_f]PYAJ4;iSpnb464_jX4/t$o=*B%CGHl)K%J,,4XgR`JI;>a;j<u:16b[sBDRR7aq.H"PUaRUA_='u`KfDq;I!<2+NojY#pLtAY,*PUcWI[s1RFm&1)+&Tf?98(T+QT&%<%u3(-IBXEUR7_m;q,:aO3DU.);[,=Aq%a=-<SS.'`'WXBSJ:ei2@N2oga7BNe:%<ZPg&,a5CQCh$hi'j*q`8E.TI_OiJ>-3<:nu%M!"m[SRJIHK!rsDfa3*h7s\g0n-h=K@E^MaH4!hOdHqe]5(Un,`meYBq\5`rA,.q1J&VshGm##F+Cun\*/9F>OKg!Mr^=c5a;>ee%\/X=WdIATUa5;CB#pU^(NoV1DP`:j1<cWX^7YLS2QcXM1.0Cr+lK"J,Pl:31,a>WlEo'[5:Wf)!)<WI-7cc2$P])iWZ@9gOqTSV)%3+4go/>JVECp]G8QLiiD)I1:Kqb4*7pier2lK+PMPl$fO";<t-`]O))6S[UVAt6o3*VkO]RB\>n`lh$mS/KfI-_/P:4drWLF#n'Q%>KurF3>"/ZbU1QfS:d<:FV@YkcMl(5_Op)23U\q=-tc69SF`8UUGE[.7^l-+fdV80kBU^!n;KB!F3G:QqIdrsc>??[n/5FokLF2R%r.M#@')H\3J#3d=BaJ=M".;3dcZBR._1PDt+]D4YZkbDkL/bf/=*aSB#*J4@r(LNC;kh>i/*\L)MbF:!f?;7"20&k\>cT)Jp%Y?^%Om@[rMB\JZ8?PgQWL;hI-b2E5VPKA(Y2n"^T-[_tV3ajh-<#uI<+]#kRS:7=<Og/YE&,t6cf.!r$;[\RPNhr)$:).&ct?(H>^\$L%.E_:AEoj&a,:V)>qMFK8VU(Lk39?#nR5S$=+dK*&V7KWoIaq5IXtiGIccTD$``AtVoi\UOfCm?e^bW=%<*&@lr`H$rp+o.D9`+1_%7TuslQKbP`qJ<^*>GCqZ8AjO%EgbK`VFd,3f4?FUR2TD7S!PSjAP.?\B&=tU^J"b!B53!cY$e+kQjOR?MM?uWiD0Rh'-Y=_DDBaS%bS2$QV8l7C1(fSk2't+:b"T9"e$o7C'':R`bY2127nUS+YMgT<&.k4t.MWM;LP,aT]*-VnE6_l<p;qV%!sueh$e)2[Ynb&=Xi@F2%@[(`sQ)e1'4+4*2nWho4'sgReU1l8b'-/B#(;""\Hantr-OL5BX;]NJ>c91qa<YpK@g&(,"-@o`r;aoFfQlDdCZ)SNEUU0[&XhO^%O;7;L^i4(*.l:19Es0!]c1N*^kS@f.PsWF?)5m^IkFWhmAVLGoJJ%&c>UdK5(RP[`Sg0;f,L/=+9kWb14VlA[SIPj/`Q*M%NQ@^0%@@BhDTc3Mjnmg/J%Y.#8Y-o\rpP*oN)Lf#6FD'MSg+m?K7(E@H*^ThAYVqVl"<(o[n;=e+6jG=-Ytb3p*oO=<fai8\nEOcZp'(k>%\^r@A''Y1&h8%d,NAlZ1c+qo*mcrn3p>>2QkT_IXlYR=pp7!a^j'+"B(0R7KLN8f$?m@;+]SMh?Zj'"c\/$aT.m@Yk3,8<^WQ.gA%co3&6^ZJ*SXD$I%`"'OS+^dS#jUP6l@<c/0cqD'"ZGq_pSU;6ml=ib^/K,oDdXrTk#*%Uhm&W>=7>#2oGDQ]b^'cs-0LP<<^L5p]%'\kat/uTM$9F(]XVN#C4Z()/>OhIHM.RE^M5C&?nnL$'t,eWbK"V+d(9,!_J\1T#cN00n+7QaYpq4?kYDMGXg+pb1<bf*G=QiXh/%7C.5=q+%Y%_RYUpq(Y>*8P9nM/0-=D9>M(#a#a9FlEM,_Ym$"S`7mYF9$I2/2quA_X9d<1d2a'YDeq]s-7a[L@o&&"g2H;#g]Yu6%`p/'5Q`X%=;&&<eO>d>r8\%=PX;W5DKsK7WY#PSA]EJL,f2X4NQ7BLdP3nVu;k,4UZ^'E$h0"^*4T0SBf)Y@Vp[QC1WXo`gotmCn%$Km/?H2`3PHl:VK@J<lA2g<W;5dj/G0l@7">hO4om'iLfWqj[$kld17R5>95R.qSjqFmfhW_q53`1C.m.nO#)TGY<#N$5$D[`tl#%HPjp,.jO*fC145JDm28]D)tR#mco3<Lt*75T`d97a...Dc[$h6IWe03])_eJ"plN7F#qoGS3C[jiRb$3NSR1c$d:5gc6M/9/0"\h%J"<VW,)jEe*%+/#MU]VD#BcSWW/u3>D]BFK9N.4Nh:j/!.NpH<Mdg1Mb#3NkQgt.GZ1>jr><ipF@B7et!*$\9F`cg,j`Vj^HF_>r%`4b@oKB?B%fh/mW='AHbH+(Dh87@g$n^K,sMp<77>70#@"ZSWk1L6k<.rYq*L_ANP%q&u+op*L%.d3R7>?ONuY3N9pQ6RFRS\R7?%KADT))mt]jUANn-"6=E=:?TPgm4uu[&_40kL3JB[W2>(pT<^fafs-TNMsJR;/Y_6?n7kJ]o=HL-c[;9%-)XjT.XRl)Fkf60Y<C>P%0/2Lnheh]uILo(8YIC2hQg<D(8,2q^<GP&T=mgUR@a/]H@1O"sg6%I"cE6#:FOr*!(RI<f<EeP;N%3ju5u?O.=n']-T&b'tONQUZ%qL_D*CS2@9'nX<.6KZuDJ/Y/CO=nZQ&o31\#(BIX/V*@a>YU+#D\<hrH9/"b?*6rh&:M0bb`J?;rcN<I!)%`a(TX!>W$+pa<!_h*%Jc@p[M9Cp6bBaY0L\`&8?:Hp#f%m]0lt"00o8u_/04W"3T<*Wu\GPd-fh6HFFlSOE1e8#(jugu]1u5q'A*?LfDPa%ZYh?u_+)4GK%Lr(@b&=4u,.3@mEjDP])8Ch3Y6bH/1M]G7U)h8qUiIl(YTiAhE%0K'^mC:3;L**Wk;[B$*Td#YPedM1;%G2R>,][`(?\Tm)RbE1o%7L*NnrNWX*ql3AkdEn`q[(n[qV#e=JCWleK#j!b:AKhDAd<4ODT5(IS,3#W-7aq<!A+K!*fSjH9HB56njY_/sC4Ba=?]H]=G'W8+%NP.,JP%P.6qn>P)F0d`CJ.Im/!4nQRO+NKIa6HV>K0OfX816$H$AhP)Hkk@@49/4c,&EBdO81hC(,aa<:/IeA!Yi>>GXY1'_>`X>%bP725=rM?n?i".BePI8j:t%F*%Pdus74h+S!0bk.Nc+Ab3u#MS&(Jjia#o.mSIc\6ZP12Gi(G"B/m=r07Yf()-rI!+%r@.@CoE#M%@+cr7<GJ1W:-`uI^gkeg@MJ>^=Zp<h4GJAGW5r)ZK1'ROTt8[UB5LL.`a_=OUG'KN](+M(.c;`6c5`\U%p/'/r.lI#US\eu"<9Mp%KqVQk?1q/cA&,Zp@FVf-Rf:3bnoZ<+[8aZ<,3O@9h<u9LD?jXeYuLj!kp0lJ;Fp+eCu/p'Q$lpnSCBmX)I;W;j-,+NrA-oD/V`t2%3.dj_*lct:138\]!-GgZ3p'7M"UDu<F4GB.8%deTW%IS-7^b._a]ht$-U?d]<WWKU-"DR$I%(;K5q$7NM(JI')`^)HJ#HL6/607q%_5#?UUkmk^^ggP@4aBX:&IYi4n:\IhNU;"DiYQ+FHreY\caX-H"MU`h*k9P`$tCS%Z"[=s?$c\KRA!!#eU4D^H2DT!f9dir$ufA:%Guc.?)f"mb<rje72EipQ`!I6$Of9usT?>_*W<?4\E<Q'6g4LEGRS.(In-H\97Fo9gQP*"[Y.6YQ]<r*@1i_0N5Y<Fe:bS!<i7K'M%$m;*?6QZW]p!SO*#K$\):-58@%YM#9P\8SlelWO9PC-%]%ZsU0PoGUJ)B>egO0Y'"/h=bdf7ti:o:m[T`DB&PM5=RRT;[S>ZD[J>%T?[9c5qG@,Loe+4C7'iO`%_)04XEVZYW6%B-MC@?csbLmPLH/:rV1g0hNn0#ZT0%ce^p:Rd-.I^Z3rt*W&=9X"OA+b2$[kF`_/2I%1Og)6"`rLES&7iN[SS_b3'UVi=gHP-2\GZA2c`LY+I?36)bGr!`gCMkMLb<235]1/-?A!M4Z`9GO7a\r:CAL,MPs%SK1BhS=(_W\%UK]c4LjTBl"R8_Yr#h`nB^GA!73EbJ$5*:b?PnZ8S/B3E>ZWda/,h9bL6)TH:4hGU!P?U^\hC/RZCrDsP!GTjr4m7IC=PQE^@ng0%j>d9$D)M&E2SCW'Em:dW$';*I''K?s%_Q?"-&UFpP$#UK&9Tnd,dfXcbh;\ZUmf?-@]\1[3**K<&44nAfe[0nYddcUSu?@WrFp*6%%'6GY$#3g'3MN/NIC6i!9B7#P,?,FGotResKX4-fI-og"Dj,j+mc9(Z&r7;IBf_I*ah1@jL1G@Ejl-@uJ*@_LTM_$h*!NnFA?Q$H%JJ)PlW-tGkfRgG;$4APoC.+e(=pXA!'Oq]HC!9X([`m]VcfS^@"kS``XEa7Mcp?r/6$IMhd0kBN\?6IbCskpB?#^dgYS:?(pCRQO%;G_iVMl#<=!=kqQ'?u2F_Xom8ri"kX$A_mHphiGKTFe.Df@2!ujCI);DKVGtMMm*KH4<d,#p0'W=fHZ/TmAtjbbrbg9-MfocZ-n(%TubHb][n(A_<BMc`BWiIc,<jEN_&c?7s\:f7(+*r1ESWR,IfI0M^a)'-JV)Oa-U=dr_'qc\jHr7do+$raH'Uq#$B?R3Mm="BE:B#%8(*=8U')+t2Y`'gBEek=eX6D>QUL$nUfAcPi>j7$.jE#92lW0ql<=2J<,@=BGH2eN,%3.S?CaP]F.!(&5*9l(PI7lMKt;1<Ps,G<%?P]i>fVo?_B,=`4VOcM5Y*lgQPJ'_j(0>5)U]s8k!QARAc+SC!Q\@UhV6(:96)Hu,DVu,\$n)n9oSQD'b?Y*;6ns&"d^IN#$j(dd%pAF4"$5k5XeYBM)=0TU2)2?)S'&";t//?>bp"(*4^37/*cITV`EULAD,WJ89drUN\(268/j6*Q>RpBUM)hKpARS+A#+;0$Faip2O%G_iIVGTibDb25_I+oMh`!,TpVK7jF&(FWeq/3kd<+s4iX,h0t8OCd*[Ob2$E>8S8+(gNsn9V.1Z6WB5PH*Wh3_2`FoY2j&`8s8*M%"kVadoRf/ajVk-&+K?V.b;HXC>[,^giM\mN>d^Kh$mYa?K!W4&HF[hE6sjIZ5U%/A\@Pn*CQ[cq:X1$""ir)NX*q'T?-Y3`PXQl6%==<jXWYJoM4<SDSDFsLfFgM@'pXWq`Hf/+X=B&Xo?WLU8fHnHj6.o[S2hhPD%,eg*l?HWMSj^](Gc3Q&35@]kTc9JrTNR5l3!C.B%`Ve*iKRh>C#"kFR'lXk@Y)9BaYbHRhrS(V6]n4M#/eXUGRWYrr[94-Kkci,]BH&Q=\.JA@CVjj@dTEMK.hXile[_W!_Y6br(Z!Ab%nQ#daBb''C^QqFUXPaXq]rqTc<u:Z8$Z6eM2fHoei(HPT^I6_)@-b&($\_!fOBI,Z#bDX*jBA6j5iO[KmLUfc;e\cFV4'S7`;s>Y%:ep<4PY&TPP"Md07%D)YYgFG;gE1L_32WVe+[5m7+lLJIV\B](,Sh`e#K;F7adu\K4$odq3Yrb%jK!m#']9*HOmE;;eC2helT1A&%C/[S-3E;p4'*T\CS]4rrP`oiNOrhB-e-<8=k9Sh!WP6>N[M18Q[_8$$6Z+JfXOpqbQpsCLknC[TlfgMT/kV6N#k^C60mL-r6Zj#$%aD6j/mF?rJ>/\t19>H^/ml1,\D&$A0&'jT6<BK!ldVor%(M/Br])r8j968qZq,S/d`Hl'G6="n8U5`%T"0,<n+I>D9(CD-kX=nDL%e'GXO&RjrF?VTqMTlm_#O%Ufrr/KbLZ\ZalMo>n-jHkpG6EYRc/uB_n]Gtnk2M'h!88Z1q2Ndbbl8GCE.#:R)]>AVaB^)_Fis`7n%\BN47Uus^\jUnEniIX#7Fac:1KtH[%FW"#c]IE>gF"?:Ni!H]'-#gLc8W4TW/JTC'_:8)1]I;/=B*`d`b-UF3N==Fa$8qi+lY5.+%&,G&M_VX(W8F,AU?IVY2g2:3H#GGCV*'E7ufku=#V4UIk=L44=\C7I'G>%@\C;*>R"G;:c`:XLh">"HO%,EjX(WF=X9e@Vu#a]b"%M,MRf.%)%01)I>K0ilD-rd87)*Lm+KCI7gsEkkF^3'h?0Rq+3$-38]QMB*<L2@S>HS]ZURKH%tT%A6fPP@Sf*?@iNX9rHQ%l=0*,%".r_Nh^$@m<t_CT71lusGHn[WPUQSkk%/4>oucOJ]gRbV9?dcW>+L47R`@%;lm`Wq1u(n2Ee:\J@ZN!#Y=-->N$><W,&EDR1"M@"%R8CDUp(%_3[L[&$dj]mKln'Bu0=^KB--a@0$sjtW(plj8_I_j?(q]3O<pcdYMP'N8(Jb>oT_):7;oKX&@VdhL6=:q[!Ie?G]T$WC%.RqbH\H4T++mjM8,2'5^>Ubno$;EJN'!]8&#'Mkt7&]nuA!??gdDDTK0uO,%S#0Q4oUn9hOE=SdJ7lQ!A5-WXN:"D&6`Y54>.=t2%+N4dVhC+gLFZ4A>A.o5XK+[opRX?-YK^TWBFVuV.^DQq\X\]/32G2I[DNZ\q-&]nm'18djJ9D\uM?;N5I!j.O@r*s(A:W:_pB!I!%/GQ9I%KZs4>[RStA!@IU+H@ZG/_;Y@1CP\n]>Ec?F0EC5*VI)$DgD\.SK#n-q*`I\Llr6&;GbqQ)\2Z'INm.W0$\Zk:(h,>)3U;#%ERuY"2AX-%(9^tC?B!5#eNe:"F4pis=YR:`LYL=*ZCECU]tC3i2?+u.g'qOQ<6<$[\Zq^4/+mW5:Q)ob1,d0dolh3c$r$VgWQk]?%lHF>Ug%H)7p^cOiV[CUHm`OI!:a3*1fC?`oqK9D+MgHNK&5E?0^C/7`"is28Z\iLO5*F4OV;+BtH^3#/.!"4%H;gaiKEp#8`@k=D%FDd!,Ch0lM=;Rnh")3(HWg7[[;9au4P6G6JVX/2l9bV.K!RTOR>\h'V),n?T+<c[]E&Nd;IBJE"7XLm*-9LC.7qBppC&E]9=d/f1%o/,2/f#KB"I:sqJNmXVF2$G4OI$2&oNS;_1#i[o.]1WVg3ftZQBV=KIUG!`6Ki/"d;%1)@.CJbbn)osP;M$X)O<Y^+HG&lF42rB:%)d+):[7j`S;3?K@%_nib)]>@]LTj6O[K[VfFt&kqQQ$S<YpZ9L-U0G"mRm<F=Fl"+$Rl,b6"^?1K`tK=[=D%D:pcG_DFEiq'F!*j%e8gA<BXVjJ)E;6>jA_\R71u$'$'.&@ETfm^""j>iSONF.H9=PBlG*"ZT,(d%6`*85,0:CjIAr%?jaO)IW6+,n?E^$TTMu.`b<Z0%%C+?fG#GVqKh,Hm-n9*)u_bD'ia+F*7cb!+e4Hu9<>t4P^!Wq+."r_]:TW#/nkSJs1ArpEJ+cc84kW(Pe\scs_o=g3YRrf`=loa%2%"o4e"PHV9<p`I6^mY#<Wi&(c;mQssj1G&sT<D\Ff6%0q7;0X9KCDdki$0KM4r-s2FIr[L.650I`%lP"^5hW`!+iGGFeICN(8LW8V%TYp"u=DJc^\.Y,F#M#c]kU8mH8Wk"6*!2[)[0)rge5[EN$Gu`n?."aHTYE1XiEh;N9S8&$iN&mKd0W2s!bX&)?=M\$k=RpCLmcj6%R'KV4%REs<93`4,<\m6V1]5e"93`L30J.`3Rk>PYb<T-_,$jA;'ge6ZQ!t8d;;:)-/08=@OM11MM+CQ7gcsD4>dO]\7Ypq[7#6HQ%+D;WSJ/<_:b-PhR?'ZAR;:\Rs;IbH6s(,_?)#P42LYdfV^C!MFedo:5AW^5[84BX_Q(G3P/La0ZA$ti%.!%,0($Q=7-#KQq5KNF&%n=LGg-e9QC;VWGGh8B0\ka9=Gs.C]1'>GTmT'm_"jofR*)Rr`hf*!AXRnOGeZFj[`)m^?5"/Y7<jp=M)gCU=t6pI]]:o6YEkDa64%X2h_Eog=.Dfs'UpZ2bp=3mC^ZS$a;*#L+Xsb)3NY0D2#(?E!#l5Y8/fPWS0ad/k[pPE:t_Ba.=+asV"*M&1e>F7f!07c>2%q-b=:%Vsg:Ie_E-j/Dm-BmYAcQ\:"E>(d1bBH+G*)lkco2CrA+^@F<0qJY[7)5&HK33U/VJ%.6A0?Oh'hboVp3$qN`PG*7JWDr`tM/1Ilh%@p7>o3'C9M]U@@#qMNG$Z_Js&o0:qsd#4c;+#btO:]cR<09d9I&+'Y\G.N6cq)=ho2"g^bP^Fk!`ZKUcRLJ2e?l4'N#pYX*o`4do%Qkt#j#kLdEKEA.ul"DRu$A]InTu7U:g0,Zk2oqO$1<5('>@GU+j%h99IroJ1^Hq/MOP2pHG)=<-,X*/CA-Nc5Za,[sllSnS138DH%fP"fM)jrENDW1-=l6A(fafRocPEEeA,W@<K]ue<egeDf*Pfte7c78_O:X1G3@-Jb_Ea[#&=u'0Gbl&j^M9-cL1?Y(\UF%_%8M"eg%Epk*_EMR1FB+piSCM1lZ)uQH]cY*9Lbi^?t"JU$8qtQq/;!'Hr=qP>;7@CV^mXdj=V"sOn];/?5lQeAgb0?8ddprQPY\D8HS9!Yf%bT\OCP0-Ls&pLA"`%&7.8pmlVqlJRdlR/!'R<=kcYs4\)AStn'07W[(9?kF>\WA+LANt5nqs8fuq5!,4C74g"ma7?4\RiKnR6OsE%,koE$/pF2i_8G\FR`PF*X6cJ[L%rIr\qpWGVXk'dBN1\/>8_N;iRh2K"KdV+g,;QMWbWiQYc9\d`s!0=GTef@5\DMsLPM^Z:l4B5%TVl\lVab2CPl[UaYAo.79K#@"pCtOFk1i];qR,u?3(6QX(&3\6o56$6+V^@JcqkXGb#A(fZ[\<G/a'VZggB/?d=-'sA]@M[<$O_C%7\Nb9P>-lX;20bKU4+L6KOQ-p=MNlU-lb1I0[\a\/aDtU3^jK]F-mEr4X.8,f=7hJB_8L*>>\9&i1@8[DK*OI-qg[^n1Y:GVT4>U%;*g-aSVc"QjWQ*#&qkV^00SM[#s1$KgZ%C.diIFn%=Q9_-ooGB.uG.F^B!&sYA^X;adXt)`qVC0V&ed_l1pSIVo_mDX1k82Ck>Sq%+)]H2qj!V@%,.AL6hJ#rCM;R`h*9D%Qg3#S:q%_>$$^0Ej1)+#LWYVe/'#Xs;j*nDBjFX-<"pfG0D_PkXU<`_+^<jq`=UTTST:e0%7[k2l'631/UYEUFs+Y/40^+=,\\a/O].s=TKMuATe'j*3ID#)PYsm?!:YoLif-3<r]o5&7;N@UgIgcSoZ](9bmKZe20AFsB:',+&%'NpSR+)j<Fn(#>CZrRrJ.^;X<DE;Yb?)$]\;0=N\L.:'Bf0crqaS+D5MpiTIY#\Nl_VM@7?/7HPe8_\0ZdU14Hn7G%GNDs/,nT/U%aD=2J!:m2>c&H#;ALJHum%@d8[8k5/mi@#<3o1iQCE$nq=0dVuXn!($YETg,>r134OM9g9#le<K2[O>F!kD'"q6R^#,O=GoKk'\c%9ERGb=SH!NRPN1I@pHur2@?;$T?f?G]N?T\P?Y*#l)W+OVQ:CZR=[.CE_LP0ITW[Yeh@-\Y"k=Qau1$!UV&>(5Df";=P;2#Q$O>c%GW-&cX3Uh[h0SUK&G0$d_;PS=jUR+8nZV*WN@GRnUt%KBF3q.K"JLtF%c*=6=;SG"23tHb,nu!Z2QJXF.f'Ym4R0+Z\rLV\Z5TTk%X#Jp\Q\gF%pW6;r3.Z34!?724"OV9*a58J=_Z6L"C52kWHM"8I11NjM#R(#"JU`f(%t0*)+/9c,#M3.YQhe7gE%_[1\2PdhQS\ut%>*i>NR.#rA!l7;%`Hp-%YnFJl^&Doa<b8iiHu9]/f2sUfTgXt,cd40e:0PJi2DL`6>*;u="AgiIB[%L`[^QCr:9E".clfiTg!#l8%aItMCnu0!(ieb6kGWU7j+%3N[G'9gr_$uHI',>hRP7PTR1s3V*gnjJerCYcB0"%)C91sB7`$5R2G$4F5U7Uf14kP2"?Ylnkr4&1]%9e(@9BU>I]goAuq,:A5+5`djUa`7Ld!E]63Q0DPmH/Up206Tsr$N5$I$@pWP+63dk#n?hi8=H#gAeO::*_r[2=;-JJqY;W:aEWCE%Q91UBGIR!;o8eLA?1.Tn2n:!fN;N.0q)Z2)H$,j5dnMWcY3O853Kd6]SOQ&lI=m_T]HeeGcAd7['VejsEI*U8AQpm&l<)"sjT$$"%g+^?WO&nDU>AFT5o:f,7JcP@G^nh]@q_1BL2&SAd<FpI$Br9hI9/7;K05562(@/S.q4![#2OJ4nCN!h>@!8Jd$o"*f>Um%umZP5*%Vl?al`>D//%+hbXJL=*Oc)(]gjZ(AO@;J=,26*`:qW=kbo4iRUqJTQR]9"u=n%SXNR+=[tmA&_42^&EqX<#\skh[Ss\rCO0Z9nd`%Rl(*s[2D]M"S]H1$*'sVZT/DShGt5U&EI*(c0nYTjYm50p>/PA\F'[34/3]B;l-5s>G%`I3.Q>PD3q27MD@!DjtT85UoV^U6#K31%qV8<45<9NOj<<.(f_n3&`+U4'g053(X_l=]4hp<t(YQ8/4E^!]=(ZLX6$tk'6IiF,c!b**Qd;FJ1[)WH53ua?XeHjBb')Ufm8=q.%;M[",h>;.DQR_qdY67TtdF&*DB+6&,Df.*N'q_Gh?.nuRH;tju(O0</HSO$]0i,5#o72s'+s2=IPpQecP9VcU>BjOdPM85`r%N":%+OQ#l!+M[;*9^5cC"TA;(7;I`r!-G1!M6#%'gmfJ^?R#M0R3%lRkTLcN)mi3XkN+"59i-9Fq99UA[%;R:=Bdh#]=Xj>MK56/4[m+%2qpnFVN7fuFcEcE:^U(kT&8oa'rR^*.=`hraXM`o=AU5UCI*K\L-"9&Se,<@a$HUt1m)TqCbb<#C_T"1qa8/g(30?=7fV"uri7":%=#]uZDY.;lkeF^VIs%MNrouuQeW'R/)uWhsqB*3dc1b"Td6CY!_1uI%bo?6E@#X,&C+G,9>_;p[b!!ENV]k73cJH;dkA0)9U\MKf%8V+?%6aEbo*g!e[T]SCE.L8(O=J^NU!?+go(3bAhLkr9KOqFE`ENbcT?iX4D]8K5E'8"iT45DO,Q@6#[&:9j&Mc"f,@<BqI%Tg-I%gcnu.V#WsIHAo#arp""b!Q50Nlk_`k9ugrgV##UPTRn9Orq3m_htBcJl44bh:4/Qs>bZIR[2ud`?YVJ?jEBLH\l3-EW\r!%l\p&7%F;/6b;d'IWFQnnI9B;JF:s^',>FXA+dn;Q*AtQ;YUg%ih`jE](>;Q_Xg4OR6ar7:7Hj>IEX#X>Sg/a=4"+@rS'Iaa?c2df;37^O^%6<=%'3J%m\I2cn\Q9$"q.Qk'cb_`LC7cU[<.!eQJUgP_!RqEW4;bRpC/QuDBa.t`UQ5K`k$X^TAh1/k@4O#e+[92C"%:Gp/YP2+$%iifZ+(R?@T%kko5_]W?eB"UNR#=,(edBj9N_UD"tKhXR:-.>fI+k8"J?pRLg"hDr`qj68*#&3qr7(+R"%ui3>&'^^>bK^D4>;aDE%%VpV#5VT!*#[.-cnklp1jSPYG6-3!9ngeo`Ytsn(0U5*nC1&IslOqYD/"c`0aX8%nni3l9LfS&n?r8U!%cQT0/7YA<l%H@BrJTIk%1oD43K4FUG@iX:Mo+IS&I#l/VBBrC-mhCJQ6?gkaW>#537ers@ZH;SA/@]Fb'DYi%2]&4d5&Ua7Kh0See61U<E:ph4V>5sXo_.8"%@8Xgfcl$=T2-F)q3:fp6o.WJid>B4`=dJ>XR!=r*O84U@Me-0t^,%i9Tii;r13LA0m2B]Jl627)GaBH)l3[i+bg8KRfBb]U<k/DF%>lc2i20N?^"SKr[hVE-m)5fM6/T/ko'W^)!BC4m,YugVjXjUdXeGO@GA^S)XY_tEpF)OTg^+%7^%U9Tk3?:=6F(4>Ks1ta]5T?OS%hht428,'=-RQ!^68-Amq'`G3LrBDl&TD&$S;hdL#C%&]_X9^#)2N#J8ocr4b^*qM-VdJ`0J,b4m?5su!3_W)Q'Ir(D9pRGu%K<UN%i^em$%Y,G\dKci$cRduLb*,/+2<8C(Wl>gfbDUMV%mq&1Y::S_!LGAcfGKCc/"ZBpLj'S)7d=I"?UL_k630pD$--N?9KAL[P)4"\%JREBKRZ&IfDkLbX9WTn(r]j*ooo"2t',L=@/g1pR&!_GKpk8c8/?5"6YSQ(a(>O@.Ve#9nL=lJJ2baTAQP4jfZ_^]9e+\_#;@nKK%j)XO7mUg;[It23o9eULW,K@06V^;8]7o;fjT?<CRFe5Y*ST81RD&-pjo?C[$6l5oi^J7b"`I;oi"JJ^::o534hiE"`?$9;V]+uZ!%!_=6)VV(RrQ`<,us0M")nU7+[90Yei.&h'Y9\dra2TrgJ<>;Tm>mn40Xj]B:9B&;'[sZQ%'/TYo!lQU6/b$TKn"/N8H,]Dg(r8*]%N7rq._94r&KY3Ah<jYYg`,Vh>-:3t)4Z105[IEmUauZODh6iLt>Su8,:4MRXEd4=8BTt)LOk/mb">sUf\i%f8]<U^5KoPc9<ijWp%r9(Y58>5&sf5$hCLRoVh"9j_+P#Sf$9X@jmFU\dXA]nkb!6b=8e[D?Q80tV(ZCFpl#Kd+ujZAC'6RR2p`LeRn&+EhZMfo0JFZe&5%FhNu_op(OBmEhmGNu^ms4!&4KfH;Zk-9-OopXn<'m%F2!F#AJ)"'l%h'Nmb'Gt;pYS\)S94qGNiTZ&F2lb15K,4D,dD7$TRCYTOW%/jjk@ac4G;\PVDL`mmMPFtdJ>/-.imQ'+7oX/fmkifQ\EQDDJW<F[g.1eSXO&XqU``0;Sq&n>]ZgdYM>8*=/a-;.WkN2`8SBU%S]%SlHXKs5rN(Xqhu_kfVkh-':n!5Uk7B*^`bhJVbaUCX$)VP++)46.o#l3I2iIU-,m`;2-1fTqFH52c[fD.W5rr]5EMt]\=2C_.7-8%V,sea&O[(hc`nf![V)=nW>1<e:4$iRT#^3F-cYmp=]l9skpDW1An.0@1sDBR]75n?C8.?qAG9Se7T/u\s'^Y3;,[*Pnit"k]-%()%J,B#5s3I%N/eUrh>RqZ%j65AXHDI?==aHc<$XbH3#Y8sF)^</&h(mp=99#I8*STG'iZXeT4XI\aP(W)][91J]NO\i<gM"/+<GU3$%Bf@31'Z@L\3[+]f#GBkYD/g'Y7EWKu0!.eb#u7'T0ZlE-,1AY&=IbnbN79kP-%](<k(\kIkU"H/R#P]J[3)!m5KM4[g#M$=[nnCJ%h1K?B6+rE5a>YB.>,nSE4\fRrP[CoS:ntc.UEa<RVc[!db)DEaEe6D.25I[7E`-QNiZX)Bc'aa04u0@)C!DN"-r3I`Y2$c'a/o0'%T9-f7@Z"[Y9]*=Db&I$P+nO2o"Ja?hQ#2>Fl?6!3.j<k"XX8um:[HgtJaJ+8NE.N$GQ3sUmD;Y[q^WC4MpFU[P0#<^UN1CVFDC/g%Soke*`*i"/!VPE4'r9C;IL0"sJ$@((#@gKC*g3^iEl+1ZV&am\-@=R?0VqGnXR5"IYippZNQn?";$.,!rnZ,_=kXADlH?sFgC'R9%l!:j3kLI3gIu1a0O$?cWj06E2I&cV>@U"i&7Ogc1>W#M1nEj;k4c.g*3aN>DGZM9C#;aV%I<D[@2d*=K=QhWe\^pE\?r#6ok]:(q%;2fa&P]*`e[]pe+f[_VU-+Mj5[j8OEg1#c%)_485lH\`IrZ\pHT"jthJ8]?D0ishlHE5N0qS'^_DT<^C%oiObhCd\B9t=ap<XFV,%WkD\V+kD65EC]kFKXge9>Ls=3$8Qk9K<PP,QZ!8g_f^>$KC(A7!RFXm+K-hCB(lgOj,95ZJ*aFE)46Vu0kE:o,nBAlG&IY9h$j!b%D4q[Eh?QV0NLW4c8C'"9(?aW/`m\hrP8d:QTit;t@KoU$&];$$,.EjtRbj6ZfOdbnb7n?Z+['Ddq&&,6Bl`LYTCZ8Q'<-39_kMO;%Up8V_ZDCbteX.W@TW<IA99$)B#rF9(FSt("_t*5RIYdo6\]Fms^YR^9-.Lq8%+k+R$071c+AnnnMd;3opFXEo[*%uV7JR=PEKOGI%Z*)u9Jj3an,4R8F#stjao>i`H5(klIj*$Fce]AO>k-q@1oUBI.@(htYj2G77A$Y`OT%P7X2OQ#o+Q5edmqi"X:!':I*iZeX5W#3D%3Q=/fBjY"+$1A?^e#;`Y'^#t@FUMCSKSFN[h*^<;JQJgOr#Fh4="g8kYq6a;R3=?ulJGC`i$,K4n:$*J--W,A4hIk?Hi1]4NH)Hf%ON<"-=dlHX"$"e=jdcCCblWpgE#[Td2i3at0r&uam#]F<I]n+KGA5`oI9/OS2%ed0*>GZ"XEI;/^S/KHZOi%D$'"q3SLe/oKLtYQ%,4_&H`;uYn+@[;K6,m-c*ND&f+5ZTjFe?%M`TnDGde5;<=FfP7=ShP9`E4X>p?>#V]R[f.\#D..[p?ZIlRmX,cN7l#)qWEFl];7+%+nAA4&)3:U(L7Gf7Xsi>3j8%^_:Xs%C')3j^A(?EDuQ&FW]tc.j.][PI#b8DF.c.r)OqoRb;eEj)8)a7`A*4PK9?c],WlDk$a<Pe%hrSb0M9+SUH4ZhnYJd\oCh"5/P/UTM^&`?1U>*N0YK_pr-dU4PPR*88Qo'B/-OX"O?Cij,W`^S)^8P+`>,ghhf\9rDNjX;plI*no%(gF''dkpkbo#raefKNbR(B2>B)XSm.UKRT4O_k:U>Y^Z6UH74k8[o!e#Nd"!4j.ZtXbmGmJRu?X==a!5_M33KIA[T^ef1e!#sN2k%H!/b;j[HECZOMJCDqs86hXV!d@M@uE&J>qTQ3LJ&FLV@S%HQ.PdY-4mWf8'N0MJlHOI$b*.@[O[Zi&)0LaI_;gf^VV^`%#M@SnEd%=H3g8l3CbNr;qY!o-6V*<]W2G:kkS/@ECf&oGoSA4;kkX]-*%k,@2Gu+P^,irg%dZL`s81(NPK-;[Bbj`V<T0`bm+K`eGNF]ZQ.>%rt!T>+6:3jF>#>!]g+46G<O=0!]OH2ntSEs6ccmXI:Y]o]p%/&/nG4o&')t'@21H//M#<iS-a,O/s\W2L@(N;HWj)('NX=+P&N9Z%06^YDbAIc'r$I4;-BU@@G]!3M>;fcEH#\hKHV4XQ['=-3?Vpjn/l2-Cmd%$CrF?\mL@tLnZb6$Lh'F&kEY(SsCg<#-?@f@ZZm;=/%j9?8)YM3uh+'*=42V['n`ajQ*'7EP]gatI8d5$b#!kkfTL*f4Z2GchkrVW\1m*+Y\(2p-YpI>V_AZqgi8K5U>-T(pn=3S1XT_*E>%9Cq>5iesiI:J=&Tm`<SG1_H>BR).=!@N%I,2IQGS.a;WXmUk]S`!^<;`c.5ne&A,nBl;$M$Jbhn3AIqApEs+#o&hm2W#$dR#"6b^%h?W1Sh%lr&pNf_u+qd?Y+OjKAUn%%YSbK02^4`VWpobI(+jR/D?!+p2\D>3N;G]d5ME>;=f+*K=Z"N?XSIBVGAu2<ORs2!n))Ke$%p"!548Yr!Pl8#:!PKn'N@1r!YMZ%#NoQd&+T6TR$J5rH+KEd/ErH_U8,c2D%3`'-"RllBIh+n4P9#<`2Y`S9sU5r/Kaan&9SmPnj%Xeu]^3:m%TEP#EWp$=d_U\@3.CutIPL$4E:YJ(U%PS.IXnpJ)]E@iO*pA.2u@DJQ>_)rg?=c+Um.7Bm@V\GjYJL+0bO-eY3*>.hY%4J0In6l1II(nbmNJU)Q:3^`-:Nkkl!YRU4%8js:SS17_p4u&?p%H4J6oC3O(iZsI;cc9-H`k=_0@d0!u.NTY%<$pN2*4d/*p%)o>%'gXL`MNBPRZqQ&1@%P]L7XX##Krnm[r*p`DGUUc("-qt/21o><G7FKmbk!Qtktd#<`^ISi'1c4N9PZ$Pe/$g\/P>[*hJ5"F^+.MX%Mce&KfK8!blI?aq9XJ,aB?_:F0>rT;&<[UYF#F&4^3M'mlhT(ql/OGBk"cIuqN@B<gPeNBPC893J/[55,]8h0[RoWis-OrP/q2a4%mj'M[n!K-BT#J&%C80e]*09),\:loka6<*JUY*nOFl0j!RH\dq9AE/ls/CpeVtcI6R6JVcC&Wa@)3S)"<QDgs[s1-lWBNdI%rJea%o]qVH1G'c8H+(5f=R+)?53Ljlh@g+)&Xn>7m!r<TI_`X(?[J@/F7Trf*cn+?=qV\Mc1c=@c*I6ff?$3G=7N_!R-Sfan7V(nbk3^!%[m/FfeYeRm[Z_JT1!Ia+o\hU$QVr5k<Lr62UIV=kMZ$An;.6KNYE@-Ep1gK$GRar7_rK"@5,SGK27XXWd\@i"1NN)*9=pZ3Y+2C?%G-WF%,u\Dtn0#0hN5;PG/,$uZU$bmpau4-aFe?121c2=Pk5*1^q%#U]#skL!a#fMX#QF6U4*7b^ZFOm;8_ioB$_ul?\><6%Yh1MK%QI,.o`n9L+VljeSJe'La_FRDi!`RjJYudbuZZ<r**r81QH,]A&"-%YoF%JAXM@i[T`pVG_hCO5p;IIR(MAh5fra+@5(VN9BYJ]jO%bWtuq5tH3&V.!LA[n=q<&og5\1S<3!6b7&;s(J_V6tP(Ia93IgBk9X<d5%e[e4]#MG-q>31..lF&-JuHGM$f0HGu7LIDp$3<bR'L%,hYDtg/3/*m`)TIo!"p-^p;Iu5;3/IQ<U+h)s'_cBh@7f+SKq4i`QCDkYWpS3]D'm6-\W2]q\KjHN`K(728S#p'CA'Qa9OmeJG")%i+<$%&/+1nZ#@2F4k?tea`RJ!,rH>BnCH)Oh,kA%8jHO:E^^tC+0tC$-,t\I/snjD?elQ]'@_-alF)LJ7a<+m.pQpY-6i:3W.n(`%JuMm$fl<?F,r<R0rekURJ!1R>D/hFc67Pq,l(:+1BZ8Uf`EtdT=lmW0J"@^pYJY]c+hp+<_H7D%&7`b,OAq*AILf0082/G-bO)E,%:bjS=T3^7>[aCX;6][T\#rTq/V1X8qE1XEE,o-/NgU:js]_:jYgM)hF[!RG"B'#P>-UE\:cbcAYs$m^k<k%&Y3<tpGVTTeK3*hOB%Cg1N=L70'f!Br=[=hO4F\<e'`_OkDLiHjks>7[?9KM:6H.(MZ/_F;PG<-RHV#9Y;d-^q)cB2Xanbond@&_n/NMHT9V*bJtT#u%DJ%?7)M*L)m3-k)CK4hJIGt."l(?ni8:oGlV"@GH\uaDbuqiog`g^n)s(]aI]O0e><,?YAW?Fbn[HAE^6NIi45n&S4f:?6IKUJ&jNA*%!c`idX[0A%M!U64*=5Bjfj<@h%4R3fSE\!!o@+tp@E,/dEi#)91<_5;RitJ4=SF,2o,:le,TD=;@lM:rLJ!aQ:6_u'h-qsoVfsQS%auK"Vbq(1++Sh%8K&@$K,ns5c.c<2k4N(:q5uL9k@RD@SY^#]LrkWB]`Bd)U,GHR\\0kBUK't:a(:l_SQ8'HheV@ioQZSDp=;QH,%[-25:j>b>'el3sTeW?A4Of+CMB+OgdjQd*>R/heoWC1EOW_s[ZUM7asQ+AU:j6#)8Y=9I.^jN<2]5#pXS]!sdLg=AOd7K-;\K1AF%"OEr+F.*Z5k9L)bk'/LbC(bTqh&p\H24l9,>"keA/XuqU\h+RUk3N&X<6YOZ6h[s@NNY`@:Ab'PN9r63;DL8$I6kJg$G]3u1lH\h%I1A<4D@D(:6W>abgsY;\e#6.]:ae_&Anu0Onl3@;T@\5PCW8!p]gRm(Jc\+V`=JWr^3cPk`UW:_q-iXESQ5:o93i,Cp:pQD;+h'L%gk$XcpfA3D#:(Mj3?H_=5l_G)BNj,J98]bEoPZp66g[`_&=YgnT6;rZJ@hDOKNnsj4#7bVC+Ta1gMAOb^.&XI5BGM\^&D8C9XoAS%6u0&I/YoR]10ZG(HQ4G$(5)6,2nli-'84iUr+uQSh-B>.gei>,\?W3Ur5Xs5.&nYPbQ-:+qd?au:;Sjt[e6Dh39ma2r68"0%'\Ps%^EVH#oWg>A;+eV_i6^=*(7LHQK@qKaRdF*1h[j=?5o#KDS.VGb.r;%7k(<52^R!`.pUS-QN%L/N(>>L3>KBB]DUE\,b"Wn%._D3]%D-`45eI8%96YlZqaqZ.ZB_$gG?#L8p3(V#1e8lJ&K#E#<dYo+]hd?Fo\c'WB6kK927@[o0`'>/$@C$7?V)]Da&b]6GXq_!83_Duu%Z?oeT)gLt/HoH([dP`7P\$RNe8kD,]p1q(\nK]U=g$RHSVQ8"/@eIAPN&p3b;Sq%X[&#p?oHddDcbA%f&P@uua-:-%n9.:'rn4t?%'F+@!Rf%mh^o\<="RCu'8CaYnU+clgMGf:p,g7r/HVb7[<9Qkt'q@K9\1gP%i3,)V?9S[WA?iW=i\Lj*d&u>sSC3ORG5f#N0qCX1%j:c\sQKlF%eO=4TpO',LY-U+@-u=l76(N81]Q/5deRN;W:J97--VCso;7rY!a4sc?X*p&q<Nj7f20YH=ZrWs4c\.H5SJ;T`kZKmE%B]AboH&5FUfX))@YHpbH(S-AS)cGkq9iq(iRm[:^qs(VG<'[euF_6+2_+KNJ>V"j5edVn]Fi="[;a\AD$<Hc1H&mo[`iHlO4RD,$%[C39A;HcNq+bal7_e#oBI&2N%:g]I3\_N(59MIG/0MdUOQM?ug*$L0FXU)tSX*KPd>PpXl0SO0gVb]O8.YJ7arC;3aGOJ^/cg,JE%eFGO.hiH+eUloE#B\K#)nRgk3.6E%XePE.'8RA5@LVlO((X2Fm?aC]J3R4?j-rFp-n[@&,^W1+;Ob,1!q,#67F8Wa:q?eQ*Z"pQL%^gde,/ijlRqYc>?Pesj'2#k;=[Ln%ll$:b:_NPj87Gj>P=%QU0L,LT_ID1bbab.<Bi(\H`8GIt!N'VCWW$6(rkG+7+cp0Cp83Q:G%<'HN`au4'OCE^(C)`,_a6Ck8=RiC-K1"76`jE(pqT)2@3!W0-0M`>aBY;\O6;[[/4)2Q`fARA*,mjag'!bNG`B:sseST+pJk.uM8%r<8jk;3un80u0U^hJFOF%dtCCF%b?bJaS`4l7D^1<O9@",(<LP&RFB-%-W?f;n7BW9+0Z`$E$/FVJY15$f:j3C1BK+=BK<lbep6^%T!eTu`)@7@[2J3:[E1/3$bHVF8JpZ\Y$TS/&>RXr"[dn02#(gHpk'sl2K#SUPlmlP%FqZEohC`i6&8+&E)LuZ1-Pb;9&:@5hjC.Q%/*FEHgE[2PNcXZkh3a]d8#m8ZV3mQ/ab,OjQc57HDk(3?&-o)l`4(A6,7QJKV1Y$7S-]ujFCtblVLlU,=`U*Nh"jj5/G?=mcHc.s%+:mFX]=Z@Y)^[I;Q@UI?d"2j[AhS3?Lcne&=.W,;o[E._O,TYbG-bB,Do/t&oE"u/=^ONXMPpMg_Ha[[__aq?'Tfa?:?3SrH_M_4%43<PFngWC02H9feQo@-$O_c^%kLErl9U>d7U<OHaKL+Q!eg)0phN!eq?B'*DKJ2a(PXWMi$`sOG05(uLTt0tR&BUh+0rRlAl=?S0%+A$16K+J\`7sR9RO99f>Mf326-@jm%rg6i?>L9f7dihsVW+j;/WD6!C%CPg^([HOdk"@2q+ADLoX7$tX9RkWUInoCKal])Wi3dJ\%4[ECe!/nmm@MOPG\03cu#?H*e_\kYp6Bb,F'o?&]9==^.kVIRW:o7sX<a*[CVa^[.<KUi#UXj+sA%ebgaieAI,?:T#T(XqoB&tt\%q)@st;3VqJVuS55]M1KHX$B6"QUEOlV9"ETo!6rKWC^n1<40?K-qfXMJ8gHhU@=_\T)k/gSHQ^2=Sm@Xf$ZU1Na7oBqQ9:&S.&[%%LY47;$,f0Z'iq'fT<YUs+Z_h]Ni8N"Fg0?k65:(bedc8Lb1hYuR4@30]2t1nkXfp)iLM#i:0&:C`RDg:opIR[%O4e$gZ^DOb8:52%`nLC5`L\.TA!J8@@^&E]L2t]rl'=)./9E,8/>B[aX_u0Q='-f>$L3%IV4U;td6ic<EgTS+++AT[X1igLXT=<aeHK!D+?H%O+k0Hp%INI"q:+L+F4sZRc8i7bI*&WBNnD)I0-rO?gUZa6<i4qCL<.7#)^5d<LJMhClU7k6Q]8@O5><FCm-OR:]f>'c&%t-Fj6IPIB^EjnS%mcZRPRgO9h2U6:B*PpkC*!lA5cqk`[nL".]T<)#D_%]r5%s*0"jFL'q1+b=^Rq45rL8MoZ!rL<G%ZY(G+W'>s/qAuY1'psB`<VkP%]4VB<AAfkiooV5!``un&D@kI=ot<V3\^4,RW8bR;ju."`M[bU5frUP`E\,h-SoX,.?$24f)lY^qaZqV#/gbT4*_iGo)B%'_Tk_@a%7n44"+&F>nUFq_S?kY,0SnJ`@&fs0Uj0><+8>S9&d9,eu@I.%M9tY,O7#YCs*!jrJCC\i,pR#GD01<Z/*%NTX,^%0i"gqoi%nQd;%G.fiS8o=!JNbaq+YeDDWNN+\+UAd-N;%hXaR't`X)H>1Hm+&-e=)Xcji#Z%M"3aM"_?9@l@A9Y8,7:ZuQAB:An;=0t2iD*]6+*'i%lmOr!PQ@PB)FAnoW#B0$c:JjWAbkVd=t@l3Uhel[eWdqi?n3hsZ)@^7S.82opa)s),;-;Y,G#$<k'/.PadM.F.<m&/R1B_TQTkY,%cI-(2)fon2ZVmG<o47.U"IjKh!ei2;/CpJceKQ.$V1c!`'e(,*KB/uB#`9&;MDcLgf]+[R[a*jq(),;OJf:-6UX:A*nJ>DL&;`GA%&)ft)gB$$!rnLe,%#=t\BLf&=i+%DR__)IiC=[>08r"R84_h)B2A#^"%=?D6YdB*cTNTujfK?"`a,\sG%O3YZ%e$eG#*>(UU>San%1>F)Y,:klJ.YbG_?#f3FK+;<52QoOkj^*I3F=fA@d-kF^C(RagaiC`^\H+V9C%4,"3^_h!Qn,rip3'=4WdrB5)/hI,O=\N$2-p#r%XC@n!e&7$<ju_$PN4&+kN&$+kakE>H<m$hJ*Au!2i?$f!.*s_OEHY<8@tX_!T,i&k2sLV%`hOs.e<&ib7lTN*3sMHK3#i=PL0l,.%Aq2O(pK0AcN^h1VZQ=sE8-hH`P()K5@6KG1MiI1.cK^SFgsT"3NONTd/?.Mu=MYXg:H541S.E5#!EfE\QjF_&::?11\$dZ[6a7fA%BuM*o"?&`ZZCZ?I1oA1k!Um$pk-&A,V&EuoO9c1Gl<_02QJ1=p?sLaE>G8<U,HFGPe4*_QcRL0V>#f`9-JJ/q3TVPah)`2;XXTDN%8p"9)7D2c?o"#j_U_umd?/B'k@4>0M"L(pBe(_&emg.a=fWQuqG+62"HB?@@&^.i]@,XXl$F=Fe7uPaAnY?=Y]pnGojM_EQ@d+gH%Yfd(ua6M`(_Td9b)UL0<=,6>RE\<5rLrCJ]7CH"W$XRaO%8/*+#2PtjG9L&L"63MZ0rq*^:As5:h_huuZ!Y_1j3)4Oa;aM3ori/@%F'n@kJQX+(5.6a$UakHd5pCV-5t[bP/a+9;1=N@G^p&PPa!m.1Jq]q_&Ngf56.!6o]WLO3qYVp+J$DD\Y:lt32na$sZ-jB66hV&,%QUkV=a7%i]+7'W_Re=C5n.a3H3lh+-]&70OMsOiSl"V4T#3JrL#F#^rhEQ#6[hp0ja"\XC=@;[Nj-m3gZR&&N,jG)n^kB&c]O\ag%N&iLA`d6G^lZ1+dk7"-A#V5=5."^je0"[n47NdaBqe<(Tpbc"GIRLOV'<b5$"(O\r:8!XR=\J:Qi>"-N:<0k8+W3^d[`A5"NR%Ha%7P!=5ZUB+hbk<R9#*S<3P@ogd.l\`YB.(9qejjY-&qb.)N%K=PZ4,,DGO@!646CuZ6qLgK6:+0d#&:gg$8fu_";lafG9O]2^O_gf%NQDRWk'#gpMNhot;bjsgdW^*eLnOg_U646m'FC4+W=Gqd,dHQ96@kiJaC,9#Qf&:4DVD>c0@o6$TT!A1nMj-lf[bHQbh83^'q%Y_%=&5),j;-XcAua#2fSoRJXrKmL$V48N1XXpJp3mRQ!F+\(*kKP6$cLp\,e\Lq]H&c4psmS#,scL^nR;;3lU3A]o[Qlob"<mp5DjbT%oj0ml3o=X5KF,G2C]7jCV32Uldm'_cjt*IdlPuo@$SV)#e&0hSnj!77MoF<(.n?hG?ZUaZnNL.(oFh'74MU._>>rjnmm-SFqtW_M%5*0VXa*-3lYZ@:n`VL';6;F\Zn_p/=kcGD]otcsu+\V'*@0%bq"G3J/Qt@g]5g*uriY5Oe3oJLlMeC5+Q=Epn+[.Wh3`1BArC"f^%#eo6I1d8p'POZY^1rH#LL#fL>/5=`46*F-?8C@4(liet!*rRLAjok/.1POdbn`[O3`WDHjj`QLk76M=,iQ(\;XZ4a:UFf=P*!+N\%]\M/e($MPT7;9u?:h*^lk$oX!!9PPQ26$sF]$QP@F^##=)Ika2l[<iB`lM.C*%'8+XJYDBbAhBE9P3.78d+T&427R*=cM-q;J"Gb%%H;f;rcM;$NFmQAUCbi$BQ(d;'.]LIjCoB#l814<XufZB7VPAEdA&B8ViKhe0QqUb@5KHF3N^M,LoC][_:iC?g%O+pU@>V``.80Z%EV6ao&<GB:RpDng:"I'!g*46b?B7<q]Al%:+#RT.k,Zh1j]<Q^ULkZlp8kj950^#K^=.,_d^JdGW=7sn<JM=<@5q"u9:Z:2*+9*k%*Tii(=OX_6=>f+l]0cJki_"c9bg3P_du!Xui+LMZ3^FQQNm3ZI`=G-o500D0EBEh8XBU9S=NZ4t>\,D1Gb4tu:Q+oie_)NW!1dT)%]GcD#JpjC\\m.EDGcl?>:DY%6A9AVmYPo[,hc+S2U:[;UN>i*57ZF]@S#Z7IXX`;K9]]>SLAj8V:1sZoXSKqN8D!dF(?N>o@.nUL%<dOFf;(l%OmIG/,E_OK3HsKC7"A=cqmJ/,nRo*XVTI+X$P@)d@=7G'kQ<J/3;2]Y-JJcXY;5*@glM]4[d@SBPp;pgk%#V4@4B<49%TiThp95`6]+425NrOAV/pY-IXY9SAVGE94@g"3W!8=fZr'IU:dft43>s,U\9E@t>YK4=is1^Rg.@\I;I!:#K%98a-5_2)dB!'#)V%Xt-@3'!:$C,&kkMc.K`L6.Y\dY)_dD%r/Zofgop_8,@-PkGlDG8[jTpXFr@`Zfq;U-TS@V!&dfr*YEW>[j8/B@g3!B<`$t0=)5t]%E+JHg_tQjhN$/sY*VjdZpL0W"FHaecN^$(WU-Ddd.kcLl>c<unZ39#+g3_aPh4gDrL#rJ_8V.X-*&XMScT^5`ke"I$s2$;ra$<\#%SH:3kWn?iNb.,>U+00':SA<g=Gs/S`6S%RBghR5^F/k;p`_eet*-l-<=D*d&@*<$sc2U-MjK"ZD3(fjH:j@@G0L_U!$U&U%;%4pM%..Yf$*Ia<TO`O]7\JhJF(]K/BdK.*&W_qOin@3!ITZ(rZ*O&tNOeG<rgnH3eA!8-ZXY[`I$GMOV.YCt=Qee"6"uKoFHL&@PJ5>r)%SG;0O*AT[C5tS$Hs(h%+<]3O0lP%K(oO^"9*qBqh>M>&F#(aIl5W^c(NGNQ,An5`MpAW>`ZMH<X$%@Pp9bUIu=++(OR?8*E,-o[E%fnqoO9<V.0ZXp>rqFS#JHX6oL;S@l0EqWK1L<Pd+&>[T+O.^6eVFha68.LE_D_<]l#gc25[&LTV$7ual92:C62.VSCK[\YrF2=df%erMBSlA_:Og0cC:-(BHD9XX`I/&f5,_/1cq!1(Y/V\&82$;jso(LV9gVK$0S?4Udcp8hKH1m^!%PgKggJ5cg\@IBYHhSC&>f/ZkP%!0=4K4VfDT9qoGeB+7Wr:kNK+9+R[Z@;Q)ck[M#.;Zi_m3eWAe4dYn,j>Fr_:.i!;p?D+RO;s17.?"kg+Eio#G7pD@MOKC6XY^E<%W/lq\`"7*J@s[re@*amXjKg31]ZstO;$BLD23Flud'>Bg%af1OR;'`*@V(=10-eU%7A_D"^1dCKcRiY"-JZT'7Yd+;^J;8jUKA80%!_#I^(T;q-F93;;Tt(Jr!X%tk]E;7VCWL0L>Bh(6b&rkl'p^^`0..hD]'9FP+JoVTo$dpYH`P\q*u[.K[BMPGN!a!P#g"`WKCuX^%P$7fQE=gN/(^mbuP<Ys9k`,?MZrIss?$I*31!>W0]QPN0@d;rA/k+?'R,'\H:F;0@=.B#,U3:m4`5uY#q@B6:keJn7MBVg#c:ed4%]so@D;%2I5D<_0GBbV/Gi:;,*>#-%3)Wn3UD":;D!!ur2DKB^7p:*!$R<3S9fph;[RlGK/7.'7"5h:l7<u20bqk19V5XL]rX[>T"%!Sg5Hp)cE/\th6!&s^Rdgb'j]e&PQ(?\9ZB*]]NtTS?8%N'(;eg(<e\VdP,cR'CE?-QS#eB&4J4\,<f),rT"amQpETjCoao_?qI$%IsFCjRe7rFRDL$/`/%R9A*Z]o@ac*k'T5#Y0g+U#:=_0RYXYok<Gj&(6cO67e7#;m4upSb>"01$1)o/)V34?ESLT;CE.=/hXXpJj%E?l&(nS[an3(%Mf=G.NNJ2#"r,+b;840Q_8?aGZeCtdBG`8j$4i%l]qGFLbZ].g=\G'mAGTPCG58J"(FELYYdTC72GV<psWnI^`#%Kl9T'(@2b7PY*t$G=7kflJ<WjEe7q3#+-rB@Dt)>$+8.?C1e21JGbht65dVe?N*;k1C3eEQ:-c,8gs3YDrL+7Y>+QZUF`1+SgpSa%SW+&cr2Ccc>](rO(&otXRIhX#OW`YFYeA+%,Gbp1F.o4(]cr<%(4b0doM(UQ_E8k$Isj=_)j8g.2r9Cl'O+!#@EEh@CEo*aPQ7(t%6RZ"4Gp#\u/X3pq9qD^:0ge$/,7rI<"$UL5YI&tEod]ZOG3E&N_3V'jMu.!6e#7h<[)!\2cX<f/>4%(r90.<N-,X2>]!#AG4/?XQ%o/EsP;VD^a/uG5!#Tqa.DJ/qk*9"A`nXK=oV4,faKR@6_%m4e^9SFZE@$eV`H\rY#HZ)-8]f1DI6hB49C\![5cUTm-XA$51=maO>%P82TG!bHmjO5,)WMRX(s*b%,:k?u+/ap>%?U\6n.qFku\;PCH`5EQ[)klNQ$R`mSB"aj]WB,tq0XH1*8P,AR8:.bMc8)O7M:V5Ue%0hrL?RV^C`h/OrQgF2ZuZI`s"=S*JkCF.'87^oC,f-V8=,snVa)Q;V`;ccjo#sm6I.iDgd<q+9a_V]ZsBT5".cCZ`f0'oXu<Y:\P%m$2(sT]I>'.J<gi\-CV4YQl>X\SqG181`l4.I1nj?tuI5:j5pj$Xg\'BaC<i@&kne2Hfnm3a-1d;rhBZZKo%.i??\TrI)+IVaHG\%l;>ik#\RR$fU40)"M822L(p5)&)Z^(ID\jk\-1V<(N>8?=Y<Oul):!!l8+0)IGL!1$`TAIni%;B.@FV8I=gFYf&\Zr/'qcR#dF!n%P^H,"gmi^.5a\H#^_G!+e[(t/&ege(<LV@Jodkh_a.VgUL:?E=W$4r<V?5LVZeb]nC!qM;!HVA=&aG"+b(]UA69'3OF/^V0Z[mb!%mN[Z7\U3NAE!M1&DTRQ?K3uaFqUS@).ZKEri,:T&i!NL\J6sc-VSL:G>b[oH5<N'g5ULZo()?6<3mlW<bUoHBf8uS1T_^ASKJj2N%TEVW5bHCob7HPtZ9MnfSDX*':U-C5jA8?)IaKBPiV/$"NJeL)Ggu,4@'r7r\(/c4aAELO?oLujt7'q3)H.sng@j`gs"^E\(\!C)F%X_^CJ&6OR66?Hr/H$77K"%gpU=oXX@':QtYZijNt4<*[4,DLf1;I.[&?l=F#W-+aIRtG"neZ(ZjG&_uhW%'5WAU0#)A!'t1)Tgg?%&?uoAL7Mo]a2Ar8VB*G(7aMYTdlcjAp#L@l3mP:D5cGB+hWi@qZlQH"TmVT?.&"(KD3'"J8rhkS?%u3W6Wd:\R9>NDlqPS6<F$!N%LErR8n;Ls<*_UTuV@*#K+TgIEI+34SE[ID<GNQjlDjb%o`h\0D5:B5<+NIB0Pb1`l9"T%:fZd?iK)Mlnr"iFAR<n<!5XHO19P93G%k5;LW1#Q9._m,r]2Ce:X>"!I8(X/YgM*)tWlFg/R^iJ$c9RPULTO_J"68R5Vs+WRc>6Uhdg#Ff*!,W'=L#<c*V05CdF>lH[Vk*=>%k0/M`]WAE97QXeR9bO47G%HP@BfkZrUniRc<71j]mAs)nRL'U.WT,5:k=2_XBLP4TRM?::o<l&:b@79WEQpD]W84_dMISp]EIr_!%#mIu:>d&o7Oa>/0<a%3S&$D+*]%usEldsUrVV#]0dX<Wh,a$O]hXD;IYg*c*ia"bRd;drjmq,U/ekft6R']E+$G=&dW?3:plFK5`%k<d.\FIH\m`EmV4btF*O6"Pq4d&86(n#Sts5.Oh&2o*M,H0$5E)Q9U+Of1R^Qs_3`$Vif)>m*JthMpN?$QVpCG'0LJOGce<M7NJn%<;LN#mh%?7bD2VS`j?s-p`u;"J3`#?"$tlrbt=>P5bU07\HP"R2F7IB)dq*-,BT_!U.ciCI1A<dFW]6/4aY>5M)+!m9??)JH(A@D%n>$[+D;)![iKm%A?U8!fbIb-S#H4+<Y>SUW%h:Grbu^Y%<NsL5qGQuXJQq02KO)=9#"#F=?nI/c^tEa>>Pe%!38RuZ.[CFu2o'U[%7ujTV87B)7J!GaD&WqDiX>$c^9CqE,2;*g.hNs3YdJ>ARfnBm9r%'XRp"4!AC*j'#/k8*[!;T7aM<[ibN_r\+M;V.,*CB,@11!^E%JA[34fi??n6c])>A\s0&2t@aGDSX@_IIh'GBZ+@!/O2,Tiok?m<7Rq4s)!l,c8S,gNH?e2SU`6je!:l/.a'o<#0EQ7)%EbTZ#bP5%X<S@OV.gfXHCqi_^FXok[;A3Oh#g<9%`Oo6XCfZlZe/L61%XaN:Ye^t%>'\>`n?MQnlhf\.:&Z7(^.-CeO47KR50\1eO&(3<[['"%Rf>rl7ZHui%;Q:Xed7R-Lc2GgpG;50FsJ5,=kIl=P,]/_eFd8<1gJ-r<ZYB3noA1;H[DgN,C)C0h.TI\,4+F[*I#iA.b!mHrfAm-%'Ss]Ehas@=(duAUMe9,Y"W8mRBlRl+BXu'k,BKen?lC.$R4uJ=A6UK0"O]d=Ai/&\c?Y4D"GfeK4-7jP.:&(S4^td`8*X_;YMo%/%F2W4H"gCO>!c7uk^;sEe1PT@-SL(Jp>g4L"f&r'j)W))sR'BSjX)^Qc<h42Z-Her2XGr"<^&.k]Mf*Fn8'S_JLu*eI4Y<aZS;6j3%N0UHnn=F^,^jtYt<8tm"@HZ?#MQp<+P+S>jM@re1_Q/%80rsG6d*8HNs!T<9<Fl954d7EnoUO6q^!'_okUrj@qg?u)rp3F<f/&gk%ctk\=-b_2aV97<b:4+P6e%&k4FY6"R:iMR""e@RbGNlQ**^Y[kn3gNm1od2]3]$J'V)A`--f"Q*O<W):?/:Ja4_IK%$U^H-W%N=;%Gp]o17!AUP,Ao9FNkK`JBEA3D?eq1F_#[ko03r1m$mCtNT\</D!W(FsDjm`LlKQ]O,XDrn>Us<k??9VhZ`W2g0f0@@db162K3A?;%iVPT3'H=m^*dd:Y@0,0^giqB'aGT,heb*pY@\S+^Z<%2OO_9;;S)ahDY>eR.9LReCOF%*>7=S'^O<0&CjGoIV=nGr^WOCJ^0#Klt%R\5a!M_lB[Ot#uVIpL$HF3K6JBA#jE*pS;]Qd63Q&2<9HXTVl_\>;Rm;Eu$\.J$cu/[\'5RM\0KZK;FG*jq*'P%94kAorllJPoS,%rS1TRB!rFV+Y!.R,9*T<GSr_U3I4:uRWh>_bcMbp)$;5Abb!`^W5QiH!T;-T@!-\m;UBhq8K=bqlcaK]gfg`#Th)Mq/nf8<5P]"A%B\tm1G.EHBk?l2ME,;#)>ScnK$d)*.&oXGk6LnH/?%j"dEAgQr>?``;2_-Wn?1/K_&5/XOY%/N<Wh4lLEn]m*;gd6ja_FKF^"UE8%=YR5m<QpK1P`a8)hL#mT-2i\Ga^.7`H.thl/UK7t>KRt3hpaOSD9$gh@[q"Dk#oQ(h!!RDYb/Wbl(YVOU2GaFcQ5L?dq?9eNGALl%e\bSlmX&a@O`EpV9ho^u^D`nd2u]Ml4=lE^RS7;VcDn]SE6@CI,YW,le]Gc5kqPTLV'd&fR=bKQRos57G(VD]:@Q3&X_nGjK2)M>%ok7e[?Zm-%j[ZKYp@aZqD4e<EE6t_SK0ojBd*hDr#>qD?fu1B@ls:+Pa5@4FfFq0<:8E2p+Al\-?:C9I0"a%*?+TJ<,N5^Yh8&=K%3#:#W@B1pKIi',/`[O.mqEQ8Gd**K[W)ng>K"G:^-0,TffViP\\oa\ai_f&E`he#:-Q0RX>JHU_-'=G<23pA2kNA9%RkaJ8e8BIB%.NNgn+Ru'<V8*2r^EQHRe;S2u<M[jAa0p'K/S3dODU('H"b#6_rm'Xkr=62tE/lesS8HBYURHC)/tkmO#YCbd7FX.LP&-Y/]1+Ng%5s21'P;.'iF/-+9pFrQO0T_*$].3S&kWm[1*a'HjM0pLZh#Pr<BB7aP%gsaRc*P@rP3tTPrTc(]go[0aLiW<0MHN`cB,=!tCM.=(%ksqKbOR*8:R11Zo'j3b1+cmfsC([1FOk.>P#ha5Zc]\@'ef?&.I:R3>^!>X2)1'-RYBn`B5O;^gqkmH:_$!N:P8!6O,W4-G6QUT;%+-/QhcNV$PmX\Rpcq-a1Z+Q5)Z>+<X?Roct:[@Pkfk.g&/Yh:>);p!EDZhIR%RL7?AdGWVHqhk<`Pn30qP_S*[tM$?+B&!BI)7QW%[1J##.jVn/A(lF.$5$\k2?d6QePanrHa-QR'-tRGcn/Ur-2D4RP1iZTU^).k0g+RjPI"e*!^VFdW4.R0n@UqN[WU>d+jt@!m9m#.%P^2Ga;m.0^?_9gQ@77"]>dm-6dZp9DD`-o:^A?5q-@f%:VQe8UV6r8bJkg;Z#jH3:qHQE8Mj;T.J8AIr*tCIFlju!;r2FD<<8eW[%8M)<aUFcR^.8R[$[.u$P-/>i)0-ba>Kto&oYFG>d"0MS6!]b3M('N)e*S:2YT0&X^%ciAW91jf@YRAobVrP=.ah`[i-$'3XZ'Ng\%)HgJnF2.iR91WX6,*elXn`7V?-.R#J.7^408;F>-ep]>M*5=b$VX>pJ6S16!>tmp@^e<@@iW6d[m]#;%Hnt988+<GDAjk=8]Imd>%_lBV)m4jj#"<PU#+&g?*^X&\lKr.o]C8^b2F/<=l-D\cW!35>8R2)Djll5S$B$]YZh<PImah=uRbAHt&+%Jr"G6Qf560;=H'W2T$%PqngPY7pJP<piRacb:e!RAD+VfLK]1dnZ#,n/4nS:'lUmao(M6P(l\Ac]Y(r#d=:^3?JXrM-n_p"G<Z:acN..M*u($S+.04T@P@E%;mB$=!6!5/a51</,tZ(cM>j0\S+2pAn+CGP-W4Yeo;Ji6p81$ZkbS^E1l\5-4d,8Lo`rB9Os,.Ib?%3fPYY9.[V_eOoS[\D3*3/Z%Sa#Ii3=T7V!Zt137MM:0c(nm@Md2Lh"($.Vbo"JRp&Vn+@jZk^..I6!B=s!U[mr[hF+]X93_kcP`Oa>3`PbpX-nCkNd:SJC1&8_a%8@2f]b>PC%%8a[He<<:BN#A$/DgBecAdu1kUpNb`..%hh?lmGQ#'$llXIMu%9Nu-mCh$`mk$0;tAG%rsFVN?[(.g/ZIV1X0hrY,.%8CVfR2Rr.&$pWnc'HqZB&XpYQBBIMWOkkDa2+ch-=5hgL!6mg[p7uDf<HFuteC.#:H/5IW\?9K]2B=!nd(/?\OhO=>'pqPWo0:k^%Vik-B%m0tQGYkK-1p*GtJU?RB!c;g3Y[]5E(Z%Z,SCAkXfF!K)d+_pYL'.%e;^#nNR@8;/<.Pr^lVIm@+]jl:&k3fCK0SR*[G$$a%B+\I\b\=T\n@]P4rXsF*XlY?,$l!kFN-H"j`n4nQ\NE14bi'D`lL(Rt/C)hJMLbGkl3RU'qp?B*a"j12mOYpO;(lZ%$F1s\G$EBb%W9+lEn^_`t:Li0iRbbIU\QQ!6$s/%i;6O_`bp*f)["@01-T@A4[`"=K3$_7%Aua)8i=#f=,WOiI=CYK2_2>RS(aV8B(5^lMN8M=k%e'`B8inkO;$(jMD*26f9q*L>M2P0UeJ20IZ=Q!kO<1MWMp/&$71Bg+6@WQgU<U?!hBW]ftG<)+"S4!_BN*b?43pCSahNMc5i2]nY%T27DP^.?(3N%6(MJBEpCZY`7WJM:ZM*7?4E3(gTkYmE0:]WfYP`(W(Q-sKUB6O"uEJ5qf6`EOle^b&DV1b7Un4Gea+T0i3#d73d6%Z]m=6]633L$lOef+JZY6,K*8FG,H?%B8Lo(CmAH-'J*(8/J1JfRe)CLMSV4FED2)ii)Y#4U*pAjO,U4lh%OB:@0/1NOpSt^re#Xn%.q2C69#5]>RR?sL/kNjhkLIg8.T5gm:$Nk,^8(blXJs3ZL'`a^8HRKnB$d=Sj93,RJGps_1WsD?Nlr@ubBC;)i`H#32qsK0Z5bHK%7/,Y9)S\-T:^0tXZ:Aq;gPk,_-@r61f$%D3cfdUiRmgR08ZSdBLOPlgT?rAKeu(%IJ1.dr9DY_@Wc<*'Z#JXel.'ORVCd-tM=TI/%8*5Qa5>(t^KqiN'-*I4Ce`sD<Dooo3E&pb9,kC21.(W@.Veg,ZD,hT)$=o_fI?V:(<0nWNUN'k"dX"*o$;@4jmq=LnKGmOUTn,Xt%Q4`'Ia$7O,0Z6dlbCJeg?5M$]SmbWJ77CrEa-&;Kkr(cl#tMnuD7e@1<-H2&j9@c$N.O\@GM/@*5%p[ZW[)#F/ZD.4C[u;:@aJ>]%.Cq]5]1gc+j?U[>n'mIC!NsH"OG]7=J;GLIF.V^gLSF9l"Hu*j?@G$6'^&^Onu\uecI#JEB!7c-<#XsWl0hV8'M]IJD-GI$C[b[*%i0e=[X$P<>I!0@.%o1h*8/G5LlB$*ZH;72J/N!"OEN2?AKLY?$2UnU#%s9UN^9FFp\H`"-SL@.T+^l4:$h[I,p!ElXDgT[pSmm>B%kr8a)<<AN.nN\AA9"c>::47;L-kuR+_acW<\PaYTmh#@15&ojJB-&e'/421k'h`6h_[s7ec*9HDWk'I@m%rK*@.6O3)1q`:>s?bY%`&AnJiYR2e+LA.n?g5[4i<i*d2%be5k56-JjUeGL`qS_*[F=(>+0;9O#7Ag57)rV,p8ciPUh&=`Zg6ArP.$@7@N*be8JS,S2od;"%)T;121"ZdL=8`E^.i/oT=%SH&ZkQW8TOcuc;S(C!!J&Pb"Ocr(=:Xp(,d:,nCQT6o/giom6aCmbjKpbn+JY"8Fn[ET34>Y,cW"N`%p'iI#\4-"eY#L:]ZGZ),5$-MsU`3Y)i0:LNj@9g.'06t$(I%%ngDT%peO2_QphA%>P2IR3/Am[pfs`^\V.%ZL`kZIZUYW@urN'aS%_<rkT=?n9Kg;c)qW_lDnaB480.FDWk8G2sY-Gsj:SUfLHkXlNc293N!=q,aL3,k#JJ1nT:F!\6GQ(gYt^JU]N:BKb9I'dPA>5ITK%!=aE<=`meC(ig0<26C]79im"X?/AVX9,`sE@P''?AdK$tl>Dn@arF911tbU5nLb^3Q+SuQEdGIRl/,#3I^*YJgs4J!R(H;'<Qn&8%PmV.m^ejqE+9b/pE,bA%QXQAb6\g2Xg>51l^LU<n`.)KE+PgR68jH*t!Hs2$m9%nGdMB!H`a-PU[Bk+N5s;S:US9[tT0tasZRgsS%Z66Y?F41`D[8t,M-mMso^mXl]O]fa7$M)pY]=k%''GE_^"dlC-?>fNmg,tH4(u)f:Q&Fl;ommA[9)jQj+,!)*]D5>j/YdS[Ig1n:%OG&d"Vn#=/"gCrgBoCB'!5Z^$-$QRqi!6;UW,E'L,!CYARn]\.]d]!+s.j6(]B2u6RK@25$Ol>aU\q!p3&mTgqYJVU"1;QDjU59$%I#sLK7:A*U,LiPB8K#'VC@,*oqO9&S=O#M%6Ug=RjoR.Q,[PJKL74D/I9T%`,c`MJjJg<YXST2lL4SsHZ`k_HAJ3#8WMLBCkdWTT%L;OQh=;D#BRZ$f.'G@F;.0f38=o>GmJIs2D_C<bK*]*O+eXdI\Ar[_&_MEi=VkOlHQor!iLE%S3CmM))9`X:S`\rff1Q52KSGd.i%*J8)f_\4CqWk!iL!4D#\,Bd=mf\uW:;)+eIe]7hg,%<oA+\ih(IpL?,.'R8g+_[%i-r[8u$%u^(P=R96;'uuV]jbgB],\+=Y2d<>%EG1o=3Ao2#&#INt5-[O='45ONbh0!H?=NH'q7OH^AT%cnW>$D[>/CD7rKB#%d\N30EVa1:^DnQI1-F=!Yn3pr68$emnEMJVhkcb2%`Bm%m3nD12KJ)^Rm[A&nRp8\C(6ei=2dBeJUUUt%BMZ\$9$1pFOY%Ik9ae-o%2ZLK**5F]E#[^6m'iGsnBrV7\5<GLRM)hWaUSJ^%0Fa8Dq@-qE?%Mh)9F]f40;isBmZ+(Cj"t^Q7:]%W<3b_0:GE=e>Vd8B`0T4P'h<HEAFcpo-C'NYH__`.N>G4hoS8;u@'>UO;AE&K%l+q-QHh^s(3K'F&./cF9`ss:#07H9]SQ-JCc:Mr3@g.%AEmtW;PV9R1m#L^J.VhoZJR'`SXs/SLd1DS1#2hu#,,aEfC2Slj'*S67%/0aa&rejLX<5c`P!,JGRa!+KtJgKBdSf4B1.7m5&p!dXVTi\4dB*Wuh!D9ta>jABnL%YDEaj/j0Gbe0\epQ](F5POHoiJ6I<OA;B%0U9U_>(:bj=2,ZID`"$_3M;7:h1%R;%>!XcckZ_>n(0OHAR,J%n_/>6YdM%V)(7d"O@=S78mW&(f0=]hm`C*c5_\1DBT7=d(qZCS%*Fr&(mi0e?\4p<O_L0u&X\:PhR1*\FO%of9iaccSCq.SgQpqZhp4R[8MA77barUfZ=[f[=&`e6o^D%rX%12CR)!gd:n@71+g9/L7%M&jMLL^@3u-/TH,X5CA2?r^@fJE+@=-)X.W"^1!8%Bd`?!oSPprWt>0c%R\acm0hJY#hhJs'BB5VrH@nY%gF$\.HKF't`0t5fIJg%q?g`_`FCT0,#9g,Thcdp8ZbJj#dV",Z(BZ/73]),m3'Ef!\g20,8YN6<\Bk*\]cSP^9AOFd`lf#Qk$TT+dQQ.>No\?#LTE6a,W,'%M@qUt(n!cUZL!OXY#oFi1('WGHf<oZn<#8so@!:/@#U`eGs\%BZb&[i+Tp8=\QDif;UcV&1)aaU>J7E!*WDO&Z3PWc`9$PCHCSC+%47XjGX//Ne#tC\CCIs5U5K:ugCok;Cm,t^@<;2O#2,N#tFf)N2<'k**<H>UK0TRE>Y-YK4kK*$9&;f*dr@#mVHBOBic%[#1,/n&>%8ot4^7G<0)gt++8dKQ-PO#!?u*Kjsid6-/Pq-`07DpdZIr5.SNd#L&gW4(e`/16_XW'd@Nd>J8**#Y/GS$1UE8kX5^Ajp%9e<Mbk%TRLE'LWZ@LRm^T\I?_#)J95=o$mf2XYe8t>0]bLCDei%cL)Z;p3,cfod@lMjl'Z1]=2I(k1&#Lm<$8M?.8IQK?ec>=Bkh*;iQ5'E%ae3_AS[3tZ"8q4T-hN+>O"@q:HAJ#F;^#%H22XaWs,\j1c:.(SF"7p0V8.P<'*<%:[q"0BOYDNj&Z5+@UH@#E<p/]5,@.="Zs9<O%WT3\Ik.Mqu@<"A^2D@%es55F#b2Z6W&MRQPZ_H"qm<nn$:997CkGpFfZAL7&"DK6c^H%Kc+H,LHQtGF_*@]M(F)m[-H;?/=Bn:KB%NpV0OlY)7"7"u3#c.Co49JL;S16ugEV<J^F.d8C-??aGsL"-0BXB!1,W;]irZ[461Rl*"QV:tR`SU/`t^PLWbidQU/W>(uj>7Vf9%?.>b?/jg3T`,]b^r\Z6k.5peJKEO^TdsQr'l$"`dnlU"umVWhdK8f3ad03Kt)*/)9AsC=f3Bq4qdX'S<Rs&"b`lO@m.hbc0&+M.?%RR6B%4jHn<:]T6^4c#?W.6Zitrkd]2^Hs0;:HlcmMA0Q7e&k]VbNDg0a1#8Z],tMkG.rRBpV$%Oo.TgnIG``Z0d\P#`$36B?gG7C%jP/t#k<2:pW4oR4,'@St`>iI]*m25H2d[J=G9>M>b(l_-bh1C5SG,=HbTA15RNJ'B6ej,_k#nB\JQL$Y+)WNAJ.p`)lf0J'2<s@R%>UQ]@?lqCY]X!tgZKJ\.]t.S$#r1J`7cuSRVSX@/`P'L0T8Z3`EBCdD/5H_tmAN!lI+s95:L.N-_IMZ]H@!DDcfS;Wnj)3&osfce%'*q6,'D\Y`,htNr(>kkQTem.LZpa0S]JgbNIbnF"iuWJ5haCqN=&JY#"^bkIPGI<jBXS&VPaU##8/;HaPpLfgL`]4HdIMF]`D'S,%>i-_;>nH$[rd>J7G:^CC?.ZtTg<$sp\"?japb/e]>@&Tt(puLECM!6F#9S0/7T(o^mDr=RYBcZp_Auf\[CnQ.ql<)2(.>80MLn7h%Ok\GikjRYK^%V'A@^gaCj#2L)`anti=SUr;lZl8!0:X8ZGO0<ZmJapa(MN^WH1"BTqRse[o@`Q"^Eb&l,r!pA)C72l?lOa%b+d?5%ckZSBJ\m5h*bFG+D40^MRdVPGhDH`>MT+%)+*V[ZQc:?9%E4h`+I8e2+#bql4heAJ44F[Qreie?,3Bt<pG#_U>@mM%%B+5?Du#lW%*d183n?-j5k$@W]UP^siPjdKY3Z8pofYnYZV)it%[!J<E<rp!OC7J,sFR.#QPU0-2fk46hO0LLRBN8)oII/d'+^.@YZ`!i]=&k2D%?(aS?Ul>9hB]XWBf`>2g'PG]+JFu^<+0;Ri'$05'_X#(Qk.Q0qN3&[1m<_q/mi.jp41b0p8o:eTcBb'O,.TE"RWHi`bM0_md$.<:%.L:76XVQ,;bqFqU)k!"nqufc7hBdFPbp('1?Lh#YftU#)#/6bFWSnh[E+d0ogJ4;`d2W:C`-QXFe+p]9>tVEe[aj$(G7*#F'XFS+%CfU,tJ6T_"b?7cm(C_,gJf7KL/pjipCS<<f?QkppI<*lH#llI>X,p)ZOpg1a#)]/WTM5QXmDE/77I$b;)qua(8"f8:0KC&@383YS%mWj3@AG8QuiGI`D\Z(NYRlB:*Qd>*sA8,\Cgd[XpK#G5hQY>enF3iY5NcrSk3Mqk-dL$0/Nf%$j`8o66&Z#4`B.)8GTC?I-ahaDR%Dg*aE^Ncfb_Sq;*"uKJ#eXP@!C3CP$q18rk]oX[W:%ICN6\DBfK+'Q&"ZIV&I''CF")LtZf.NC`Z%2s&M1[Z\[2f;.Ud>uH#fRF.%oWUQ_L*#_TW?%[n$QDm%qJU##2k#GLobkkh*_KfA5I2L7bdiSdEYa9tB)r8o;8L<!l&'iEk-mO@-&)t2d_k:j4n$ZTD"T4sf<T#!%>.l.p`6P[Dh:@XT,BesUna3aAkb7o[f#(R#GF^';W0?3_KR,D*bmHGCe=&lrHt(C6s3U?<@YDW$r%Y9.T=j\r,KmpgmrJ/H1kbbO%h=dB9<dD\:.#aJBY#mQ*n2i.lh0S7fBhH>Q<4e`Z($B0D12HPA53b;8<+@q8M(F8HEG)`6T41d08lSR2#%qMh;R?eU=?3W,XhskX%,4=FY`Q[VZ7%%.NT),$J4a1Xuft7Y^FAKVKhdc[=ZDLQpHC\lSh#^@G%L$gq>Vi8OP=*3kH3KGan_E<qNT\Bi[H5&EqT?3@:35&I%cKV]TXh6K(&l5):hG-7WU7QVGEAB&?-Eg3/:$E8$+j8?t@S<5491]ui=+fkA5(l/J8G\6/-`g\\7H;6S*4no921Q0#S6$nlR^ZKk%SlO'N3W76kPKNG/!D0#NA[nJkcd'fJa$?f#os55u$A6p[(*5d6Fk*c@;J)o6?=O?ifj"5<c?@T]V3=3pnFm8!_u+2ZHU$WC<[^<&%gW=O&ahCW=jp5I@\a&^4E3nC)X8CplF61;2o@q!FgL@e_Hf<>U?iek\T&0<2j/sa<]P<7sE;'(O*g]3?;VNn#\82>VPAk=rLTY5!%?<&s,)\N')[u0!tm48MX=8<+`\_gWAXOjGOH7bGl9?0c&Wm^"qTY%`\H/N5d)XI$+cQebafroLo^\aE2p,D`bI(M8O4V,fZ^p0O0%.U8Jj?o&2]kM-6jV%V"</c.?o9]uPK8gg<Y0ZBRXV:=Jc?jr+TB]bC#8BDrC-&mZ3mOO'4ndNN@T(rW"+!85g:s@+!=4O;=koQnE%ZZ5#C<ZP?sgh"]._2q/=I^C?S-GrO:*':Plb@ce2k-GF]/OLSi4@2"eI>NWbEm3WseS7fhG!B<W[n@BjNI5&V?oH=IB9%'_RFqrU%aVfU"P5hB`-8qu0&Ynd<H$AC-e)_nVE0F9kX)Z*fhX^?b=L7:jrhRl34%mX.b[e\1Q8D8+hJ1VXOa#"#1O:"4K0UM*&gn-pLDjNY%[9N2$/=>mJgdp,U6lm9'aIb6=aBh0nlo]/l0pFR>2Q[##,97_Kd7>+m\3Ii5$52iNShoikP]XPUUTE7AUu>&/2KTc=TlW#WS*ps`%<,oBmbOZdaT9ER"i@Z9to@*FX!##rOZXmh,:T)fjU\=l3QVJBPBE+)1^,7BZ;"i24Q$tp)S/_kff84O*O.2cTVm<o6k&UJBr53uM%bj#F1`q4o9bMk(/hLU+73H@1h.qN@0A\XIM%3P/p_i&K!a$`LEElM.@r&'=h@G*.]+>p>i:Emc$o@_B:3Vjclls=QcWpMpZfBOa?%BAA]Wh%Fj@Cd+,R:_&Pb+Nf*3M;?j+j`_:SCZeH9REsI=[\Q<TF841iX#"qeWR%aGq4*5t_`@J>[tn*X50)X]-@Bj+)]sFhaZVk`%4Zt@A\tAcC%i&C4*8pQkM^6Hln_i(JJ+P:)k<Q"j,+6UG&<1tuYl"d!h8>T.kF:l#rsYm,2o']=ETT5::\7qJMNfYo2[@`kpnbS6%PBl4W(F]qAUkHG0=R?&#fMOZ89R8VcCqWN=I3e2\pO'oM6#=/A#R4m\m#6Ae??L;C2h@2f5'>C,1]bNu\S3$grT@3-kjERrpmq9e%8JRSdE]-:S)Xt]B:faC.^9T>cJ0:K+X:/D;=%B2ed%3b56NG"_0:K6S:>\L-+&:^('KP!'NR`/5Bn#8/#Xh8(p=Z+XnV`&K`K6>2%pu1<$XKh+8\!AWJDIGPNj+H]t##d9*bRet5HA,>*OF&1[,<C%@Fa*UdH\"c?n_>F%Lip#g4^1pfp3i9H,2VigNjN[mU@YRp74&qJ%XDd.lNILC^6YMjt,t?)1;0@7acR(+*g9tMT[%rtngGEr4A]KUg=N4[B2Xs=k`Zl8@&tkK#%ufaoeRCnA]5&X*0o"+s"^H<#D`Qn?%-ip"C'h@e.'Vtse<8[\,p,3u%Cn"3T3YH@2r>,JB>c+(CQ,g"2aOq>L7FZH_W"F#EK+^r&B%9u?3<6'Wq1"AnP^\aFOCLO91TY/A%#ipR:Q#d2m'$`0/1%^&]=8N%P=sUkYVmLe/5,.9l"LJR2FL(!m0rS`:b#m2lg.S.V[lH@M(]>7M[f]Z5-_&WEdm.&)K*P!X\S7],%"&ni,6]bc7OP(R8/?_2($A:@T#1u?,27pb#2(6Bq]2^ORr/tCTE$PG/d<mmRl[)!GAE<XYT6hk1[rM9@m\Zbb"iRs'n0,6cbTV;)%iAnAg\uWP23n<O]qTpXTc/qA93^WVYT*kMc+DimE.hkGB]5+!f;=F-crLAdbm95ApgCZJAqU5jE5(j@0jUlgRrG=J<#%O'%4_i<.%88@+>[;odC)'`mn@sF:,>9'XM+VmZ!G26\(@Es8oar`uW5=<'GaiB*;5l:LSQRg3W,%lQU/^Hb4lcCI"I#FjIF]'0mkK-T<#;.fS%ToHnF%9C8"IJ2)iP#Gb3Gn)5/SnXZ2+A`aBE^a>(b@pO>92hhC.k*[gR=cCL,iX)=hIK7GI/PWA`VFTGP@+=,GMiH!5E10i`UA9I%b9-cZnYc-M^\e$-J,/WD+92#3+91rI55t31Du]=es*f@ij6qGPr9**i^])Qkhu<9<&-)7uT0C!d_ghU`rt'IHP)"Per@e0G+2@]&GM>Qq~>%AI9_PrivateDataEnd